{
    "pipes": [],
    "interfaces": [
        {
            "name": "AuthOptional",
            "id": "interface-AuthOptional-d3f752374a9825d15e2a9c9ece4fd41b12516ae2a1837a30c1ffc375274e08856e09fd1265a7f0dfba79daba156e588382885364d8fcd95a80a1fe34d0ca1aa3",
            "file": "projects/system/src/app/modules/auth/domain/auth.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthRequired {\r\n  correo: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthOptional {\r\n  recaptchaReactive: string;\r\n}\r\n\r\nexport type AuthProperties = AuthRequired & Partial<AuthOptional>;\r\n\r\nexport class Auth {\r\n  private readonly correo: string;\r\n  private password: string;\r\n  private recaptchaReactive: string;\r\n\r\n  constructor(properties: AuthProperties) {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  properties(): AuthProperties {\r\n    return {\r\n      correo: this.correo,\r\n      password: this.password,\r\n      recaptchaReactive: this.recaptchaReactive,\r\n    };\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "recaptchaReactive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AuthRepository",
            "id": "interface-AuthRepository-11ed393b9be99174d46407a31db41172a7938b90c25714c2037924517bf6be1d5833d719367762550490f2479e32a53a043f340cd7aadd3f5ff677e5411584e1",
            "file": "projects/system/src/app/modules/auth/domain/auth.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\r\n\r\nimport { Auth } from './auth';\r\nimport { ITokens } from './tokens.interface';\r\n\r\nexport interface AuthRepository {\r\n  login(auth: Auth): Observable<ITokens>;\r\n  getNewAccessToken(refreshToken: string): Observable<ITokens>;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "getNewAccessToken",
                    "args": [
                        {
                            "name": "refreshToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ITokens>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "refreshToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "auth",
                            "type": "Auth",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ITokens>",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "auth",
                            "type": "Auth",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "AuthRequired",
            "id": "interface-AuthRequired-d3f752374a9825d15e2a9c9ece4fd41b12516ae2a1837a30c1ffc375274e08856e09fd1265a7f0dfba79daba156e588382885364d8fcd95a80a1fe34d0ca1aa3",
            "file": "projects/system/src/app/modules/auth/domain/auth.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AuthRequired {\r\n  correo: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthOptional {\r\n  recaptchaReactive: string;\r\n}\r\n\r\nexport type AuthProperties = AuthRequired & Partial<AuthOptional>;\r\n\r\nexport class Auth {\r\n  private readonly correo: string;\r\n  private password: string;\r\n  private recaptchaReactive: string;\r\n\r\n  constructor(properties: AuthProperties) {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  properties(): AuthProperties {\r\n    return {\r\n      correo: this.correo,\r\n      password: this.password,\r\n      recaptchaReactive: this.recaptchaReactive,\r\n    };\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "correo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Base",
            "id": "interface-Base-69ac63481e0677e8cb4bf438bd3c1d3b5ed7ca52b3baec4d94c7bbc59446eee3543ce598b03dbbca1862d5ac4af66066014b5c8709fe8203609ae9611df515b6",
            "file": "projects/system/src/app/core/domain/base.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\r\n\r\nexport interface ResultPage<Entity> {\r\n  records: Entity[];\r\n  totalRecords: number;\r\n}\r\n\r\nexport interface Base<Entity> {\r\n  insert(entity: Partial<Entity>): Observable<any>;\r\n  list(): Observable<Entity[]>;\r\n  listOne(id: number): Observable<any>;\r\n  update(id: number, entity: Partial<Entity>): Observable<Entity>;\r\n  delete(id: number): Observable<any>;\r\n  page(page: number): Observable<ResultPage<Entity>>;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Entity[]>",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultPage<Entity>>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Entity>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "CovidRepository",
            "id": "interface-CovidRepository-04839776921a255a00b5e0f9c15c34b6d8076dac0ee1b8d8bcd0686f5e22329c97f29cd8f5e87a9dc7d325837d834ea1bec3f39e82a49a148dcad9e16a68b9b1",
            "file": "projects/system/src/app/modules/dashboard/domain/covid.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\r\n\r\nimport { External } from './external.interface';\r\n\r\nexport interface CovidRepository {\r\n  getGraph(): Observable<External[]>;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "getGraph",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<External[]>",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "DriverOptional",
            "id": "interface-DriverOptional-133ba6e4a5cb5e9049dcb7c8dd931bb878a5d6af55f0c0fae90af726f897e877dee8581c60b0589e2a6d7661455339d7179d1330659e8558c9fd39b54cbf04bc",
            "file": "projects/system/src/app/modules/driver/domain/driver.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DriverRequired {\r\n  nombre: string;\r\n}\r\n\r\nexport interface DriverOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type DriverProperties = DriverRequired & Partial<DriverOptional>;\r\n\r\nexport type DriverUpdate = {\r\n  nombre: string;\r\n};\r\n\r\nexport class Driver {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private activo: boolean;\r\n\r\n  constructor(properties: DriverProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): DriverProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: DriverUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DriverRepository",
            "id": "interface-DriverRepository-442c4fe0f518ef19702218a2aed161ad4196613e8184e677fcc8e6e5a2d85e17e3290aec533ce09411868f4782334ac3bf020a03058795c91169bb126ee67628",
            "file": "projects/system/src/app/modules/driver/domain/driver.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Base } from '../../../core/domain/base.interface';\r\nimport { Driver } from './driver';\r\n\r\nexport interface DriverRepository extends Base<Driver> {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Base"
        },
        {
            "name": "DriverRequired",
            "id": "interface-DriverRequired-133ba6e4a5cb5e9049dcb7c8dd931bb878a5d6af55f0c0fae90af726f897e877dee8581c60b0589e2a6d7661455339d7179d1330659e8558c9fd39b54cbf04bc",
            "file": "projects/system/src/app/modules/driver/domain/driver.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DriverRequired {\r\n  nombre: string;\r\n}\r\n\r\nexport interface DriverOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type DriverProperties = DriverRequired & Partial<DriverOptional>;\r\n\r\nexport type DriverUpdate = {\r\n  nombre: string;\r\n};\r\n\r\nexport class Driver {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private activo: boolean;\r\n\r\n  constructor(properties: DriverProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): DriverProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: DriverUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "External",
            "id": "interface-External-bce713b5c2e410f5f3c760d15eb8c6074df88026438160077d0753215b2487ec6a9abd99c55f5a5af6c120fc4f2cf216faedf70649664ae9d462cc4c9c193c64",
            "file": "projects/system/src/app/modules/dashboard/domain/external.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface External {\r\n  country: string;\r\n  confirmed: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "confirmed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Graph",
            "id": "interface-Graph-9a8340c0a8703cf33d6eba030062f243e4fdadeb3668c7023513c17a5cd3ab10cc57781f4365877c1b47047f0ca342490b80b164f48e7fe53b942b1e1927faca",
            "file": "projects/system/src/app/modules/dashboard/domain/graph.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Graph {\r\n  name: string;\r\n  value: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HistoryOptional",
            "id": "interface-HistoryOptional-227859afcf42da318fb241ca8dbde605805a04c7629b77d2abb0953a2029e2228b861acdec4f0f692bd1aa119b61cbf65ecb0fe6a32551574427938fc8fed63d",
            "file": "projects/system/src/app/modules/history/domain/history.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface HistoryRequired {\r\n  contratante: string;\r\n  requerido: string;\r\n  poliza: string;\r\n  dni: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  telefono: string;\r\n  edad: number;\r\n  sexo: number;\r\n  diagnostico: string;\r\n  sintomas: string;\r\n  tratamiento: string;\r\n  medico: any;\r\n}\r\n\r\nexport interface HistoryOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type HistoryProperties = HistoryRequired & Partial<HistoryOptional>;\r\n\r\nexport type HistoryUpdate = {\r\n  contratante: string;\r\n  requerido: string;\r\n  poliza: string;\r\n  dni: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  telefono: string;\r\n  edad: number;\r\n  sexo: number;\r\n  diagnostico: string;\r\n  sintomas: string;\r\n  tratamiento: string;\r\n  medico: any;\r\n};\r\n\r\nexport class History {\r\n  private readonly id: number;\r\n  private contratante: string;\r\n  private requerido: string;\r\n  private poliza: string;\r\n  private dni: string;\r\n  private nombre: string;\r\n  private apellido: string;\r\n  private telefono: string;\r\n  private edad: number;\r\n  private sexo: number;\r\n  private diagnostico: string;\r\n  private sintomas: string;\r\n  private tratamiento: string;\r\n  private activo: boolean;\r\n  private medico: any;\r\n\r\n  constructor(properties: HistoryProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): HistoryProperties {\r\n    return {\r\n      id: this.id,\r\n      contratante: this.contratante,\r\n      requerido: this.requerido,\r\n      poliza: this.poliza,\r\n      dni: this.dni,\r\n      nombre: this.nombre,\r\n      apellido: this.apellido,\r\n      telefono: this.telefono,\r\n      edad: this.edad,\r\n      sexo: this.sexo,\r\n      diagnostico: this.diagnostico,\r\n      sintomas: this.sintomas,\r\n      tratamiento: this.tratamiento,\r\n      activo: this.activo,\r\n      medico: this.medico,\r\n    };\r\n  }\r\n\r\n  update(properties: HistoryUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HistoryRepository",
            "id": "interface-HistoryRepository-a80d55e33a1d12bf6583c4a4ef852c43294678842c500908ee21b74c003daa0d31fc944d9e4f8177adbaf49ed49d5d2006e61019bc4d47248d4ca255408a4af1",
            "file": "projects/system/src/app/modules/history/domain/history.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Base } from '../../../core/domain/base.interface';\r\nimport { History } from './history';\r\n\r\nexport interface HistoryRepository extends Base<History> {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Base"
        },
        {
            "name": "HistoryRequired",
            "id": "interface-HistoryRequired-227859afcf42da318fb241ca8dbde605805a04c7629b77d2abb0953a2029e2228b861acdec4f0f692bd1aa119b61cbf65ecb0fe6a32551574427938fc8fed63d",
            "file": "projects/system/src/app/modules/history/domain/history.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface HistoryRequired {\r\n  contratante: string;\r\n  requerido: string;\r\n  poliza: string;\r\n  dni: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  telefono: string;\r\n  edad: number;\r\n  sexo: number;\r\n  diagnostico: string;\r\n  sintomas: string;\r\n  tratamiento: string;\r\n  medico: any;\r\n}\r\n\r\nexport interface HistoryOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type HistoryProperties = HistoryRequired & Partial<HistoryOptional>;\r\n\r\nexport type HistoryUpdate = {\r\n  contratante: string;\r\n  requerido: string;\r\n  poliza: string;\r\n  dni: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  telefono: string;\r\n  edad: number;\r\n  sexo: number;\r\n  diagnostico: string;\r\n  sintomas: string;\r\n  tratamiento: string;\r\n  medico: any;\r\n};\r\n\r\nexport class History {\r\n  private readonly id: number;\r\n  private contratante: string;\r\n  private requerido: string;\r\n  private poliza: string;\r\n  private dni: string;\r\n  private nombre: string;\r\n  private apellido: string;\r\n  private telefono: string;\r\n  private edad: number;\r\n  private sexo: number;\r\n  private diagnostico: string;\r\n  private sintomas: string;\r\n  private tratamiento: string;\r\n  private activo: boolean;\r\n  private medico: any;\r\n\r\n  constructor(properties: HistoryProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): HistoryProperties {\r\n    return {\r\n      id: this.id,\r\n      contratante: this.contratante,\r\n      requerido: this.requerido,\r\n      poliza: this.poliza,\r\n      dni: this.dni,\r\n      nombre: this.nombre,\r\n      apellido: this.apellido,\r\n      telefono: this.telefono,\r\n      edad: this.edad,\r\n      sexo: this.sexo,\r\n      diagnostico: this.diagnostico,\r\n      sintomas: this.sintomas,\r\n      tratamiento: this.tratamiento,\r\n      activo: this.activo,\r\n      medico: this.medico,\r\n    };\r\n  }\r\n\r\n  update(properties: HistoryUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "apellido",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "contratante",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "diagnostico",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "dni",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "edad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "medico",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "poliza",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "requerido",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "sexo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "sintomas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "telefono",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "tratamiento",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ILayout",
            "id": "interface-ILayout-f05a0baa56d59e39d9df97c8a56383f1e19bea056572989abbd377e2e7c69e830ab9348817d9a7f8f67f497cc691350f06c68d5b3b6905ff88f9cfc21f05436b",
            "file": "projects/system/src/app/config/interfaces/layout.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ILayout {\r\n  header: boolean;\r\n  menu: boolean;\r\n  footer: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "footer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "header",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "menu",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "InvoiceOptional",
            "id": "interface-InvoiceOptional-5d37425930a8242793ef5d03b8509dc6a8e81faaefcd1c89609a1beb6485e8e4f24025cfc7c43f18e9c567f9f3bdad69a325c61aefbd1052d424259e2ccea297",
            "file": "projects/system/src/app/modules/billing/domain/invoice.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InvoiceDetail } from './detail';\r\n\r\nexport interface InvoiceRequired {\r\n  nombre: string;\r\n  dni: string;\r\n  direccion: string;\r\n  telefono: string;\r\n  numeroFactura: string;\r\n  fecha: string;\r\n  detalle: InvoiceDetail[];\r\n}\r\n\r\nexport interface InvoiceOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type InvoiceProperties = InvoiceRequired & Partial<InvoiceOptional>;\r\n\r\nexport type InvoiceUpdate = {\r\n  nombre: string;\r\n  dni: string;\r\n  direccion: string;\r\n  telefono: string;\r\n  numeroFactura: string;\r\n  fecha: string;\r\n  detalle: InvoiceDetail[];\r\n};\r\n\r\nexport class Invoice {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private dni: string;\r\n  private direccion: string;\r\n  private telefono: string;\r\n  private numeroFactura: string;\r\n  private fecha: string;\r\n  private detalle: InvoiceDetail[];\r\n  private activo: boolean;\r\n\r\n  constructor(properties: InvoiceProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): InvoiceProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      dni: this.dni,\r\n      direccion: this.direccion,\r\n      telefono: this.telefono,\r\n      numeroFactura: this.numeroFactura,\r\n      fecha: this.fecha,\r\n      detalle: this.detalle,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: InvoiceUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "InvoiceRepository",
            "id": "interface-InvoiceRepository-209a4e9676f1a64952d4919afeae55e2f4e2f12dc972740ab3bbc06a0c95628a627370e0897e841cf69ddf3360442489cbd71303cbc29004f70f8b1a665469fb",
            "file": "projects/system/src/app/modules/billing/domain/invoice.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Base } from '../../../core/domain/base.interface';\r\nimport { Invoice } from './invoice';\r\n\r\nexport interface InvoiceRepository extends Base<Invoice> {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Base"
        },
        {
            "name": "InvoiceRequired",
            "id": "interface-InvoiceRequired-5d37425930a8242793ef5d03b8509dc6a8e81faaefcd1c89609a1beb6485e8e4f24025cfc7c43f18e9c567f9f3bdad69a325c61aefbd1052d424259e2ccea297",
            "file": "projects/system/src/app/modules/billing/domain/invoice.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { InvoiceDetail } from './detail';\r\n\r\nexport interface InvoiceRequired {\r\n  nombre: string;\r\n  dni: string;\r\n  direccion: string;\r\n  telefono: string;\r\n  numeroFactura: string;\r\n  fecha: string;\r\n  detalle: InvoiceDetail[];\r\n}\r\n\r\nexport interface InvoiceOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type InvoiceProperties = InvoiceRequired & Partial<InvoiceOptional>;\r\n\r\nexport type InvoiceUpdate = {\r\n  nombre: string;\r\n  dni: string;\r\n  direccion: string;\r\n  telefono: string;\r\n  numeroFactura: string;\r\n  fecha: string;\r\n  detalle: InvoiceDetail[];\r\n};\r\n\r\nexport class Invoice {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private dni: string;\r\n  private direccion: string;\r\n  private telefono: string;\r\n  private numeroFactura: string;\r\n  private fecha: string;\r\n  private detalle: InvoiceDetail[];\r\n  private activo: boolean;\r\n\r\n  constructor(properties: InvoiceProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): InvoiceProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      dni: this.dni,\r\n      direccion: this.direccion,\r\n      telefono: this.telefono,\r\n      numeroFactura: this.numeroFactura,\r\n      fecha: this.fecha,\r\n      detalle: this.detalle,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: InvoiceUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "detalle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InvoiceDetail[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "direccion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "dni",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "fecha",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "numeroFactura",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "telefono",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "IRole",
            "id": "interface-IRole-a56fc35bc677b68d992ca41b8bd71a38af1ef9faf14f3cb2961f49a5873066d62aae6d39c554c0dbb1968b603a0c03d9607a2ccfb8dc7bce8439a67c25353aab",
            "file": "projects/system/src/app/modules/user/interfaces/form-user/form-user.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { RoleApplication } from '../../../role/application/role.application';\r\n\r\ninterface IRole {\r\n  id: number;\r\n  rol: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'amb-form-user',\r\n  templateUrl: './form-user.component.html',\r\n  styleUrls: ['./form-user.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FormUserComponent implements OnInit {\r\n  title: string;\r\n  group: FormGroup;\r\n  roles: Observable<any[]>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private reference: MatDialogRef<FormUserComponent>,\r\n    private readonly roleApplication: RoleApplication\r\n  ) {\r\n    this.title = data ? 'EDIT' : 'NEW';\r\n    this.loadForm();\r\n    this.loadRoles();\r\n  }\r\n\r\n  loadForm() {\r\n    console.log(this.data);\r\n    this.group = new FormGroup({\r\n      id: new FormControl(this.data?.id),\r\n      nombre: new FormControl(this.data?.nombre, Validators.required),\r\n      correo: new FormControl(this.data?.correo, Validators.required),\r\n      roles: new FormControl(\r\n        this.data?.roles.map((role) => role.id),\r\n        Validators.required\r\n      ),\r\n    });\r\n\r\n    if (!this.data) {\r\n      this.group.addControl(\r\n        'password',\r\n        new FormControl('', Validators.required)\r\n      );\r\n    } else {\r\n      this.group.addControl('password', new FormControl(''));\r\n    }\r\n  }\r\n\r\n  loadRoles() {\r\n    this.roles = this.roleApplication.list();\r\n  }\r\n\r\n  save() {\r\n    const values = this.group.value;\r\n    const recordId = values.id;\r\n    delete values.id;\r\n\r\n    if (this.data && !values.password) {\r\n      delete values.password;\r\n    }\r\n\r\n    this.reference.close({ id: recordId, data: values });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "rol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ITokens",
            "id": "interface-ITokens-f684637b9e6b17d89e67e90f3815dd0257565b8c8a057f5a918841aa7171be8f9f3e4e1435c1c1531481fec2a74ff95f2089d767f1d6199ebb0bf8254bf2af28",
            "file": "projects/system/src/app/modules/auth/domain/tokens.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface ITokens {\r\n  accessToken: string;\r\n  refreshToken: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "accessToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "refreshToken",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MedicOptional",
            "id": "interface-MedicOptional-074b4585eced21ba3be4dc82aba52d0103dfb00eac906a058a590a77d8edee3b4e35d95be1d72fc7db6a9109a612df4b036fb10c46377df87d7b077588fd60c4",
            "file": "projects/system/src/app/modules/medic/domain/medic.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MedicRequired {\r\n  nombre: string;\r\n  apellido: string;\r\n  segundo_nombre: string;\r\n  cmp: string;\r\n  correo: string;\r\n  dni: string;\r\n  foto: string;\r\n}\r\n\r\nexport interface MedicOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type MedicProperties = MedicRequired & Partial<MedicOptional>;\r\n\r\nexport type MedicUpdate = Partial<{\r\n  nombre: string;\r\n  apellido: string;\r\n  segundo_nombre: string;\r\n  cmp: string;\r\n  correo: string;\r\n  dni: string;\r\n  foto: string;\r\n}>;\r\n\r\nexport class Medic {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private apellido: string;\r\n  private segundo_nombre: string;\r\n  private cmp: string;\r\n  private correo: string;\r\n  private dni: string;\r\n  private foto: string;\r\n  private activo: boolean;\r\n\r\n  constructor(properties: MedicProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): MedicProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      apellido: this.apellido,\r\n      segundo_nombre: this.segundo_nombre,\r\n      cmp: this.cmp,\r\n      correo: this.correo,\r\n      dni: this.dni,\r\n      foto: this.foto,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: MedicUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MedicRepository",
            "id": "interface-MedicRepository-3e74ba127fa502f5ab4efe7c5acb946901b3010dba15241be1070436f9113a8c9cfe6b33860ffa026bdaa041822ee4e439daad2a5ae2308e0c786ad6ea4c7598",
            "file": "projects/system/src/app/modules/medic/domain/medic.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Base } from '../../../core/domain/base.interface';\r\nimport { Medic } from './medic';\r\n\r\nexport interface MedicRepository extends Base<Medic> {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Base"
        },
        {
            "name": "MedicRequired",
            "id": "interface-MedicRequired-074b4585eced21ba3be4dc82aba52d0103dfb00eac906a058a590a77d8edee3b4e35d95be1d72fc7db6a9109a612df4b036fb10c46377df87d7b077588fd60c4",
            "file": "projects/system/src/app/modules/medic/domain/medic.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MedicRequired {\r\n  nombre: string;\r\n  apellido: string;\r\n  segundo_nombre: string;\r\n  cmp: string;\r\n  correo: string;\r\n  dni: string;\r\n  foto: string;\r\n}\r\n\r\nexport interface MedicOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type MedicProperties = MedicRequired & Partial<MedicOptional>;\r\n\r\nexport type MedicUpdate = Partial<{\r\n  nombre: string;\r\n  apellido: string;\r\n  segundo_nombre: string;\r\n  cmp: string;\r\n  correo: string;\r\n  dni: string;\r\n  foto: string;\r\n}>;\r\n\r\nexport class Medic {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private apellido: string;\r\n  private segundo_nombre: string;\r\n  private cmp: string;\r\n  private correo: string;\r\n  private dni: string;\r\n  private foto: string;\r\n  private activo: boolean;\r\n\r\n  constructor(properties: MedicProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): MedicProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      apellido: this.apellido,\r\n      segundo_nombre: this.segundo_nombre,\r\n      cmp: this.cmp,\r\n      correo: this.correo,\r\n      dni: this.dni,\r\n      foto: this.foto,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: MedicUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "apellido",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "cmp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "correo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "dni",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "foto",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "segundo_nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "MetaData",
            "id": "interface-MetaData-13a02fd4b6d8c262fd3db10e7163318fa8a0355311374fcabf4f1e70073d521531180698588227b6672c9d2ec742e644a35ca2571b84bcdd6b2bb2cc09ef32b1",
            "file": "projects/system/src/app/shared/interfaces/meta-data.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface MetaData {\r\n  field: string;\r\n  title: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "field",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResultPage",
            "id": "interface-ResultPage-69ac63481e0677e8cb4bf438bd3c1d3b5ed7ca52b3baec4d94c7bbc59446eee3543ce598b03dbbca1862d5ac4af66066014b5c8709fe8203609ae9611df515b6",
            "file": "projects/system/src/app/core/domain/base.interface.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\r\n\r\nexport interface ResultPage<Entity> {\r\n  records: Entity[];\r\n  totalRecords: number;\r\n}\r\n\r\nexport interface Base<Entity> {\r\n  insert(entity: Partial<Entity>): Observable<any>;\r\n  list(): Observable<Entity[]>;\r\n  listOne(id: number): Observable<any>;\r\n  update(id: number, entity: Partial<Entity>): Observable<Entity>;\r\n  delete(id: number): Observable<any>;\r\n  page(page: number): Observable<ResultPage<Entity>>;\r\n}\r\n",
            "properties": [
                {
                    "name": "records",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Entity[]",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "totalRecords",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoleOptional",
            "id": "interface-RoleOptional-9fafbbbbdfe0f8332b050103493c8f23e9fe1346ad45fb1e0b202a9fa687b680f3a44b025375a26d4b76135212d6ccc33535388e024c3716cc890ec36955c433",
            "file": "projects/system/src/app/modules/role/domain/role.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RoleRequired {\r\n  rol: string;\r\n}\r\n\r\nexport interface RoleOptional {\r\n  id: number;\r\n}\r\n\r\nexport type RoleProperties = RoleRequired & Partial<RoleOptional>;\r\n\r\nexport type RoleUpdate = {\r\n  rol: string;\r\n};\r\n\r\nexport class Role {\r\n  readonly id: number;\r\n  rol: string;\r\n\r\n  constructor(properties: RoleProperties) {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  properties(): RoleProperties {\r\n    return {\r\n      id: this.id,\r\n      rol: this.rol,\r\n    };\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RoleRepository",
            "id": "interface-RoleRepository-3ed4ed8ec48466faafbe0e55216e8e13f99fe0e62794bf8d8a44e08f58a11870c86f664c5cfb0333020d06288e2ec4f4d92c68063a329511de102afbfaf86442",
            "file": "projects/system/src/app/modules/role/domain/role.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Base } from '../../../core/domain/base.interface';\r\nimport { Role } from './role';\r\n\r\nexport interface RoleRepository extends Base<Role> {}",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Base"
        },
        {
            "name": "RoleRequired",
            "id": "interface-RoleRequired-9fafbbbbdfe0f8332b050103493c8f23e9fe1346ad45fb1e0b202a9fa687b680f3a44b025375a26d4b76135212d6ccc33535388e024c3716cc890ec36955c433",
            "file": "projects/system/src/app/modules/role/domain/role.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface RoleRequired {\r\n  rol: string;\r\n}\r\n\r\nexport interface RoleOptional {\r\n  id: number;\r\n}\r\n\r\nexport type RoleProperties = RoleRequired & Partial<RoleOptional>;\r\n\r\nexport type RoleUpdate = {\r\n  rol: string;\r\n};\r\n\r\nexport class Role {\r\n  readonly id: number;\r\n  rol: string;\r\n\r\n  constructor(properties: RoleProperties) {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  properties(): RoleProperties {\r\n    return {\r\n      id: this.id,\r\n      rol: this.rol,\r\n    };\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "rol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SocketRepository",
            "id": "interface-SocketRepository-f84e67c4bbf6eee9d5d8c374bed23564f2f57acbca769dfef9540f457972cf17efc79e32ddf99f09696a7d57b9f8c8d8e5369b6717d0bdde854975d17fdc1dca",
            "file": "projects/system/src/app/modules/dashboard/domain/socket.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable } from 'rxjs';\r\n\r\nimport { Graph } from './graph.interface';\r\n\r\nexport interface SocketRepository {\r\n  listen(eventName: string): Observable<Graph[]>;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "listen",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Graph[]>",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "StorageRepository",
            "id": "interface-StorageRepository-f84ff34346eb59d4912f2bcce75ea12b12e813fd37da161aa3ed76947733d8ed534a43f4412efdefe7a7e9aee600e8ef77395e9472055263d15f36d366a58ecb",
            "file": "projects/system/src/app/modules/auth/domain/storage.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface StorageRepository {\r\n  setStorage(propertyName: string, value: string): void;\r\n  getStorage(propertyName: string): string | null;\r\n  getFieldInToken(field: string): string | string[];\r\n  clear(): void;\r\n}\r\n",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFieldInToken",
                    "args": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | []",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStorage",
                    "args": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 3,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStorage",
                    "args": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 2,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        },
        {
            "name": "UserOptional",
            "id": "interface-UserOptional-f612bcb386fab79e9954ac897742f1a1f4b52805edd2ca644306da38f29b217ca7de147a9266d39327a39ca5a5e89b11f8e4a54cf98e35c257aaed9fc7c2dbe4",
            "file": "projects/system/src/app/modules/user/domain/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserRequired {\r\n  nombre: string;\r\n  correo: string;\r\n  password: string;\r\n  roles: any;\r\n}\r\n\r\nexport interface UserOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type UserProperties = UserRequired & Partial<UserOptional>;\r\n\r\nexport type UserUpdate = {\r\n  nombre: string;\r\n  correo: string;\r\n  password: string;\r\n  roles: any;\r\n};\r\n\r\nexport class User {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private correo: string;\r\n  private password: string;\r\n  private activo: boolean;\r\n  private roles: any;\r\n\r\n  constructor(properties: UserProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): UserProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      correo: this.correo,\r\n      password: this.password,\r\n      activo: this.activo,\r\n      roles: this.roles,\r\n    };\r\n  }\r\n\r\n  update(properties: UserUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserRepository",
            "id": "interface-UserRepository-14363c9e1864218d0f8755b67ce5016de73b58cc63b699190a0d969d1054f877ab816b11a6cee88981782a34c39fefa53880b6a76f6bbf7f4f652e6f4460f9be",
            "file": "projects/system/src/app/modules/user/domain/user.repository.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Base } from '../../../core/domain/base.interface';\r\nimport { User } from './user';\r\n\r\nexport interface UserRepository extends Base<User> {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": "Base"
        },
        {
            "name": "UserRequired",
            "id": "interface-UserRequired-f612bcb386fab79e9954ac897742f1a1f4b52805edd2ca644306da38f29b217ca7de147a9266d39327a39ca5a5e89b11f8e4a54cf98e35c257aaed9fc7c2dbe4",
            "file": "projects/system/src/app/modules/user/domain/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface UserRequired {\r\n  nombre: string;\r\n  correo: string;\r\n  password: string;\r\n  roles: any;\r\n}\r\n\r\nexport interface UserOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type UserProperties = UserRequired & Partial<UserOptional>;\r\n\r\nexport type UserUpdate = {\r\n  nombre: string;\r\n  correo: string;\r\n  password: string;\r\n  roles: any;\r\n};\r\n\r\nexport class User {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private correo: string;\r\n  private password: string;\r\n  private activo: boolean;\r\n  private roles: any;\r\n\r\n  constructor(properties: UserProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): UserProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      correo: this.correo,\r\n      password: this.password,\r\n      activo: this.activo,\r\n      roles: this.roles,\r\n    };\r\n  }\r\n\r\n  update(properties: UserUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "correo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthApplication",
            "id": "injectable-AuthApplication-b3d2dbc8bfe15623f9373e5da6550addb33da6675ab5bf008febdaba0fda4b087a0233316b53e15142048d0a041cf4012c184bee23fe567f7a64605f3975faae",
            "file": "projects/system/src/app/modules/auth/application/auth.application.ts",
            "properties": [
                {
                    "name": "userLogged",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getNewAccessToken",
                    "args": [
                        {
                            "name": "refreshToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ITokens>",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "refreshToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "auth",
                            "type": "Auth",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "auth",
                            "type": "Auth",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "showMessageError",
                    "args": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "userAuthenticated",
                    "args": [
                        {
                            "name": "response",
                            "type": "ITokens",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "response",
                            "type": "ITokens",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Auth } from '../domain/auth';\r\nimport { AuthRepository } from '../domain/auth.repository';\r\nimport { StorageRepository } from '../domain/storage.repository';\r\nimport { ITokens } from '../domain/tokens.interface';\r\nimport { AuthInfrastructure } from '../infrastructure/auth.infrastructure';\r\nimport { StorageInfrastructure } from '../infrastructure/storage.infrastructure';\r\n\r\n@Injectable()\r\nexport class AuthApplication {\r\n  private userLogged = false;\r\n\r\n  constructor(\r\n    @Inject(AuthInfrastructure) private readonly authRepository: AuthRepository,\r\n    @Inject(StorageInfrastructure)\r\n    private readonly storageRepository: StorageRepository,\r\n    private readonly router: Router\r\n  ) {}\r\n\r\n  login(auth: Auth) {\r\n    this.authRepository.login(auth).subscribe({\r\n      next: this.userAuthenticated.bind(this),\r\n      error: this.showMessageError.bind(this),\r\n    });\r\n  }\r\n\r\n  private userAuthenticated(response: ITokens) {\r\n    this.storageRepository.setStorage('accessToken', response.accessToken);\r\n    this.storageRepository.setStorage('refreshToken', response.refreshToken);\r\n\r\n    this.userLogged = true;\r\n    this.router.navigate(['/dashboard']);\r\n  }\r\n\r\n  private showMessageError(error: any) {\r\n    console.log(error);\r\n  }\r\n\r\n  get isUserLogged(): boolean {\r\n    const accessToken = this.storageRepository.getStorage('accessToken');\r\n\r\n    return !!accessToken || this.userLogged ? true : false;\r\n  }\r\n\r\n  logout() {\r\n    this.userLogged = false;\r\n    this.storageRepository.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  getNewAccessToken(refreshToken: string): Observable<ITokens> {\r\n    return this.authRepository.getNewAccessToken(refreshToken);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authRepository",
                        "type": "AuthRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "storageRepository",
                        "type": "StorageRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "authRepository",
                        "type": "AuthRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "storageRepository",
                        "type": "StorageRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "isUserLogged": {
                    "name": "isUserLogged",
                    "getSignature": {
                        "name": "isUserLogged",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 42
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "AuthInfrastructure",
            "id": "injectable-AuthInfrastructure-6b59e7c2d0f26740c6e3af95bbd12590504af35345f50eb96c700556da2cacbe22d0f574f6590b558bf09725118ce5899a03dcf8af473f7c238560d6fc8ef8a1",
            "file": "projects/system/src/app/modules/auth/infrastructure/auth.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getNewAccessToken",
                    "args": [
                        {
                            "name": "refreshToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ITokens>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "refreshToken",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "auth",
                            "type": "Auth",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ITokens>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "auth",
                            "type": "Auth",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'projects/system/src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Auth } from '../domain/auth';\r\nimport { AuthRepository } from '../domain/auth.repository';\r\nimport { ITokens } from '../domain/tokens.interface';\r\n\r\n@Injectable()\r\nexport class AuthInfrastructure implements AuthRepository {\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  login(auth: Auth): Observable<ITokens> {\r\n    return this.http.post<ITokens>(`${environment.apiPath}/users/login`, auth);\r\n  }\r\n\r\n  getNewAccessToken(refreshToken: string): Observable<ITokens> {\r\n    return this.http.get<ITokens>(\r\n      `${environment.apiPath}/users/refresh/${refreshToken}`\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CovidApplication",
            "id": "injectable-CovidApplication-03e2c39944f4942fb6d3f685f9f32036acd4c02a920818dfe7579abaecccbf2907b0f86a420e3078d27643a6eaa05c014d7a9ed432466629cf189fa730c5add5",
            "file": "projects/system/src/app/modules/dashboard/application/covid.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getGraph",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { CovidRepository } from '../domain/covid.repository';\r\nimport { CovidInfrastructure } from '../infrastructure/covid.infrastructure';\r\n\r\n@Injectable()\r\nexport class CovidApplication {\r\n  constructor(\r\n    @Inject(CovidInfrastructure)\r\n    private readonly covidRepository: CovidRepository\r\n  ) {}\r\n\r\n  getGraph() {\r\n    return this.covidRepository.getGraph();\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "covidRepository",
                        "type": "CovidRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "covidRepository",
                        "type": "CovidRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CovidInfrastructure",
            "id": "injectable-CovidInfrastructure-f781cbc11f0ddcc0189e0853f3716cb217648f6661ed5609c910ed92ef17b2ff2e9f3fc9ea3119bda60309977a63cdb31433872dc97c61b9eaf9521cd869b190",
            "file": "projects/system/src/app/modules/dashboard/infrastructure/covid.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getGraph",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<External[]>",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { CovidRepository } from '../domain/covid.repository';\r\nimport { External } from '../domain/external.interface';\r\n\r\n@Injectable()\r\nexport class CovidInfrastructure implements CovidRepository {\r\n  constructor(private readonly http: HttpClient) {}\r\n\r\n  getGraph(): Observable<External[]> {\r\n    return this.http.get<External[]>('http://localhost:8080');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "DriverApplication",
            "id": "injectable-DriverApplication-0b1227e0a7ed7a2063950af1fb58ca4b86788bc35b5b10e09aa14420193d83f83c35d6c23226cdb643cca0cbbbb3f9f1ce48d2af85a236d9e99f19fb458cb480",
            "file": "projects/system/src/app/modules/driver/application/driver.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { BaseApplication } from '../../../core/application/base-application';\r\nimport { Driver } from '../domain/driver';\r\nimport { DriverRepository } from '../domain/driver.repository';\r\nimport { DriverInfrastructure } from '../infrastructure/driver.infrastructure';\r\n\r\n@Injectable()\r\nexport class DriverApplication extends BaseApplication<\r\n  Driver,\r\n  DriverRepository\r\n> {\r\n  constructor(\r\n    @Inject(DriverInfrastructure)\r\n    private readonly driverRepository: DriverRepository\r\n  ) {\r\n    super(driverRepository);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "driverRepository",
                        "type": "DriverRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "driverRepository",
                        "type": "DriverRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseApplication",
            "type": "injectable"
        },
        {
            "name": "DriverInfrastructure",
            "id": "injectable-DriverInfrastructure-34e562b1da4e2eb3078aa7894bfeabd4169c90b3d88755adf9c338c14a475996b44051123e9ff27f0bbfd43905e3f26f005c6b5135fbcc8650b6f1f3e08589af",
            "file": "projects/system/src/app/modules/driver/infrastructure/driver.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Entity[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "listOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultPage<Entity>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Entity>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BaseInfrastructure } from '../../../core/infrastructure/base-infrastructure';\r\nimport { Driver } from '../domain/driver';\r\nimport { DriverRepository } from '../domain/driver.repository';\r\n\r\n@Injectable()\r\nexport class DriverInfrastructure\r\n  extends BaseInfrastructure<Driver>\r\n  implements DriverRepository\r\n{\r\n  constructor(http: HttpClient) {\r\n    super(http, 'drivers');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseInfrastructure",
            "type": "injectable"
        },
        {
            "name": "ExportService",
            "id": "injectable-ExportService-15f63cb02a3c524f2f2735bce3d54f3af8c62d6f076063e93ba17182d193a61f196c67da26bf7d38166a24b79ff52098fe7383f0f3b04212e85a2ac071fd0485",
            "file": "projects/system/src/app/shared/service/export.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "showExport",
                    "args": [
                        {
                            "name": "records",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "metaDatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "elementName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "records",
                            "type": "any[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "metaDatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "elementName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\r\n\r\nimport { ExportComponent } from '../components/export/export.component';\r\nimport { MetaData } from '../interfaces/meta-data.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ExportService {\r\n  constructor(private bottomSheet: MatBottomSheet) {}\r\n\r\n  showExport(\r\n    records: any[],\r\n    metaDatas: MetaData[],\r\n    elementName: string,\r\n    filename: string\r\n  ) {\r\n    this.bottomSheet.open(ExportComponent, {\r\n      data: { records, metaDatas, elementName, filename },\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "bottomSheet",
                        "type": "MatBottomSheet",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "HistoryApplication",
            "id": "injectable-HistoryApplication-7e7973a4a359edfde9081a80c1426ca3b4e9f00c9157871f15f1882129ecbbd4207722a9d1128e9069775717fc0ff20e6b377476f50e37b8f544b08dc9e0b75f",
            "file": "projects/system/src/app/modules/history/application/history.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { BaseApplication } from '../../../core/application/base-application';\r\nimport { History } from '../domain/history';\r\nimport { HistoryRepository } from '../domain/history.repository';\r\nimport { HistoryInfrastructure } from '../infrastructure/history.infrastructure';\r\n\r\n@Injectable()\r\nexport class HistoryApplication extends BaseApplication<\r\n  History,\r\n  HistoryRepository\r\n> {\r\n  constructor(\r\n    @Inject(HistoryInfrastructure)\r\n    private readonly historyRepository: HistoryRepository\r\n  ) {\r\n    super(historyRepository);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "historyRepository",
                        "type": "HistoryRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "historyRepository",
                        "type": "HistoryRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseApplication",
            "type": "injectable"
        },
        {
            "name": "HistoryInfrastructure",
            "id": "injectable-HistoryInfrastructure-f4c80ed0a361c1c751a92e701226a672ad8527bfeaf72182985cfd66d299dbeab81b8eb33ffdf4f5f9c21340365e8a54ad0d637fa1fb32f52ac092130732819b",
            "file": "projects/system/src/app/modules/history/infrastructure/history.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Entity[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "listOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultPage<Entity>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Entity>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BaseInfrastructure } from '../../../core/infrastructure/base-infrastructure';\r\nimport { History } from '../domain/history';\r\nimport { HistoryRepository } from '../domain/history.repository';\r\n\r\n@Injectable()\r\nexport class HistoryInfrastructure\r\n  extends BaseInfrastructure<History>\r\n  implements HistoryRepository\r\n{\r\n  constructor(http: HttpClient) {\r\n    super(http, 'historys');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseInfrastructure",
            "type": "injectable"
        },
        {
            "name": "InvoiceApplication",
            "id": "injectable-InvoiceApplication-a97893b670420d466e4af6d5484013b79a89a42113692557d3c2ce6d0279a168336af8ff0413cb9b5ccffdb45d9e65f9d4676152a9dc94441bacc012f4db3aa3",
            "file": "projects/system/src/app/modules/billing/application/invoice.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { BaseApplication } from '../../../core/application/base-application';\r\nimport { Invoice } from '../domain/invoice';\r\nimport { InvoiceRepository } from '../domain/invoice.repository';\r\nimport { InvoiceInfrastructure } from '../infrastructure/invoice.infrastructure';\r\n\r\n@Injectable()\r\nexport class InvoiceApplication extends BaseApplication<\r\n  Invoice,\r\n  InvoiceRepository\r\n> {\r\n  constructor(\r\n    @Inject(InvoiceInfrastructure)\r\n    private readonly invoiceRepository: InvoiceRepository\r\n  ) {\r\n    super(invoiceRepository);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "invoiceRepository",
                        "type": "InvoiceRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "invoiceRepository",
                        "type": "InvoiceRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseApplication",
            "type": "injectable"
        },
        {
            "name": "InvoiceInfrastructure",
            "id": "injectable-InvoiceInfrastructure-b5185301266832360a2220be676df8e0a409fbb3cdf1528a34b3bd5129798f019c9a02708d257a0cc4fb8b7195cb4f2e3ed88e315670ebc601ad7107a1c21385",
            "file": "projects/system/src/app/modules/billing/infrastructure/invoice.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Entity[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "listOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultPage<Entity>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Entity>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BaseInfrastructure } from '../../../core/infrastructure/base-infrastructure';\r\nimport { Invoice } from '../domain/invoice';\r\nimport { InvoiceRepository } from '../domain/invoice.repository';\r\n\r\n@Injectable()\r\nexport class InvoiceInfrastructure\r\n  extends BaseInfrastructure<Invoice>\r\n  implements InvoiceRepository\r\n{\r\n  constructor(http: HttpClient) {\r\n    super(http, 'invoices');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseInfrastructure",
            "type": "injectable"
        },
        {
            "name": "LayoutService",
            "id": "injectable-LayoutService-ea34c921926ff22640868e7d7bf665018bc44081d4e9fa3d5b46a41884f04bbd2b6a2bc845777627ebf2626b2c7d9e07f1165aa9846767e88ec0a89c39ef8372",
            "file": "projects/system/src/app/config/services/layout.service.ts",
            "properties": [
                {
                    "name": "configBehaviorSubject",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<ILayout>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        121,
                        144
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { ILayout } from '../interfaces/layout.interface';\r\nimport { LAYOUT_TOKEN } from '../tokens/layout.token';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LayoutService {\r\n  private readonly configBehaviorSubject: BehaviorSubject<ILayout>;\r\n\r\n  constructor(@Inject(LAYOUT_TOKEN) private layout: ILayout) {\r\n    this.configBehaviorSubject = new BehaviorSubject<ILayout>(layout);\r\n    console.log('layout', layout);\r\n  }\r\n\r\n  set configuration(value: Partial<ILayout>) {\r\n    let config = this.configBehaviorSubject.getValue();\r\n    config = Object.assign(config, value);\r\n    this.configBehaviorSubject.next(config);\r\n  }\r\n\r\n  get configuration(): any {\r\n    /*     this.configBehaviorSubject.next(this.layout);\r\n    this.configBehaviorSubject.subscribe(console.log)\r\n    this.configBehaviorSubject.getValue();\r\n\r\n    const observable = this.configBehaviorSubject.asObservable();\r\n    observable.subscribe(console.log); */\r\n\r\n    return this.configBehaviorSubject.asObservable();\r\n  }\r\n}\r\n\r\n/* const layoutService = new LayoutService({ header: true, menu: true });\r\nlayoutService.configuration = {header: false, menu: false}\r\nlayoutService.configuration */\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layout",
                        "type": "ILayout",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "layout",
                        "type": "ILayout",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "configuration": {
                    "name": "configuration",
                    "setSignature": {
                        "name": "configuration",
                        "type": "void",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "args": [
                            {
                                "name": "value",
                                "type": "Partial<ILayout>",
                                "deprecated": false,
                                "deprecationMessage": ""
                            }
                        ],
                        "returnType": "void",
                        "line": 16,
                        "jsdoctags": [
                            {
                                "name": "value",
                                "type": "Partial<ILayout>",
                                "deprecated": false,
                                "deprecationMessage": "",
                                "tagName": {
                                    "text": "param"
                                }
                            }
                        ]
                    },
                    "getSignature": {
                        "name": "configuration",
                        "type": "any",
                        "returnType": "any",
                        "line": 22
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "MedicApplication",
            "id": "injectable-MedicApplication-a8b3d8f91fb559f413252f08205a47dbb0dc91d60dd97ca1fcf7a19af7e885552ba67ea5c597e14be66e251fd4c9d591e5eddc98fe6242bb5df57bc5aa15ef8d",
            "file": "projects/system/src/app/modules/medic/application/medic.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { BaseApplication } from '../../../core/application/base-application';\r\nimport { Medic } from '../domain/medic';\r\nimport { MedicRepository } from '../domain/medic.repository';\r\nimport { MedicInfrastructure } from '../infrastructure/medic.infrastructure';\r\n\r\n@Injectable()\r\nexport class MedicApplication extends BaseApplication<Medic, MedicRepository> {\r\n  constructor(\r\n    @Inject(MedicInfrastructure)\r\n    private readonly medicRepository: MedicRepository\r\n  ) {\r\n    super(medicRepository);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "medicRepository",
                        "type": "MedicRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "medicRepository",
                        "type": "MedicRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseApplication",
            "type": "injectable"
        },
        {
            "name": "MedicInfrastructure",
            "id": "injectable-MedicInfrastructure-8f733e72d591cd4437e6af9aa2c475a7e13d12b12280096568c0a4a584bc4b6f13d7678e7160ff3bbe2264c2e7a9318d807e5939a883be5381075703f6f191d1",
            "file": "projects/system/src/app/modules/medic/infrastructure/medic.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Entity[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "listOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultPage<Entity>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Entity>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BaseInfrastructure } from '../../../core/infrastructure/base-infrastructure';\r\nimport { Medic } from '../domain/medic';\r\nimport { MedicRepository } from '../domain/medic.repository';\r\n\r\n@Injectable()\r\nexport class MedicInfrastructure\r\n  extends BaseInfrastructure<Medic>\r\n  implements MedicRepository\r\n{\r\n  constructor(http: HttpClient) {\r\n    super(http, 'medics');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseInfrastructure",
            "type": "injectable"
        },
        {
            "name": "RoleApplication",
            "id": "injectable-RoleApplication-ced8ff20648480ef3ddab635d09f4113f2c7680cc9cb1d8dfb9cf33b67486950904e72187d4779f5eb4c84cbbdeb4032c674d65001b3162e7d46ea9371593f7e",
            "file": "projects/system/src/app/modules/role/application/role.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { BaseApplication } from '../../../core/application/base-application';\r\nimport { Role } from '../domain/role';\r\nimport { RoleRepository } from '../domain/role.repository';\r\nimport { RoleInfrastructure } from '../infrastructure/role.infrastructure';\r\n\r\n@Injectable()\r\nexport class RoleApplication extends BaseApplication<Role, RoleRepository> {\r\n  constructor(\r\n    @Inject(RoleInfrastructure)\r\n    private readonly roleRepository: RoleRepository\r\n  ) {\r\n    super(roleRepository);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "roleRepository",
                        "type": "RoleRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "roleRepository",
                        "type": "RoleRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseApplication",
            "type": "injectable"
        },
        {
            "name": "RoleInfrastructure",
            "id": "injectable-RoleInfrastructure-fd34c812c4ead8aff54795e5852b9b5251ecd2b9722f49deb3f15cecf0f3115b7be1bced70a9990806860e27bd6dcc9bf979e985da241922f34277bc1ca7351c",
            "file": "projects/system/src/app/modules/role/infrastructure/role.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Entity[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "listOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultPage<Entity>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Entity>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BaseInfrastructure } from '../../../core/infrastructure/base-infrastructure';\r\nimport { Role } from '../domain/role';\r\nimport { RoleRepository } from '../domain/role.repository';\r\n\r\n@Injectable()\r\nexport class RoleInfrastructure\r\n  extends BaseInfrastructure<Role>\r\n  implements RoleRepository\r\n{\r\n  constructor(http: HttpClient) {\r\n    super(http, 'roles');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseInfrastructure",
            "type": "injectable"
        },
        {
            "name": "SocketApplication",
            "id": "injectable-SocketApplication-d4f0acf2b0da85c21fbb145c769df25f8f5463211d1068790f342acc61e6f7bc902bf8d12b7c05b78cf1b5d36f6c196f82cae71a248bb3e7854e899c0de71983",
            "file": "projects/system/src/app/modules/dashboard/application/socket.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "listen",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Graph[]>",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Graph } from '../domain/graph.interface';\r\nimport { SocketRepository } from '../domain/socket.repository';\r\nimport { SocketInfrastructure } from '../infrastructure/socket.infrastructure';\r\n\r\n@Injectable()\r\nexport class SocketApplication {\r\n  constructor(\r\n    @Inject(SocketInfrastructure) private readonly socket: SocketRepository\r\n  ) {}\r\n\r\n  listen(eventName: string): Observable<Graph[]> {\r\n    return this.socket.listen(eventName);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "socket",
                        "type": "SocketRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "socket",
                        "type": "SocketRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "SocketInfrastructure",
            "id": "injectable-SocketInfrastructure-f7e96a44d1e13def3aeaa0915077a24406f318a82832961f33ac66a9f785eef7c068f947029cff21e39c9011ac2b31d169699c3a73efe5c138f982c349c1df97",
            "file": "projects/system/src/app/modules/dashboard/infrastructure/socket.infrastructure.ts",
            "properties": [
                {
                    "name": "socket",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "io.Socket",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "listen",
                    "args": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Graph[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "eventName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport * as io from 'socket.io-client';\r\n\r\nimport { Graph } from '../domain/graph.interface';\r\nimport { SocketRepository } from '../domain/socket.repository';\r\n\r\n@Injectable()\r\nexport class SocketInfrastructure implements SocketRepository {\r\n  private socket: io.Socket;\r\n\r\n  constructor() {\r\n    this.socket = io.connect('http://localhost:4000');\r\n  }\r\n\r\n  listen(eventName: string): Observable<Graph[]> {\r\n    return new Observable((observer: Observer<Graph[]>) => {\r\n      this.socket.on(eventName, (data: Graph[]) => {\r\n        observer.next(data);\r\n      });\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "type": "injectable"
        },
        {
            "name": "StorageApplication",
            "id": "injectable-StorageApplication-f44fa6cdf8535f971495104eff8ee601fc09b3bb7904576c001c6f144a87fb0e39691fab8060fe0db698d58c6ea8b55b540ba7926343ed848c9351bbc765b3ed",
            "file": "projects/system/src/app/modules/auth/application/storage.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getField",
                    "args": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getFieldInToken",
                    "args": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | []",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setField",
                    "args": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { StorageRepository } from '../domain/storage.repository';\r\nimport { StorageInfrastructure } from '../infrastructure/storage.infrastructure';\r\n\r\n@Injectable()\r\nexport class StorageApplication {\r\n  constructor(\r\n    @Inject(StorageInfrastructure) private readonly storage: StorageRepository\r\n  ) {}\r\n\r\n  setField(propertyName: string, value: string): void {\r\n    this.storage.setStorage(propertyName, value);\r\n  }\r\n\r\n  getField(propertyName: string): string | null {\r\n    return this.storage.getStorage(propertyName);\r\n  }\r\n\r\n  clear(): void {\r\n    this.storage.clear();\r\n  }\r\n\r\n  getFieldInToken(field: string): string | string[] {\r\n    return this.storage.getFieldInToken(field);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "storage",
                        "type": "StorageRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "storage",
                        "type": "StorageRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "StorageInfrastructure",
            "id": "injectable-StorageInfrastructure-540a7bcfdf60468f8872f91676edc60d49eeb56f15e28cc363d8bc266c2e2a83dc9c30b618dd442c563521a65db4d112547b81352e281555aba92d2ced9dede5",
            "file": "projects/system/src/app/modules/auth/infrastructure/storage.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFieldInToken",
                    "args": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | []",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "field",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getStorage",
                    "args": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setStorage",
                    "args": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "propertyName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport { StorageRepository } from '../domain/storage.repository';\r\n\r\n@Injectable()\r\nexport class StorageInfrastructure implements StorageRepository {\r\n  setStorage(propertyName: string, value: string): void {\r\n    sessionStorage.setItem(propertyName, value);\r\n  }\r\n\r\n  getStorage(propertyName: string): string | null {\r\n    return sessionStorage.getItem(propertyName);\r\n  }\r\n\r\n  clear(): void {\r\n    sessionStorage.clear();\r\n  }\r\n\r\n  getFieldInToken(field: string): string | string[] {\r\n    const accessToken = sessionStorage.getItem('accessToken');\r\n    const payload = jwtDecode(accessToken);\r\n\r\n    return payload[field];\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "UserApplication",
            "id": "injectable-UserApplication-ef012a86ebff00206bcf5f4f9bd7bc1635924f35e6769d4e3899fa7302a81b0b5078d850222b88ddac3c4de8d8a67e6b37e81b560aafbad73b8bf9d6a4461e55",
            "file": "projects/system/src/app/modules/user/application/user.application.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseApplication"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Inject, Injectable } from '@angular/core';\r\n\r\nimport { BaseApplication } from '../../../core/application/base-application';\r\nimport { User } from '../domain/user';\r\nimport { UserRepository } from '../domain/user.repository';\r\nimport { UserInfrastructure } from '../infrastructure/user.infrastructure';\r\n\r\n@Injectable()\r\nexport class UserApplication extends BaseApplication<User, UserRepository> {\r\n  constructor(\r\n    @Inject(UserInfrastructure)\r\n    private readonly userRepository: UserRepository\r\n  ) {\r\n    super(userRepository);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userRepository",
                        "type": "UserRepository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "userRepository",
                        "type": "UserRepository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseApplication",
            "type": "injectable"
        },
        {
            "name": "UserInfrastructure",
            "id": "injectable-UserInfrastructure-00fee10f22976e449a378292556bddba989be089b2081e8d6ed24390812416a27ea49f9e1c3c367affd0adab1f2efc717cddd7010bdd0a4e901527ba5e93c4ac",
            "file": "projects/system/src/app/modules/user/infrastructure/user.infrastructure.ts",
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Entity[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "listOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultPage<Entity>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Entity>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseInfrastructure"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { BaseInfrastructure } from '../../../core/infrastructure/base-infrastructure';\r\nimport { User } from '../domain/user';\r\nimport { UserRepository } from '../domain/user.repository';\r\n\r\n@Injectable()\r\nexport class UserInfrastructure\r\n  extends BaseInfrastructure<User>\r\n  implements UserRepository\r\n{\r\n  constructor(http: HttpClient) {\r\n    super(http, 'users');\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseInfrastructure",
            "type": "injectable"
        },
        {
            "name": "UtilsService",
            "id": "injectable-UtilsService-da488d30d7b51c2bedf38d1c4bcb2174ecde7ecb1460b6e94b1601bf54a214a6fc6cd7a92fe487e809b7b1214385be11a7bad231749bed720a60a43051539d90",
            "file": "projects/system/src/app/shared/service/utils.service.ts",
            "properties": [
                {
                    "name": "loading",
                    "defaultValue": "new Subject<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subject<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methods": [
                {
                    "name": "confirm",
                    "args": [
                        {
                            "name": "message",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "dtoExcel",
                    "args": [
                        {
                            "name": "records",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "Entity"
                    ],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "records",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "exportToExcel",
                    "args": [
                        {
                            "name": "records",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sheetName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [
                        "Entity"
                    ],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "records",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sheetName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "exportToPDF",
                    "args": [
                        {
                            "name": "records",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "option",
                            "type": "ACTION_PDF",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "Entity"
                    ],
                    "line": 91,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "records",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "option",
                            "type": "ACTION_PDF",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateColumn",
                    "args": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "style",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "{ text: string; } | { text: string; style: string; alignment: string; }",
                    "typeParameters": [],
                    "line": 249,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "text",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "style",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generatePdf",
                    "args": [
                        {
                            "name": "dataFormatted",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "option",
                            "type": "ACTION_PDF",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "dataFormatted",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "filename",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "option",
                            "type": "ACTION_PDF",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateRowData",
                    "args": [
                        {
                            "name": "data",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [
                        "Entity"
                    ],
                    "line": 231,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateStyles",
                    "args": [],
                    "optional": false,
                    "returnType": "{ headerLeft: { fontFamily: string; fontSize: number; height: number; color: string; }; subHeaderLeft: { fontFamily: string; fontSize: number; height: number; color: string; }; titleReport: { fontFamily: string; fontSize: number; height: number; color: string; }; header: { ...; }; }",
                    "typeParameters": [],
                    "line": 267,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "generateTableData",
                    "args": [
                        {
                            "name": "data",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ margin: {}; table: { widths: any; body: any; }; }",
                    "typeParameters": [
                        "Entity"
                    ],
                    "line": 186,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "metadatas",
                            "type": "MetaData[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateTableHeader",
                    "args": [
                        {
                            "name": "data",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ margin: {}; table: { widths: {}; body: {}; }; }",
                    "typeParameters": [
                        "Entity"
                    ],
                    "line": 142,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Entity[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dataUrl",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "title",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getDataUrl",
                    "args": [
                        {
                            "name": "pathImage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 297,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121,
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "pathImage",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openForm",
                    "args": [
                        {
                            "name": "componentToOpen",
                            "type": "ComponentToOpen",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "panelClass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [
                        "ComponentToOpen"
                    ],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "componentToOpen",
                            "type": "ComponentToOpen",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "panelClass",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showNotification",
                    "args": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2000"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "message",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "duration",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "2000",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ComponentType } from '@angular/cdk/portal';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport * as XLSX from 'xlsx';\r\n\r\nimport { ConfirmComponent } from '../components/confirm/confirm.component';\r\nimport { ACTION_PDF } from '../components/export/export.component';\r\nimport { MetaData } from '../interfaces/meta-data.interface';\r\n\r\ndeclare var require: any;\r\n\r\nconst pdfMake = require('pdfmake/build/pdfmake.js');\r\nconst pdfFonts = require('pdfmake/build/vfs_fonts.js');\r\npdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UtilsService {\r\n  loading: Subject<boolean> = new Subject<boolean>();\r\n\r\n  constructor(\r\n    private readonly dialog: MatDialog,\r\n    private readonly notifier: MatSnackBar\r\n  ) {}\r\n\r\n  confirm(message: string[] = []): Observable<any> {\r\n    const reference: MatDialogRef<ConfirmComponent> = this.dialog.open(\r\n      ConfirmComponent,\r\n      { disableClose: true, width: '400px' }\r\n    );\r\n\r\n    if (message.length > 0) reference.componentInstance.messages = message;\r\n\r\n    return reference.afterClosed();\r\n  }\r\n\r\n  openForm<ComponentToOpen extends ComponentType<any>>(\r\n    componentToOpen: ComponentToOpen,\r\n    panelClass: string,\r\n    data: any = null\r\n  ): Observable<any> {\r\n    const reference: MatDialogRef<any> = this.dialog.open(componentToOpen, {\r\n      panelClass,\r\n      disableClose: true,\r\n      data,\r\n    });\r\n\r\n    return reference.afterClosed();\r\n  }\r\n\r\n  exportToExcel<Entity>(\r\n    records: Entity[],\r\n    metadatas: MetaData[],\r\n    filename: string,\r\n    sheetName: string\r\n  ) {\r\n    const result = this.dtoExcel(records, metadatas);\r\n\r\n    const worksheet: XLSX.WorkSheet = XLSX.utils.json_to_sheet([]);\r\n    XLSX.utils.sheet_add_json(worksheet, result);\r\n    const workbook: XLSX.WorkBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workbook, worksheet, sheetName);\r\n    XLSX.writeFile(workbook, `${filename}.xlsx`);\r\n  }\r\n\r\n  private dtoExcel<Entity>(records: Entity[], metadatas: MetaData[]) {\r\n    return records.map((item: Entity) => {\r\n      const newElement = {};\r\n      for (const prop in item) {\r\n        const metadata = metadatas.find(\r\n          (metadata: MetaData) => metadata.field === prop\r\n        );\r\n        if (metadata) {\r\n          newElement[metadata.title] = item[prop];\r\n        }\r\n      }\r\n\r\n      return newElement;\r\n    });\r\n  }\r\n\r\n  showNotification(message: string, duration: number = 2000) {\r\n    this.notifier.open(message, null, {\r\n      duration,\r\n    });\r\n  }\r\n\r\n  async exportToPDF<Entity>(\r\n    records: Entity[],\r\n    metadatas: MetaData[],\r\n    filename: string,\r\n    title: string,\r\n    option: ACTION_PDF\r\n  ) {\r\n    const dataUrl = await this.getDataUrl('assets/img/logo.jpg');\r\n\r\n    const dataFormatted = {\r\n      footer: function (currentPage, pageCount) {\r\n        return [\r\n          {\r\n            text: currentPage.toString() + ' de ' + pageCount.toString(),\r\n            alignment: 'center',\r\n          },\r\n        ];\r\n      },\r\n      pageSize: 'A4',\r\n      pageOrientation: 'portrait',\r\n      pageMargins: [20, 20, 20, 20],\r\n      content: [\r\n        this.generateTableHeader(records, dataUrl, title),\r\n        this.generateTableData(records, metadatas),\r\n      ],\r\n      styles: this.generateStyles(),\r\n    };\r\n\r\n    this.generatePdf(dataFormatted, filename, option);\r\n  }\r\n\r\n  private generatePdf(\r\n    dataFormatted: any,\r\n    filename: string,\r\n    option: ACTION_PDF\r\n  ) {\r\n    const pdfDocGenerator = pdfMake.createPdf(dataFormatted);\r\n\r\n    switch (option) {\r\n      case 'view':\r\n        pdfDocGenerator.open();\r\n        break;\r\n      case 'download':\r\n        pdfDocGenerator.download(filename);\r\n        break;\r\n      case 'print':\r\n        pdfDocGenerator.print();\r\n        break;\r\n    }\r\n  }\r\n\r\n  private generateTableHeader<Entity>(\r\n    data: Entity[],\r\n    dataUrl: any,\r\n    title: string\r\n  ) {\r\n    return {\r\n      margin: [0, 0, 0, 15],\r\n      table: {\r\n        widths: [120, 'auto', 50, 'auto'],\r\n        body: [\r\n          [\r\n            {\r\n              borderWidth: ['1px', '1px', '1px', '1px'],\r\n              borderColor: ['#000', '#000', '#000', '#000'],\r\n              border: [false, false, true, false],\r\n              width: 100,\r\n              image: dataUrl,\r\n            },\r\n            {\r\n              border: [false, false, false, false],\r\n              text: [\r\n                this.generateColumn('Channel', 'headerLeft'),\r\n                this.generateColumn('Av. De la República 123', 'subHeaderLeft'),\r\n                this.generateColumn('San Isidro, Lima Perú', 'subHeaderLeft'),\r\n                this.generateColumn('Tel: (591) 222-2222', 'subHeaderLeft'),\r\n                this.generateColumn('info@channel.com', 'subHeaderLeft'),\r\n                this.generateColumn('www.channel.com', 'subHeaderLeft'),\r\n              ],\r\n            },\r\n            {\r\n              border: [false, false, false, false],\r\n              text: '',\r\n            },\r\n            {\r\n              border: [false, false, false, false],\r\n              text: title,\r\n              style: 'titleReport',\r\n            },\r\n          ],\r\n        ],\r\n      },\r\n    };\r\n  }\r\n\r\n  private generateTableData<Entity>(data: Entity[], metadatas: MetaData[]) {\r\n    const body = data\r\n      .map((el) => {\r\n        const newElement = {};\r\n        Object.keys(el).forEach((key) => {\r\n          const metadata = metadatas.find((metadata) => metadata.field === key);\r\n          if (metadata) {\r\n            newElement[metadata.field] = el[key];\r\n          }\r\n        });\r\n        return newElement;\r\n      })\r\n      .map((el) =>\r\n        Object.keys(el).map((prop) => this.generateRowData(el, metadatas, prop))\r\n      );\r\n\r\n    const quantityColumns = metadatas.length;\r\n    const widths = Array.from(Array(quantityColumns).keys()).map(\r\n      (el) => Math.floor(100 / quantityColumns) + '%'\r\n    );\r\n\r\n    const rows = [];\r\n    metadatas.forEach((el) => {\r\n      const row = [\r\n        {\r\n          border: [false, false, false, false],\r\n          text: el.title,\r\n          style: 'header',\r\n        },\r\n      ];\r\n\r\n      rows.push(row);\r\n    });\r\n\r\n    body.unshift(rows);\r\n\r\n    return {\r\n      margin: [0, 0, 0, 15],\r\n      table: {\r\n        widths,\r\n        body,\r\n      },\r\n    };\r\n  }\r\n\r\n  private generateRowData<Entity>(\r\n    data: Partial<Entity>,\r\n    metadatas: MetaData[],\r\n    key: string\r\n  ) {\r\n    const column = metadatas.find((metadata) => metadata.field === key);\r\n    if (column) {\r\n      return [\r\n        {\r\n          border: [false, false, false, false],\r\n          text: data[key],\r\n        },\r\n      ];\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  private generateColumn(text: string, style: string = null) {\r\n    const column = {\r\n      text: text + '\\n',\r\n    };\r\n\r\n    if (style) {\r\n      column['style'] = style;\r\n    }\r\n\r\n    return column;\r\n\r\n    return {\r\n      text,\r\n      style,\r\n      alignment: 'center',\r\n    };\r\n  }\r\n\r\n  private generateStyles() {\r\n    return {\r\n      headerLeft: {\r\n        fontFamily: 'Verdana',\r\n        fontSize: 13,\r\n        height: 16,\r\n        color: '#3c3b40',\r\n      },\r\n      subHeaderLeft: {\r\n        fontFamily: 'Verdana',\r\n        fontSize: 10,\r\n        height: 16,\r\n        color: '#3c3b40',\r\n      },\r\n      titleReport: {\r\n        fontFamily: 'Verdana',\r\n        fontSize: 15,\r\n        height: 16,\r\n        color: '#3c3b40',\r\n      },\r\n      header: {\r\n        fontFamily: 'Verdana',\r\n        fontSize: 13,\r\n        height: 14,\r\n        color: '#3c3b40',\r\n        bold: true,\r\n      },\r\n    };\r\n  }\r\n\r\n  private async getDataUrl(pathImage: string) {\r\n    const response = await fetch(pathImage);\r\n    const blob = await response.blob();\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      reader.onerror = reject;\r\n      reader.onload = () => {\r\n        resolve(reader.result);\r\n      };\r\n      reader.readAsDataURL(blob);\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "notifier",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "dialog",
                        "type": "MatDialog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "notifier",
                        "type": "MatSnackBar",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthenticationGuard",
            "id": "injectable-AuthenticationGuard-8e8345e83d3509da55e023e7f64505397d7477374cd0d3bc69407ee1cc3bb248691182a8a08676b3ebb3088c090616ce95eadf37ffc1c0cfa1a20ce9ab620463",
            "file": "projects/system/src/app/shared/guards/authentication.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "canLoad",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validUserLogged",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { CanActivate, CanLoad, Router } from '@angular/router';\r\n\r\nimport { AuthApplication } from '../../modules/auth/application/auth.application';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthenticationGuard implements CanLoad, CanActivate {\r\n  constructor(\r\n    private readonly auth: AuthApplication,\r\n    private readonly router: Router\r\n  ) {}\r\n\r\n  canLoad(): boolean {\r\n    const isLogged = this.auth.isUserLogged;\r\n    if (!isLogged) {\r\n      this.router.navigate(['/']);\r\n    }\r\n    return isLogged;\r\n  }\r\n\r\n  canActivate(): boolean {\r\n    const isLogged = this.auth.isUserLogged;\r\n    if (!isLogged) {\r\n      this.router.navigate(['/']);\r\n    }\r\n    return isLogged;\r\n  }\r\n\r\n  private validUserLogged(): boolean {\r\n    const isLogged = this.auth.isUserLogged;\r\n    if (!isLogged) {\r\n      this.auth.logout();\r\n    }\r\n\r\n    return isLogged;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "AuthorizationGuard",
            "id": "injectable-AuthorizationGuard-9c2b174a2c40606ce97a7c55b0c79a77a02d7356f33562aa5baa8b5c8d9d671f7f7ab2c2afc4138c3980ba2ea4c6f215ba8dd980f77f4f7fbf800a8126330737",
            "file": "projects/system/src/app/shared/guards/authorization.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthApplication } from '../../modules/auth/application/auth.application';\r\nimport { StorageApplication } from '../../modules/auth/application/storage.application';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthorizationGuard implements CanActivate {\r\n  constructor(\r\n    private readonly authApplication: AuthApplication,\r\n    private readonly storageApplication: StorageApplication\r\n  ) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ):\r\n    | Observable<boolean | UrlTree>\r\n    | Promise<boolean | UrlTree>\r\n    | boolean\r\n    | UrlTree {\r\n    const rolesUser = this.storageApplication.getFieldInToken(\r\n      'roles'\r\n    ) as string[];\r\n\r\n    const data: any = route.data;\r\n    const rolesAllowed = data.rolesAllowed.split(',') as string[];\r\n\r\n    const isUserAuthorized = rolesUser.some((role) =>\r\n      rolesAllowed.includes(role)\r\n    );\r\n\r\n    console.log('isUserAuthorized', isUserAuthorized);\r\n\r\n    return isUserAuthorized;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authApplication",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "storageApplication",
                        "type": "StorageApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "authApplication",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "storageApplication",
                        "type": "StorageApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [
        {
            "name": "TokenInterceptor",
            "id": "injectable-TokenInterceptor-feb28d8666c89d3239fb7920204c03785b22d790fb183164d5f3d9bd309bd1e34f9381045b4b51087c76239ce4ac40a18f03570ea069cae7d15febd78fe212a0",
            "file": "projects/system/src/app/core/interceptors/token.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "handlerErrorBackend",
                    "args": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { catchError, mergeMap, Observable, retry, tap, throwError, timeout } from 'rxjs';\r\n\r\nimport { AuthApplication } from '../../modules/auth/application/auth.application';\r\nimport { StorageApplication } from '../../modules/auth/application/storage.application';\r\nimport { ITokens } from '../../modules/auth/domain/tokens.interface';\r\nimport { UtilsService } from '../../shared/service/utils.service';\r\n\r\n@Injectable()\r\nexport class TokenInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private readonly storageApplication: StorageApplication,\r\n    private readonly injector: Injector,\r\n    private readonly utilsService: UtilsService\r\n  ) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const accessToken = this.storageApplication.getField('accessToken');\r\n\r\n    const clonedRequest = req.clone({\r\n      headers: req.headers.append('Authorization', 'Bearer ' + accessToken),\r\n    });\r\n\r\n    return next.handle(clonedRequest).pipe(\r\n      tap(() => this.utilsService.loading.next(true)),\r\n      timeout(3000),\r\n      catchError((error: HttpErrorResponse) => {\r\n        let errorMessage = '';\r\n\r\n        if (error.error instanceof ErrorEvent) {\r\n          errorMessage = `Error: ${error.error.message}`;\r\n        } else {\r\n          errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n          return this.handlerErrorBackend(error, req, next);\r\n        }\r\n\r\n        this.utilsService.loading.next(false);\r\n        return throwError(() => new Error(errorMessage));\r\n      }),\r\n      tap(() => this.utilsService.loading.next(false))\r\n    );\r\n  }\r\n\r\n  handlerErrorBackend(\r\n    error: HttpErrorResponse,\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ) {\r\n    const auth = this.injector.get(AuthApplication);\r\n\r\n    if (error.status === 409) {\r\n      const refreshToken = this.storageApplication.getField('refreshToken');\r\n\r\n      return auth.getNewAccessToken(refreshToken).pipe(\r\n        retry(3),\r\n        mergeMap((tokens: ITokens) => {\r\n          this.storageApplication.setField('accessToken', tokens.accessToken);\r\n          this.storageApplication.setField('refreshToken', tokens.refreshToken);\r\n\r\n          const clonedRequest = req.clone({\r\n            headers: req.headers.append(\r\n              'Authorization',\r\n              'Bearer ' + tokens.accessToken\r\n            ),\r\n          });\r\n\r\n          return next.handle(clonedRequest);\r\n        })\r\n      );\r\n    } else if (error.status === 401) {\r\n      this.utilsService.loading.next(false);\r\n      auth.logout();\r\n    }\r\n\r\n    const messageError =\r\n      error.name.toString() === 'TimeoutError'\r\n        ? 'Tiempo de espera agotado. La petición no pudo ser procesada.'\r\n        : error.error.message;\r\n\r\n    this.utilsService.showNotification(\r\n      //'Ocurrió un error inesperado. Por favor intente más tarde.',\r\n      messageError,\r\n      4000\r\n    );\r\n\r\n    return throwError(() => new Error(error.message));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "storageApplication",
                        "type": "StorageApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "storageApplication",
                        "type": "StorageApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "injector",
                        "type": "Injector",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "Auth",
            "id": "class-Auth-d3f752374a9825d15e2a9c9ece4fd41b12516ae2a1837a30c1ffc375274e08856e09fd1265a7f0dfba79daba156e588382885364d8fcd95a80a1fe34d0ca1aa3",
            "file": "projects/system/src/app/modules/auth/domain/auth.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface AuthRequired {\r\n  correo: string;\r\n  password: string;\r\n}\r\n\r\nexport interface AuthOptional {\r\n  recaptchaReactive: string;\r\n}\r\n\r\nexport type AuthProperties = AuthRequired & Partial<AuthOptional>;\r\n\r\nexport class Auth {\r\n  private readonly correo: string;\r\n  private password: string;\r\n  private recaptchaReactive: string;\r\n\r\n  constructor(properties: AuthProperties) {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  properties(): AuthProperties {\r\n    return {\r\n      correo: this.correo,\r\n      password: this.password,\r\n      recaptchaReactive: this.recaptchaReactive,\r\n    };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "properties",
                        "type": "AuthProperties",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "properties",
                        "type": "AuthProperties",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "correo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "recaptchaReactive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "properties",
                    "args": [],
                    "optional": false,
                    "returnType": "AuthProperties",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "AuthFactory",
            "id": "class-AuthFactory-45eabaa91fdaeab1677accfb7dea5e037d166b580130c813298fc6a1edf75c6a322997512d74243f5bdf7c2841c3e7fa940d6ac4086d49660d4c584a724a64a5",
            "file": "projects/system/src/app/modules/auth/domain/auth.factory.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Auth, AuthProperties } from './auth';\r\n\r\nexport class AuthFactory {\r\n  static create(correo: string, password: string): Auth {\r\n    const recaptchaReactive = 'abc';\r\n    const authProperties: AuthProperties = {\r\n      correo,\r\n      password,\r\n      recaptchaReactive,\r\n    };\r\n\r\n    if (correo.trim() === '') {\r\n      throw new Error('Correo no puede ser vacío');\r\n    }\r\n\r\n    if (password.trim() === '') {\r\n      throw new Error('Password no puede ser vacío');\r\n    }\r\n\r\n    return new Auth(authProperties);\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "correo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Auth",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "correo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BaseApplication",
            "id": "class-BaseApplication-939cc14083a0bb37cc0ceeb80b8deb40ddd11a23ab7b8cc288253243352dcff8a49c8f43cc9a6873b63558ca9631996693c4de9ba215e1c6424eb2acd69a6685",
            "file": "projects/system/src/app/core/application/base-application.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Base } from '../domain/base.interface';\r\n\r\nexport abstract class BaseApplication<Entity, Repository extends Base<Entity>> {\r\n  constructor(private readonly repository: Repository) {}\r\n\r\n  list() {\r\n    return this.repository.list();\r\n  }\r\n\r\n  page(page: number) {\r\n    return this.repository.page(page);\r\n  }\r\n\r\n  update(id: number, entity: Partial<Entity>) {\r\n    return this.repository.update(id, entity);\r\n  }\r\n\r\n  insert(entity: Partial<Entity>) {\r\n    return this.repository.insert(entity);\r\n  }\r\n\r\n  delete(id: number) {\r\n    return this.repository.delete(id);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "repository",
                        "type": "Repository",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 3,
                "jsdoctags": [
                    {
                        "name": "repository",
                        "type": "Repository",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 6,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BaseComponent",
            "id": "class-BaseComponent-3fa325b74abc9b58c7eb41ba3e8b6263ee13670446bd6ba851487d6a9daaa74194815c84489e6f19366f127b71ee295947f582d95c52287e9e83e0b7e5cbd49d",
            "file": "projects/system/src/app/shared/classes/base-component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { environment } from 'projects/system/src/environments/environment';\r\n\r\nimport { LayoutService } from '../../config/services/layout.service';\r\nimport { BaseApplication } from '../../core/application/base-application';\r\nimport { Base, ResultPage } from '../../core/domain/base.interface';\r\nimport { MetaData } from '../interfaces/meta-data.interface';\r\nimport { ExportService } from '../service/export.service';\r\nimport { UtilsService } from '../service/utils.service';\r\n\r\nexport type ExportOptions = {\r\n  name: string;\r\n  filename: string;\r\n};\r\n\r\nexport type Messages = {\r\n  confirm: string;\r\n  insert: string;\r\n  update: string;\r\n  delete: string;\r\n};\r\n\r\nexport type Modal = {\r\n  component: any;\r\n  class: string;\r\n};\r\n\r\nexport abstract class BaseComponent<Entity, Repository extends Base<Entity>> {\r\n  abstract title: string;\r\n  abstract iconName: string;\r\n  abstract metaData: MetaData[];\r\n  abstract metaDataExport: MetaData[];\r\n  abstract exportOptions: ExportOptions;\r\n  abstract messages: Messages;\r\n  abstract modal: Modal;\r\n\r\n  totalRecords = 0;\r\n  pageSize = environment.pageSize;\r\n  currentPage = 0;\r\n\r\n  dataSourceOriginal = [];\r\n  dataSource = [];\r\n\r\n  constructor(\r\n    protected layoutService: LayoutService,\r\n    protected utilsService: UtilsService,\r\n    protected exportService: ExportService,\r\n    protected application: BaseApplication<Entity, Repository>\r\n  ) {\r\n    this.layoutService.configuration = { header: true, menu: true };\r\n    this.changePage(0);\r\n  }\r\n\r\n  changePage(pageIndex: number) {\r\n    this.application.page(pageIndex).subscribe({\r\n      next: (data: ResultPage<Entity>) => {\r\n        console.log(data);\r\n        this.dataSource = data.records;\r\n        this.totalRecords = data.totalRecords;\r\n        this.currentPage = pageIndex;\r\n      },\r\n    });\r\n  }\r\n\r\n  showOptionsExport() {\r\n    this.application.list().subscribe({\r\n      next: (data: Entity[]) => {\r\n        this.exportService.showExport(\r\n          data,\r\n          this.metaDataExport,\r\n          this.exportOptions.name,\r\n          this.exportOptions.filename\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(id: number, record: string = '') {\r\n    const confirmMessage = [this.messages.confirm, record];\r\n    this.utilsService.confirm(confirmMessage).subscribe((result) => {\r\n      if (result) {\r\n        this.application.delete(id).subscribe({\r\n          next: () => {\r\n            this.changePage(this.currentPage);\r\n\r\n            this.utilsService.showNotification(this.messages.delete);\r\n          },\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  openForm(data: Entity = null) {\r\n    this.utilsService\r\n      .openForm(this.modal.component, this.modal.class, data)\r\n      .subscribe((result) => {\r\n        if (!result) return;\r\n        const id = result.id;\r\n\r\n        if (id) {\r\n          this.application.update(id, result.data).subscribe({\r\n            next: () => {\r\n              this.changePage(this.currentPage);\r\n              this.utilsService.showNotification(this.messages.update);\r\n            },\r\n          });\r\n        } else {\r\n          this.application.insert(result.data).subscribe({\r\n            next: () => {\r\n              this.changePage(this.currentPage);\r\n              this.utilsService.showNotification(this.messages.insert);\r\n            },\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "exportService",
                        "type": "ExportService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "application",
                        "type": "BaseApplication<Entity | Repository>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "exportService",
                        "type": "ExportService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "application",
                        "type": "BaseApplication<Entity | Repository>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "currentPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "dataSourceOriginal",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "exportOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ExportOptions",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "iconName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "messages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Messages",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "metaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "metaDataExport",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "modal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Modal",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "pageSize",
                    "defaultValue": "environment.pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        126
                    ]
                },
                {
                    "name": "totalRecords",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methods": [
                {
                    "name": "changePage",
                    "args": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "record",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "record",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "Entity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Entity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "showOptionsExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "BaseInfrastructure",
            "id": "class-BaseInfrastructure-1985aa546a0a135fafbe3efb688853ce2ad664e401a8f79340f90f22128346fea93aa47f2c0b4e350389a15ff85e754fce66222a49b480ec007853fac0fd7274",
            "file": "projects/system/src/app/core/infrastructure/base-infrastructure.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { HttpClient } from '@angular/common/http';\r\nimport { environment } from 'projects/system/src/environments/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ResultPage } from '../domain/base.interface';\r\n\r\nexport abstract class BaseInfrastructure<Entity> {\r\n  constructor(\r\n    private readonly http: HttpClient,\r\n    private readonly endpoint: string\r\n  ) {}\r\n\r\n  insert(entity: Partial<Entity>): Observable<any> {\r\n    return this.http.post(`${environment.apiPath}/${this.endpoint}`, entity);\r\n  }\r\n  list(): Observable<Entity[]> {\r\n    return this.http.get<Entity[]>(`${environment.apiPath}/${this.endpoint}`);\r\n  }\r\n  listOne(id: number): Observable<any> {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  update(id: number, entity: Partial<Entity>): Observable<Entity> {\r\n    return this.http.put<Entity>(\r\n      `${environment.apiPath}/${this.endpoint}/${id}`,\r\n      entity\r\n    );\r\n  }\r\n  delete(id: number): Observable<any> {\r\n    return this.http.delete(`${environment.apiPath}/${this.endpoint}/${id}`);\r\n  }\r\n  page(page: number): Observable<ResultPage<Entity>> {\r\n    //const accessToken = this.storageApplication.getField('accessToken');\r\n    return this.http.get<ResultPage<Entity>>(\r\n      `${environment.apiPath}/${this.endpoint}/page/${page}/${environment.pageSize}`\r\n    );\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "endpoint",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "endpoint",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [],
            "methods": [
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "insert",
                    "args": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "list",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<Entity[]>",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "listOne",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<any>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "page",
                    "args": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<ResultPage<Entity>>",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "page",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Entity>",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "entity",
                            "type": "Partial<Entity>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Driver",
            "id": "class-Driver-133ba6e4a5cb5e9049dcb7c8dd931bb878a5d6af55f0c0fae90af726f897e877dee8581c60b0589e2a6d7661455339d7179d1330659e8558c9fd39b54cbf04bc",
            "file": "projects/system/src/app/modules/driver/domain/driver.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface DriverRequired {\r\n  nombre: string;\r\n}\r\n\r\nexport interface DriverOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type DriverProperties = DriverRequired & Partial<DriverOptional>;\r\n\r\nexport type DriverUpdate = {\r\n  nombre: string;\r\n};\r\n\r\nexport class Driver {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private activo: boolean;\r\n\r\n  constructor(properties: DriverProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): DriverProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: DriverUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "properties",
                        "type": "DriverProperties",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "properties",
                        "type": "DriverProperties",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "properties",
                    "args": [],
                    "optional": false,
                    "returnType": "DriverProperties",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "properties",
                            "type": "DriverUpdate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "properties",
                            "type": "DriverUpdate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DriverFactory",
            "id": "class-DriverFactory-09f176e8fda2807e3264bea22fb19fb573c6ec54086394cb94ef3f1e7bacb4c134b8c85eacec6bca8a3761e160144021e4d3cb2db668ea7f22f050e46e4a98fb",
            "file": "projects/system/src/app/modules/driver/domain/driver.factory.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Driver, DriverProperties } from './driver';\r\n\r\nexport class DriverFactory {\r\n  static create(nombre: string): Driver {\r\n    const driverProperties: DriverProperties = {\r\n      nombre,\r\n    };\r\n\r\n    if (nombre.trim() === '') {\r\n      throw new Error('El nombre del conductor es requerido');\r\n    }\r\n\r\n    return new Driver(driverProperties);\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Driver",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "History",
            "id": "class-History-227859afcf42da318fb241ca8dbde605805a04c7629b77d2abb0953a2029e2228b861acdec4f0f692bd1aa119b61cbf65ecb0fe6a32551574427938fc8fed63d",
            "file": "projects/system/src/app/modules/history/domain/history.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface HistoryRequired {\r\n  contratante: string;\r\n  requerido: string;\r\n  poliza: string;\r\n  dni: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  telefono: string;\r\n  edad: number;\r\n  sexo: number;\r\n  diagnostico: string;\r\n  sintomas: string;\r\n  tratamiento: string;\r\n  medico: any;\r\n}\r\n\r\nexport interface HistoryOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type HistoryProperties = HistoryRequired & Partial<HistoryOptional>;\r\n\r\nexport type HistoryUpdate = {\r\n  contratante: string;\r\n  requerido: string;\r\n  poliza: string;\r\n  dni: string;\r\n  nombre: string;\r\n  apellido: string;\r\n  telefono: string;\r\n  edad: number;\r\n  sexo: number;\r\n  diagnostico: string;\r\n  sintomas: string;\r\n  tratamiento: string;\r\n  medico: any;\r\n};\r\n\r\nexport class History {\r\n  private readonly id: number;\r\n  private contratante: string;\r\n  private requerido: string;\r\n  private poliza: string;\r\n  private dni: string;\r\n  private nombre: string;\r\n  private apellido: string;\r\n  private telefono: string;\r\n  private edad: number;\r\n  private sexo: number;\r\n  private diagnostico: string;\r\n  private sintomas: string;\r\n  private tratamiento: string;\r\n  private activo: boolean;\r\n  private medico: any;\r\n\r\n  constructor(properties: HistoryProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): HistoryProperties {\r\n    return {\r\n      id: this.id,\r\n      contratante: this.contratante,\r\n      requerido: this.requerido,\r\n      poliza: this.poliza,\r\n      dni: this.dni,\r\n      nombre: this.nombre,\r\n      apellido: this.apellido,\r\n      telefono: this.telefono,\r\n      edad: this.edad,\r\n      sexo: this.sexo,\r\n      diagnostico: this.diagnostico,\r\n      sintomas: this.sintomas,\r\n      tratamiento: this.tratamiento,\r\n      activo: this.activo,\r\n      medico: this.medico,\r\n    };\r\n  }\r\n\r\n  update(properties: HistoryUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "properties",
                        "type": "HistoryProperties",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 55,
                "jsdoctags": [
                    {
                        "name": "properties",
                        "type": "HistoryProperties",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "apellido",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "contratante",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "diagnostico",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dni",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "edad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "medico",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 55,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "poliza",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 44,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "requerido",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "sexo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 50,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "sintomas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 52,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "telefono",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "tratamiento",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "properties",
                    "args": [],
                    "optional": false,
                    "returnType": "HistoryProperties",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "properties",
                            "type": "HistoryUpdate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 82,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "properties",
                            "type": "HistoryUpdate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "HistoryFactory",
            "id": "class-HistoryFactory-31a6ccf4ccb766f1347bef7de1e8de1e8a41307f6b8d645edd41487e9017fb5c2d61e77af72b2b8db0a85c52b1b6d72721476f4ca600356d76a6d91aa2b9b5f7",
            "file": "projects/system/src/app/modules/history/domain/history.factory.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { History, HistoryProperties } from './history';\r\n\r\nexport class HistoryFactory {\r\n  static create(\r\n    contratante: string,\r\n    requerido: string,\r\n    poliza: string,\r\n    dni: string,\r\n    nombre: string,\r\n    apellido: string,\r\n    telefono: string,\r\n    edad: number,\r\n    sexo: number,\r\n    diagnostico: string,\r\n    sintomas: string,\r\n    tratamiento: string,\r\n    medico: any\r\n  ): History {\r\n    const historyProperties: HistoryProperties = {\r\n      contratante,\r\n      requerido,\r\n      poliza,\r\n      dni,\r\n      nombre,\r\n      apellido,\r\n      telefono,\r\n      edad,\r\n      sexo,\r\n      diagnostico,\r\n      sintomas,\r\n      tratamiento,\r\n      medico,\r\n    };\r\n\r\n    if (contratante.trim() === '') {\r\n      throw new Error('El contratante es requerido');\r\n    }\r\n\r\n    return new History(historyProperties);\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "contratante",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "requerido",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "poliza",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dni",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "apellido",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "telefono",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "edad",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sexo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "diagnostico",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "sintomas",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tratamiento",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "medico",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "History",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "contratante",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "requerido",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "poliza",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dni",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "apellido",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "telefono",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "edad",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sexo",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "diagnostico",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "sintomas",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tratamiento",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "medico",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Invoice",
            "id": "class-Invoice-5d37425930a8242793ef5d03b8509dc6a8e81faaefcd1c89609a1beb6485e8e4f24025cfc7c43f18e9c567f9f3bdad69a325c61aefbd1052d424259e2ccea297",
            "file": "projects/system/src/app/modules/billing/domain/invoice.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { InvoiceDetail } from './detail';\r\n\r\nexport interface InvoiceRequired {\r\n  nombre: string;\r\n  dni: string;\r\n  direccion: string;\r\n  telefono: string;\r\n  numeroFactura: string;\r\n  fecha: string;\r\n  detalle: InvoiceDetail[];\r\n}\r\n\r\nexport interface InvoiceOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type InvoiceProperties = InvoiceRequired & Partial<InvoiceOptional>;\r\n\r\nexport type InvoiceUpdate = {\r\n  nombre: string;\r\n  dni: string;\r\n  direccion: string;\r\n  telefono: string;\r\n  numeroFactura: string;\r\n  fecha: string;\r\n  detalle: InvoiceDetail[];\r\n};\r\n\r\nexport class Invoice {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private dni: string;\r\n  private direccion: string;\r\n  private telefono: string;\r\n  private numeroFactura: string;\r\n  private fecha: string;\r\n  private detalle: InvoiceDetail[];\r\n  private activo: boolean;\r\n\r\n  constructor(properties: InvoiceProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): InvoiceProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      dni: this.dni,\r\n      direccion: this.direccion,\r\n      telefono: this.telefono,\r\n      numeroFactura: this.numeroFactura,\r\n      fecha: this.fecha,\r\n      detalle: this.detalle,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: InvoiceUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "properties",
                        "type": "InvoiceProperties",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 39,
                "jsdoctags": [
                    {
                        "name": "properties",
                        "type": "InvoiceProperties",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "detalle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InvoiceDetail[]",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "direccion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dni",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "fecha",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "numeroFactura",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "telefono",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "properties",
                    "args": [],
                    "optional": false,
                    "returnType": "InvoiceProperties",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "properties",
                            "type": "InvoiceUpdate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "properties",
                            "type": "InvoiceUpdate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "InvoiceDetail",
            "id": "class-InvoiceDetail-e9a3c0ae698db0f721326c00378aaccddcebb0230e0ffa0717a3df16c69cb2f287a8879b6b908ae94e6d5c6b88cadfc79bba5c2c32cde240978f597eedf7abde",
            "file": "projects/system/src/app/modules/billing/domain/detail.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class InvoiceDetail {\r\n  constructor(\r\n    public productId: number,\r\n    public cantidad: number,\r\n    public descripcion: string,\r\n    public precio: number,\r\n    public total: number\r\n  ) {}\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "productId",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cantidad",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "descripcion",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "precio",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "total",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 1,
                "jsdoctags": [
                    {
                        "name": "productId",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cantidad",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "descripcion",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "precio",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "total",
                        "type": "number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "cantidad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "descripcion",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "precio",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "productId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "total",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "InvoiceFactory",
            "id": "class-InvoiceFactory-625381e6a6f5d33ee2a3390426e1fa09cbf5369840913ac22b7e4a6e5ed7cce01e9bdb29726060448b9e2984ffd6d57a3a1ac044d1cb8e18f62f3c05a829cde5",
            "file": "projects/system/src/app/modules/billing/domain/invoice.factory.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { InvoiceDetail } from './detail';\r\nimport { Invoice, InvoiceProperties } from './invoice';\r\n\r\nexport class InvoiceFactory {\r\n  static create(\r\n    nombre: string,\r\n    dni: string,\r\n    direccion: string,\r\n    telefono: string,\r\n    numeroFactura: string,\r\n    fecha: string,\r\n    detalle: InvoiceDetail[]\r\n  ): Invoice {\r\n    const invoiceProperties: InvoiceProperties = {\r\n      nombre,\r\n      dni,\r\n      direccion,\r\n      telefono,\r\n      numeroFactura,\r\n      fecha,\r\n      detalle,\r\n    };\r\n\r\n    if (nombre.trim() === '') {\r\n      throw new Error('El nombre del comprador es requerido');\r\n    }\r\n\r\n    if (detalle === undefined || detalle.length === 0) {\r\n      throw new Error('El detalle de la factura es requerido');\r\n    }\r\n\r\n    return new Invoice(invoiceProperties);\r\n  }\r\n}\r\n\r\nconst detail: InvoiceDetail[] = [\r\n  {\r\n    productId: 1,\r\n    cantidad: 1,\r\n    descripcion: 'Producto 1',\r\n    precio: 100,\r\n    total: 100,\r\n  },\r\n];\r\n\r\nconst invoice = InvoiceFactory.create(\r\n  'Juan Perez',\r\n  '12345678',\r\n  'Av. Siempre Viva 123',\r\n  '123456789',\r\n  'F001-0001',\r\n  '2020-01-23T14:37:00.000Z',\r\n  detail\r\n);\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dni",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "direccion",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "telefono",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "numeroFactura",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fecha",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "detalle",
                            "type": "InvoiceDetail[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Invoice",
                    "typeParameters": [],
                    "line": 5,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dni",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "direccion",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "telefono",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "numeroFactura",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fecha",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "detalle",
                            "type": "InvoiceDetail[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Medic",
            "id": "class-Medic-074b4585eced21ba3be4dc82aba52d0103dfb00eac906a058a590a77d8edee3b4e35d95be1d72fc7db6a9109a612df4b036fb10c46377df87d7b077588fd60c4",
            "file": "projects/system/src/app/modules/medic/domain/medic.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface MedicRequired {\r\n  nombre: string;\r\n  apellido: string;\r\n  segundo_nombre: string;\r\n  cmp: string;\r\n  correo: string;\r\n  dni: string;\r\n  foto: string;\r\n}\r\n\r\nexport interface MedicOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type MedicProperties = MedicRequired & Partial<MedicOptional>;\r\n\r\nexport type MedicUpdate = Partial<{\r\n  nombre: string;\r\n  apellido: string;\r\n  segundo_nombre: string;\r\n  cmp: string;\r\n  correo: string;\r\n  dni: string;\r\n  foto: string;\r\n}>;\r\n\r\nexport class Medic {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private apellido: string;\r\n  private segundo_nombre: string;\r\n  private cmp: string;\r\n  private correo: string;\r\n  private dni: string;\r\n  private foto: string;\r\n  private activo: boolean;\r\n\r\n  constructor(properties: MedicProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): MedicProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      apellido: this.apellido,\r\n      segundo_nombre: this.segundo_nombre,\r\n      cmp: this.cmp,\r\n      correo: this.correo,\r\n      dni: this.dni,\r\n      foto: this.foto,\r\n      activo: this.activo,\r\n    };\r\n  }\r\n\r\n  update(properties: MedicUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "properties",
                        "type": "MedicProperties",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "properties",
                        "type": "MedicProperties",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "apellido",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "cmp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "correo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "dni",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "foto",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "segundo_nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 32,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "properties",
                    "args": [],
                    "optional": false,
                    "returnType": "MedicProperties",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "properties",
                            "type": "MedicUpdate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "properties",
                            "type": "MedicUpdate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "MedicFactory",
            "id": "class-MedicFactory-2e7eb6968e6b815a3ff51ffab13ecbcd3e7248d14a27c0f19e17cae86547fd9f2376763714145ee8838d70e349d457c4cc31d19d25b13ba23ca7510fe7ae6c54",
            "file": "projects/system/src/app/modules/medic/domain/medic.factory.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Medic, MedicProperties } from './medic';\r\n\r\nexport class MedicFactory {\r\n  static create(\r\n    nombre: string,\r\n    apellido: string,\r\n    segundo_nombre: string,\r\n    cmp: string,\r\n    correo: string,\r\n    dni: string,\r\n    foto: string\r\n  ): Medic {\r\n    const medicProperties: MedicProperties = {\r\n      nombre,\r\n      apellido,\r\n      segundo_nombre,\r\n      cmp,\r\n      correo,\r\n      dni,\r\n      foto,\r\n    };\r\n\r\n    if (nombre.trim() === '') {\r\n      throw new Error('El nombre del medico es requerido');\r\n    }\r\n\r\n    return new Medic(medicProperties);\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "apellido",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "segundo_nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "cmp",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "correo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "dni",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "foto",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Medic",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "apellido",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "segundo_nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "cmp",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "correo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "dni",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "foto",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Paginator",
            "id": "class-Paginator-0253e4461e6e4069f05e75f6e4e25fd2f84665dbfd07104b481e447b84f9351c8ba57d51cc1c51603026e5544aaedcacd320424ea2dda1004d85eb1eda9d339a",
            "file": "projects/system/src/app/shared/classes/paginator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { MatPaginatorIntl } from '@angular/material/paginator';\r\n\r\nexport class Paginator extends MatPaginatorIntl {\r\n  override itemsPerPageLabel = 'Items por página:';\r\n  override nextPageLabel = 'SIGUIENTE PÁGINA';\r\n  override previousPageLabel = 'PÁGINA ANTERIOR';\r\n  override firstPageLabel = 'PRIMERA PÁGINA';\r\n  override lastPageLabel = 'ÚLTIMA PÁGINA';\r\n\r\n  override getRangeLabel = (page: number, pageSize: number, length: number) => {\r\n    if (length === 0 || pageSize === 0) {\r\n      return `0 of ${length}`;\r\n    }\r\n    length = Math.max(length, 0);\r\n    const startIndex = page * pageSize;\r\n    const endIndex =\r\n      startIndex < length\r\n        ? Math.min(startIndex + pageSize, length)\r\n        : startIndex + pageSize;\r\n    return `${startIndex + 1} - ${endIndex} de ${length} registros`;\r\n  };\r\n}\r\n",
            "properties": [
                {
                    "name": "firstPageLabel",
                    "defaultValue": "'PRIMERA PÁGINA'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        158
                    ]
                },
                {
                    "name": "getRangeLabel",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        158
                    ]
                },
                {
                    "name": "itemsPerPageLabel",
                    "defaultValue": "'Items por página:'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4,
                    "modifierKind": [
                        158
                    ]
                },
                {
                    "name": "lastPageLabel",
                    "defaultValue": "'ÚLTIMA PÁGINA'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        158
                    ]
                },
                {
                    "name": "nextPageLabel",
                    "defaultValue": "'SIGUIENTE PÁGINA'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5,
                    "modifierKind": [
                        158
                    ]
                },
                {
                    "name": "previousPageLabel",
                    "defaultValue": "'PÁGINA ANTERIOR'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6,
                    "modifierKind": [
                        158
                    ]
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "extends": "MatPaginatorIntl",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Role",
            "id": "class-Role-9fafbbbbdfe0f8332b050103493c8f23e9fe1346ad45fb1e0b202a9fa687b680f3a44b025375a26d4b76135212d6ccc33535388e024c3716cc890ec36955c433",
            "file": "projects/system/src/app/modules/role/domain/role.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface RoleRequired {\r\n  rol: string;\r\n}\r\n\r\nexport interface RoleOptional {\r\n  id: number;\r\n}\r\n\r\nexport type RoleProperties = RoleRequired & Partial<RoleOptional>;\r\n\r\nexport type RoleUpdate = {\r\n  rol: string;\r\n};\r\n\r\nexport class Role {\r\n  readonly id: number;\r\n  rol: string;\r\n\r\n  constructor(properties: RoleProperties) {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  properties(): RoleProperties {\r\n    return {\r\n      id: this.id,\r\n      rol: this.rol,\r\n    };\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "properties",
                        "type": "RoleProperties",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "properties",
                        "type": "RoleProperties",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "rol",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [
                {
                    "name": "properties",
                    "args": [],
                    "optional": false,
                    "returnType": "RoleProperties",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RoleFactory",
            "id": "class-RoleFactory-87e5d0eddf3ad0cb23665a6bd849fb160db4a7f0177264c6a34c4277c15e80faee0b8a526119f55f2cbbc11b94c702f8f3ed5a005674fff07f177df956bb7c1e",
            "file": "projects/system/src/app/modules/role/domain/role.factory.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Role, RoleProperties } from './role';\r\n\r\nexport class RoleFactory {\r\n  static create(rol: string): Role {\r\n    const roleProperties: RoleProperties = {\r\n      rol,\r\n    };\r\n\r\n    if (rol.trim() === '') {\r\n      throw new Error('El rol es requerido');\r\n    }\r\n\r\n    return new Role(roleProperties);\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "rol",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Role",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "rol",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-f612bcb386fab79e9954ac897742f1a1f4b52805edd2ca644306da38f29b217ca7de147a9266d39327a39ca5a5e89b11f8e4a54cf98e35c257aaed9fc7c2dbe4",
            "file": "projects/system/src/app/modules/user/domain/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export interface UserRequired {\r\n  nombre: string;\r\n  correo: string;\r\n  password: string;\r\n  roles: any;\r\n}\r\n\r\nexport interface UserOptional {\r\n  id: number;\r\n  activo: boolean;\r\n}\r\n\r\nexport type UserProperties = UserRequired & Partial<UserOptional>;\r\n\r\nexport type UserUpdate = {\r\n  nombre: string;\r\n  correo: string;\r\n  password: string;\r\n  roles: any;\r\n};\r\n\r\nexport class User {\r\n  private readonly id: number;\r\n  private nombre: string;\r\n  private correo: string;\r\n  private password: string;\r\n  private activo: boolean;\r\n  private roles: any;\r\n\r\n  constructor(properties: UserProperties) {\r\n    Object.assign(this, properties);\r\n    this.activo = true;\r\n  }\r\n\r\n  properties(): UserProperties {\r\n    return {\r\n      id: this.id,\r\n      nombre: this.nombre,\r\n      correo: this.correo,\r\n      password: this.password,\r\n      activo: this.activo,\r\n      roles: this.roles,\r\n    };\r\n  }\r\n\r\n  update(properties: UserUpdate): void {\r\n    Object.assign(this, properties);\r\n  }\r\n\r\n  delete(): void {\r\n    this.activo = false;\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "properties",
                        "type": "UserProperties",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 38,
                "jsdoctags": [
                    {
                        "name": "properties",
                        "type": "UserProperties",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "activo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "correo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        121,
                        144
                    ]
                },
                {
                    "name": "nombre",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "delete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "properties",
                    "args": [],
                    "optional": false,
                    "returnType": "UserProperties",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "update",
                    "args": [
                        {
                            "name": "properties",
                            "type": "UserUpdate",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "properties",
                            "type": "UserUpdate",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "UserFactory",
            "id": "class-UserFactory-a048a52ff844f7a84503caabc1ff48d0633abbd92f750c97c4c551d57927c4e252b79debb42f0a07cc77328b68dbd979da892b9aa113dc7255fa472744d8e185",
            "file": "projects/system/src/app/modules/user/domain/user.factory.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { User, UserProperties } from './user';\r\n\r\nexport class UserFactory {\r\n  static create(\r\n    nombre: string,\r\n    correo: string,\r\n    password: string,\r\n    roles: any\r\n  ): User {\r\n    const userProperties: UserProperties = {\r\n      nombre,\r\n      correo,\r\n      password,\r\n      roles,\r\n    };\r\n\r\n    if (nombre.trim() === '') {\r\n      throw new Error('El nombre del usuario es requerido');\r\n    }\r\n\r\n    return new User(userProperties);\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "create",
                    "args": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "correo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "roles",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "User",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "nombre",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "correo",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "roles",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "RolesAllowedDirective",
            "id": "directive-RolesAllowedDirective-ae301631a0b127acf56ab54fe6af5c1086de6929c173ecb476fca8151a300ad6998e891d4b60dc0952b513418c7a1950f72883b8e69793b2ae8d4e7c3ff3cc22",
            "file": "projects/system/src/app/shared/directives/roles-allowed.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\r\n\r\nimport { AuthApplication } from '../../modules/auth/application/auth.application';\r\nimport { StorageApplication } from '../../modules/auth/application/storage.application';\r\n\r\n@Directive({\r\n  selector: '[rolesAllowed]',\r\n})\r\nexport class RolesAllowedDirective {\r\n  @Input('rolesAllowed') roles: string = '';\r\n  listRolesAllowed: string[] = [];\r\n\r\n  constructor(\r\n    private readonly templateRef: TemplateRef<any>,\r\n    private readonly viewContainer: ViewContainerRef,\r\n    private readonly authApplication: AuthApplication,\r\n    private readonly storageApplication: StorageApplication\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.listRolesAllowed = this.roles.split(','); // [\"MEDIC\", \"OPERATOR\"]\r\n    this.execute();\r\n  }\r\n\r\n  execute() {\r\n    const isUserLogged = this.authApplication.isUserLogged;\r\n    const rolesUser = this.storageApplication.getFieldInToken(\r\n      'roles'\r\n    ) as string[];\r\n    const isUserAuthorized = rolesUser.some((role) =>\r\n      this.listRolesAllowed.includes(role)\r\n    );\r\n\r\n    if (isUserLogged && isUserAuthorized) {\r\n      this.viewContainer.createEmbeddedView(this.templateRef);\r\n    } else {\r\n      this.viewContainer.clear();\r\n    }\r\n  }\r\n}\r\n",
            "selector": "[rolesAllowed]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "rolesAllowed",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "listRolesAllowed",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "execute",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authApplication",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "storageApplication",
                        "type": "StorageApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "templateRef",
                        "type": "TemplateRef<any>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "viewContainer",
                        "type": "ViewContainerRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authApplication",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "storageApplication",
                        "type": "StorageApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "UploadDirective",
            "id": "directive-UploadDirective-9b192fea6c2d4d488ba6bc03e2196c8df1e61d6d757e8572f63bb2df699d69b107caaf06c7f5a709857bc8c1fbcdf7514e2a98107ada629f0c4b2b4c373c563c",
            "file": "projects/system/src/app/shared/directives/upload.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[upload]',\r\n})\r\nexport class UploadDirective {\r\n  @Output() onHover: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() onFileDropped: EventEmitter<File> = new EventEmitter<File>();\r\n\r\n  constructor() {}\r\n\r\n  @HostListener('dragover', ['$event']) onDragOver(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.onHover.emit(true);\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event']) onDragLeave(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.onHover.emit(false);\r\n  }\r\n\r\n  @HostListener('drop', ['$event']) onDrop(event) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.onHover.emit(false);\r\n\r\n    console.log(event);\r\n    const files = event.dataTransfer.files;\r\n    const fileSelected = files[0];\r\n\r\n    this.onFileDropped.emit(fileSelected);\r\n  }\r\n}\r\n",
            "selector": "[upload]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onFileDropped",
                    "defaultValue": "new EventEmitter<File>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "EventEmitter<File>"
                },
                {
                    "name": "onHover",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 7,
                    "type": "EventEmitter<boolean>"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "dragleave",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18
                },
                {
                    "name": "dragover",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12
                },
                {
                    "name": "drop",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onDragLeave",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dragleave', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDragOver",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'dragover', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onDrop",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'drop', ['$event']"
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-a3b04ca203cc9476b5034a49d63d8d2b78876218d7bcae65d4ad6462a8610aaea785eda31a60bdccac1445a98297af1c2b703254226b6e9d77fdb73a665223da",
            "file": "projects/system/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "configLayout",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ILayout",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "fecha",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "isLoading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "isMenuShow",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\nimport { ILayout } from './config/interfaces/layout.interface';\r\nimport { LayoutService } from './config/services/layout.service';\r\nimport { UtilsService } from './shared/service/utils.service';\r\n\r\n@Component({\r\n  selector: 'amb-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  isMenuShow: boolean = true;\r\n  isLoading = false;\r\n  configLayout: ILayout;\r\n  fecha: Date = new Date();\r\n\r\n  toggleMenu(): void {\r\n    this.isMenuShow = !this.isMenuShow;\r\n  }\r\n\r\n  constructor(\r\n    private layoutService: LayoutService,\r\n    private readonly utilsService: UtilsService\r\n  ) {\r\n    layoutService.configuration.subscribe((config: ILayout) => {\r\n      this.configLayout = config;\r\n    });\r\n    utilsService.loading.subscribe((isLoading: boolean) => {\r\n      this.isLoading = isLoading;\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-sidenav-container,\r\nmat-sidenav-content,\r\nmat-sidenav {\r\n  height: 100%;\r\n}\r\n\r\nmat-sidenav {\r\n  width: 280px;\r\n  background-color: rgb(15, 23, 42);\r\n}\r\n",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<mat-sidenav-container>\r\n  <mat-sidenav [opened]=\"isMenuShow\" mode=\"side\" *ngIf=\"configLayout.header\">\r\n    <amb-menu></amb-menu>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <amb-header\r\n      (onToggleSidenav)=\"toggleMenu()\"\r\n      *ngIf=\"configLayout.menu\"\r\n    ></amb-header>\r\n    <router-outlet></router-outlet>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n<amb-loader *ngIf=\"isLoading\"></amb-loader>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-4ef205c97a334c309aa4001c8ab4a6d9571dcae18d0e85aaf0d367467ab5d3a9f13ab3573726f1fcb409bc9b49894dadfb80b1bbe1b6ba7041455ad9d4922004",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ConfirmComponent",
            "id": "component-ConfirmComponent-0a2e398faf28e247f2dfd23251708e0b0e1170c1497ce79bf86debb012abdffa51668d5836a1ba65bc235d36e96de08825f6b917620b86f4992080acb7fb7163",
            "file": "projects/system/src/app/shared/components/confirm/confirm.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-confirm",
            "styleUrls": [
                "./confirm.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./confirm.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "messages",
                    "defaultValue": "['¿Está seguro de eliminar el registro?']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amb-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.css'],\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n  //messages = '¿Está seguro de eliminar el registro?';\r\n  messages = ['¿Está seguro de eliminar el registro?']\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "h6 {\r\n  text-align: center;\r\n  margin-bottom: 20px;\r\n}\r\n",
                    "styleUrl": "./confirm.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h6 *ngFor=\"let message of messages\">{{ message }}</h6>\r\n<div fxLayout fxLayoutAlign=\"center\" fxLayoutGap=\"20px\">\r\n  <button mat-raised-button color=\"accent\" mat-dialog-close=\"si\">Sí</button>\r\n  <button mat-button mat-dialog-close>No</button>\r\n</div>\r\n"
        },
        {
            "name": "ContainerComponent",
            "id": "component-ContainerComponent-2a41af3cd29c6525d8121f878b73177ab90038b0258fab29c5ed516fcc30b80538c50400225c71485b12799a7d62c875f69a59f7d61cb74fce483ffbf7b1a16a",
            "file": "projects/system/src/app/shared/components/container/container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-container",
            "styleUrls": [
                "./container.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./container.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amb-container',\r\n  templateUrl: './container.component.html',\r\n  styleUrls: ['./container.component.css']\r\n})\r\nexport class ContainerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container {\r\n  padding: 20px 0;\r\n  background-color: whitesmoke;\r\n  height: calc(100vh - 80px - 64px);\r\n}\r\n",
                    "styleUrl": "./container.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container\" fxLayout fxLayoutAlign=\"center\">\r\n  <mat-card fxFlex=\"1 1 95%\">\r\n    <ng-content></ng-content>\r\n  </mat-card>\r\n</div>\r\n"
        },
        {
            "name": "CovidComponent",
            "id": "component-CovidComponent-03202de9f6b09c08f0f112ad18650c50ebcec6d5af10fd3ff0e4008ed263d48faf896d8c92a67a76d8b3b1f7150a0902360552075f48d2e8999beb65eedece2b",
            "file": "projects/system/src/app/modules/dashboard/interfaces/covid/covid.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-covid",
            "styleUrls": [
                "./covid.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./covid.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Graph[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "showLegend",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "showXAxisLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "showYAxisLabel",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "view",
                    "defaultValue": "[700, 450]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[number, number]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "xAxis",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "xAxisLabel",
                    "defaultValue": "'Countries'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "yAxis",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "yAxisLabel",
                    "defaultValue": "'Confirmed cases'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { CovidApplication } from '../../application/covid.application';\r\nimport { Graph } from '../../domain/graph.interface';\r\n\r\n@Component({\r\n  selector: 'amb-covid',\r\n  templateUrl: './covid.component.html',\r\n  styleUrls: ['./covid.component.css'],\r\n})\r\nexport class CovidComponent implements OnInit {\r\n  view: [number, number] = [700, 450];\r\n  xAxis = true;\r\n  yAxis = true;\r\n  showXAxisLabel = true;\r\n  showYAxisLabel = true;\r\n  showLegend = false;\r\n  xAxisLabel = 'Countries';\r\n  yAxisLabel = 'Confirmed cases';\r\n\r\n  data: Graph[] = [];\r\n\r\n  constructor(private readonly covidApplication: CovidApplication) {}\r\n\r\n  ngOnInit(): void {\r\n    this.covidApplication.getGraph().subscribe((data) => {\r\n      this.data = data.map((el) => ({ name: el.country, value: el.confirmed }));\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./covid.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "covidApplication",
                        "type": "CovidApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "covidApplication",
                        "type": "CovidApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ngx-charts-bar-vertical\r\n  [view]=\"view\"\r\n  [results]=\"data\"\r\n  [xAxis]=\"xAxis\"\r\n  [yAxis]=\"yAxis\"\r\n  [legend]=\"showLegend\"\r\n  [showXAxisLabel]=\"showXAxisLabel\"\r\n  [showYAxisLabel]=\"showYAxisLabel\"\r\n  [xAxisLabel]=\"xAxisLabel\"\r\n  [yAxisLabel]=\"yAxisLabel\"\r\n>\r\n</ngx-charts-bar-vertical>\r\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-e085091ba9bed0e51f17c9655af68bc337925ee4b4b96a7af8a6395392814b13e6707813e3203343b1e1907f6a1a6965edd33d55062a6ad7174cab319cbed696",
            "file": "projects/system/src/app/modules/dashboard/interfaces/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-dashboard",
            "styleUrls": [
                "./dashboard.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconName",
                    "defaultValue": "'dashboard'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "title",
                    "defaultValue": "'Dashboard'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { LayoutService } from 'projects/system/src/app/config/services/layout.service';\r\n\r\n@Component({\r\n  selector: 'amb-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css'],\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  title: string = 'Dashboard';\r\n  iconName: string = 'dashboard';\r\n\r\n  constructor(private layoutService: LayoutService) {\r\n    this.layoutService.configuration = { header: true, menu: true };\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<amb-title [title]=\"title\" [iconName]=\"iconName\"></amb-title>\r\n<amb-container>\r\n  <amb-covid></amb-covid>\r\n  <amb-socket></amb-socket>\r\n</amb-container>\r\n"
        },
        {
            "name": "ExportComponent",
            "id": "component-ExportComponent-4cdfe067bcc23420e150ebd25267f3c38f02a134bacfd40472968924f73f64e287227ca7651bebbe9823c795e5989120ac45acb5b25715d4fbe6367ee28f4512",
            "file": "projects/system/src/app/shared/components/export/export.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-export",
            "styleUrls": [
                "./export.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./export.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elementName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "filename",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "metaDatas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "records",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "exportToExcel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "exportToPDF",
                    "args": [
                        {
                            "name": "option",
                            "type": "ACTION_PDF",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "ACTION_PDF",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_BOTTOM_SHEET_DATA, MatBottomSheetRef } from '@angular/material/bottom-sheet';\r\n\r\nimport { MetaData } from '../../interfaces/meta-data.interface';\r\nimport { UtilsService } from '../../service/utils.service';\r\n\r\nexport type ACTION_PDF = 'view' | 'download' | 'print';\r\n\r\n@Component({\r\n  selector: 'amb-export',\r\n  templateUrl: './export.component.html',\r\n  styleUrls: ['./export.component.css'],\r\n})\r\nexport class ExportComponent implements OnInit {\r\n  records: any[];\r\n  metaDatas: MetaData[];\r\n  elementName: string;\r\n  filename: string;\r\n\r\n  constructor(\r\n    @Inject(MAT_BOTTOM_SHEET_DATA) private data: any,\r\n    private reference: MatBottomSheetRef<ExportComponent>,\r\n    private utilsService: UtilsService\r\n  ) {\r\n    this.records = data.records;\r\n    this.metaDatas = data.metaDatas;\r\n    this.filename = data.filename;\r\n    this.elementName = data.elementName;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  exportToExcel() {\r\n    this.utilsService.exportToExcel(\r\n      this.records,\r\n      this.metaDatas,\r\n      this.filename,\r\n      this.elementName\r\n    );\r\n\r\n    this.reference.dismiss();\r\n  }\r\n\r\n  exportToPDF(option: ACTION_PDF) {\r\n    this.utilsService.exportToPDF(\r\n      this.records,\r\n      this.metaDatas,\r\n      this.filename,\r\n      this.elementName,\r\n      option\r\n    );\r\n\r\n    this.reference.dismiss();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./export.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "reference",
                        "type": "MatBottomSheetRef<ExportComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "reference",
                        "type": "MatBottomSheetRef<ExportComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-nav-list>\r\n  <mat-list-item>\r\n    <button mat-button (click)=\"exportToExcel()\">Exportar a Excel</button>\r\n  </mat-list-item>\r\n  <mat-list-item>\r\n    <button mat-button (click)=\"exportToPDF('view')\">\r\n      Exportar a PDF (visualización)\r\n    </button>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item>\r\n    <button mat-button (click)=\"exportToPDF('download')\">\r\n      Exportar a PDF (descarga)\r\n    </button>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item>\r\n    <button mat-button (click)=\"exportToPDF('print')\">\r\n      Exportar a PDF (imprimir)\r\n    </button>\r\n  </mat-list-item>\r\n</mat-nav-list>\r\n"
        },
        {
            "name": "FormDriverComponent",
            "id": "component-FormDriverComponent-fe634c4f1a3244fb8e08e2e9f2042b2fdee823d2c6145425069b8ab3055b1e42e31ed9b29faa669ed3871454cd54c0b04fb74bc6f795384a1e00b885da4ade3c",
            "file": "projects/system/src/app/modules/driver/interfaces/views/form-driver/form-driver.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-form-driver",
            "styleUrls": [
                "./form-driver.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-driver.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "loadForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'amb-form-driver',\r\n  templateUrl: './form-driver.component.html',\r\n  styleUrls: ['./form-driver.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FormDriverComponent implements OnInit {\r\n  title: string;\r\n  group: FormGroup;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private reference: MatDialogRef<FormDriverComponent>\r\n  ) {\r\n    this.title = data ? 'EDIT' : 'NEW';\r\n    this.loadForm();\r\n  }\r\n\r\n  loadForm() {\r\n    this.group = new FormGroup({\r\n      id: new FormControl(this.data?.id),\r\n      nombre: new FormControl(this.data?.nombre, Validators.required),\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const values = this.group.value;\r\n    const recordId = values.id;\r\n    delete values.id;\r\n\r\n    this.reference.close({ id: recordId, data: values });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".modal-driver {\r\n  width: 500px;\r\n}\r\n\r\n.modal-driver [mat-dialog-content] {\r\n  padding: 24px;\r\n  margin: 0;\r\n}\r\n\r\n.modal-driver mat-dialog-container {\r\n  padding: 0;\r\n}\r\n\r\n@media screen and (max-width: 500px) {\r\n  .modal-driver {\r\n    width: 400px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./form-driver.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "reference",
                        "type": "MatDialogRef<FormDriverComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "reference",
                        "type": "MatDialogRef<FormDriverComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar fxLayout fxLayoutAlign=\"space-between center\">\r\n  <h3>{{ title }}</h3>\r\n  <button mat-icon-button mat-dialog-close>\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<form mat-dialog-content fxLayout=\"column\" [formGroup]=\"group\">\r\n  <mat-form-field appearance=\"outline\">\r\n    <mat-label>Nombre</mat-label>\r\n    <input matInput type=\"text\" formControlName=\"nombre\" required />\r\n    <mat-error>El nombre es obligatorio</mat-error>\r\n  </mat-form-field>\r\n  <div fxLayout fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"button\"\r\n      [disabled]=\"group.invalid\"\r\n      (click)=\"save()\"\r\n    >\r\n      Save\r\n    </button>\r\n    <button mat-button mat-dialog-close type=\"button\">Cancel</button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "FormLoginComponent",
            "id": "component-FormLoginComponent-6c12e5bbf3f8171529211167f1491b0a04ab74fb93baf53b6104998b8494a8d5b4e8b6d7de42e54f4dd7c14cd357e23e76d7bc4a28849264f4c51a0b976c9a32",
            "file": "projects/system/src/app/core/interfaces/components/form-login/form-login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-form-login",
            "styleUrls": [
                "./form-login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "patternEmail",
                    "defaultValue": "'^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "styleFormField",
                    "defaultValue": "'outline'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatFormFieldAppearance",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "visibleInputPassword",
                    "defaultValue": "'password'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "VisibleInputPassword",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "getValidateEmailDomain",
                    "args": [
                        {
                            "name": "domainsAllowed",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidatorFn",
                    "typeParameters": [],
                    "line": 87,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "domainsAllowed",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "passwordVisible",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validateConfirmPassword",
                    "args": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ValidationErrors | null",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "control",
                            "type": "AbstractControl",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { MatFormFieldAppearance } from '@angular/material/form-field';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthApplication } from '../../../../modules/auth/application/auth.application';\r\nimport { AuthFactory } from '../../../../modules/auth/domain/auth.factory';\r\n\r\ntype VisibleInputPassword = 'password' | 'text';\r\n\r\n@Component({\r\n  selector: 'amb-form-login',\r\n  templateUrl: './form-login.component.html',\r\n  styleUrls: ['./form-login.component.css'],\r\n})\r\nexport class FormLoginComponent implements OnInit {\r\n  styleFormField: MatFormFieldAppearance = 'outline';\r\n  visibleInputPassword: VisibleInputPassword = 'password';\r\n\r\n  //domainsAllowed = ['company.com', 'lynk.com'];\r\n\r\n  group: FormGroup;\r\n\r\n  //patternPassword = '^(?=.*[a-z])(?=.{8,})';\r\n  //patternPassword = /^[a-zA-Z]\\w{3,14}$/;\r\n  patternEmail = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$';\r\n\r\n  constructor(\r\n    private readonly router: Router,\r\n    private readonly authApplication: AuthApplication\r\n  ) {\r\n    this.group = new FormGroup({\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.pattern(this.patternEmail),\r\n        //this.validateEmailDomain.bind(this),\r\n        //this.getValidateEmailDomain(this.domainsAllowed),\r\n      ]),\r\n      password: new FormControl(null, [\r\n        Validators.required,\r\n        //Validators.pattern(this.patternPassword),\r\n      ]),\r\n      /* confirm: new FormControl(null, [\r\n        Validators.required,\r\n        this.validateConfirmPassword,\r\n      ]), */\r\n    });\r\n\r\n    /*  this.group.get('email').valueChanges.subscribe((value) => {\r\n      console.log(value);\r\n    }); */\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  passwordVisible() {\r\n    this.visibleInputPassword =\r\n      this.visibleInputPassword === 'password' ? 'text' : 'password';\r\n  }\r\n\r\n  login() {\r\n    if (this.group.valid) {\r\n      const values = this.group.value;\r\n      const auth = AuthFactory.create(values.email, values.password);\r\n      this.authApplication.login(auth);\r\n      /*       console.log('Form is valid');\r\n      console.log(this.group.value);\r\n       this.router.navigate(['/driver']);*/ //   driver/list\r\n    } else {\r\n      console.log('Form is invalid');\r\n    }\r\n\r\n    //console.log(this.group);\r\n  }\r\n\r\n  /*  validateEmailDomain(control: AbstractControl): ValidationErrors | null {\r\n    if (!control.value) return null;\r\n\r\n    const email = (control.value as string).toLowerCase();\r\n\r\n    const isUsingDomainAllowed = this.domainsAllowed.some((domain) =>\r\n      email.endsWith(domain)\r\n    );\r\n    return isUsingDomainAllowed ? null : { invalidEmailDomain: true };\r\n  } */\r\n\r\n  getValidateEmailDomain(domainsAllowed: string[]): ValidatorFn {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      if (!control.value) return null;\r\n\r\n      const email = (control.value as string).toLowerCase();\r\n\r\n      const isUsingDomainAllowed = domainsAllowed.some((domain) =>\r\n        email.endsWith(domain)\r\n      );\r\n\r\n      return isUsingDomainAllowed ? null : { invalidEmailDomain: true };\r\n    };\r\n  }\r\n\r\n  validateConfirmPassword(control: AbstractControl): ValidationErrors | null {\r\n    const parent = control.parent;\r\n    if (!parent) return null;\r\n\r\n    const password = parent.get('password');\r\n    const confirm = parent.get('confirm');\r\n\r\n    if (!password || !confirm) return null;\r\n\r\n    if (password.value !== confirm.value) {\r\n      return { confirmNotMatch: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".clickable {\r\n  cursor: pointer;\r\n}\r\n\r\nh1,\r\nh2 {\r\n  text-align: center;\r\n}\r\n\r\n:host {\r\n  display: block;\r\n  width: 80%;\r\n}\r\n",
                    "styleUrl": "./form-login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authApplication",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authApplication",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form fxLayout=\"column\" [formGroup]=\"group\">\r\n  <h1>Sistema de Historias</h1>\r\n  <h2>Credenciales</h2>\r\n  <mat-form-field appearance=\"outline\" color=\"primary\">\r\n    <mat-label>Correo</mat-label>\r\n    <input type=\"text\" matInput formControlName=\"email\" required />\r\n    <mat-icon matSuffix color=\"primary\">mail</mat-icon>\r\n    <mat-error *ngIf=\"group.get('email').hasError('required')\">\r\n      El correo es requerido\r\n    </mat-error>\r\n    <mat-error *ngIf=\"group.get('email').hasError('pattern')\">\r\n      El correo no es válido\r\n    </mat-error>\r\n    <mat-error *ngIf=\"group.get('email').hasError('invalidEmailDomain')\">\r\n      Debe usar un correo corporativo\r\n    </mat-error>\r\n    <mat-hint>Debe usar el correo corporativo</mat-hint>\r\n  </mat-form-field>\r\n  <mat-form-field appearance=\"outline\" color=\"primary\">\r\n    <mat-label>Contraseña</mat-label>\r\n    <input\r\n      [type]=\"visibleInputPassword\"\r\n      matInput\r\n      formControlName=\"password\"\r\n      required\r\n    />\r\n\r\n    <mat-icon\r\n      matSuffix\r\n      (click)=\"passwordVisible()\"\r\n      color=\"primary\"\r\n      class=\"clickable\"\r\n      >lock</mat-icon\r\n    >\r\n    <mat-error *ngIf=\"group.get('password').hasError('required')\">\r\n      La contraseña es requerida\r\n    </mat-error>\r\n    <mat-error *ngIf=\"group.get('password').hasError('pattern')\">\r\n      La contraseña no cumple con el patrón\r\n    </mat-error>\r\n  </mat-form-field>\r\n\r\n  <!--  <mat-form-field appearance=\"outline\" color=\"primary\">\r\n    <mat-label>Confirmación de contraseña</mat-label>\r\n    <input type=\"password\" matInput formControlName=\"confirm\" required />\r\n\r\n    <mat-error *ngIf=\"group.get('confirm').hasError('required')\">\r\n      La confirmación de la contraseña es requerida\r\n    </mat-error>\r\n    <mat-error *ngIf=\"group.get('confirm').hasError('confirmNotMatch')\">\r\n      La contraseña y su confirmación deben ser iguales\r\n    </mat-error>\r\n  </mat-form-field> -->\r\n\r\n  <button mat-raised-button color=\"primary\" (click)=\"login()\">Ingresar</button>\r\n</form>\r\n"
        },
        {
            "name": "FormMedicComponent",
            "id": "component-FormMedicComponent-c0b12d3bc3d7cd146028d363237cd2c97acc2b51a4587b1d610f3d96e0c50072132d71125d82f67d8af5e4b183c8e9e2f0914a8b5b39c7b905f94035281c7113",
            "file": "projects/system/src/app/modules/medic/interfaces/views/form-medic/form-medic.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-form-medic",
            "styleUrls": [
                "./form-medic.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-medic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "photoToShow",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "loadForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'amb-form-medic',\r\n  templateUrl: './form-medic.component.html',\r\n  styleUrls: ['./form-medic.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FormMedicComponent implements OnInit {\r\n  title: string;\r\n  group: FormGroup;\r\n  photoToShow = '';\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private reference: MatDialogRef<FormMedicComponent>\r\n  ) {\r\n    this.title = data ? 'EDIT' : 'NEW';\r\n    this.loadForm();\r\n  }\r\n\r\n  loadForm() {\r\n    this.group = new FormGroup({\r\n      id: new FormControl(this.data?.id),\r\n      nombre: new FormControl(this.data?.nombre, Validators.required),\r\n      segundo_nombre: new FormControl(\r\n        this.data?.segundo_nombre,\r\n        Validators.required\r\n      ),\r\n      apellido: new FormControl(this.data?.apellido, Validators.required),\r\n      cmp: new FormControl(this.data?.cmp, Validators.required),\r\n      dni: new FormControl(this.data?.dni, Validators.required),\r\n      correo: new FormControl(this.data?.correo, [\r\n        Validators.required,\r\n        Validators.email,\r\n      ]),\r\n    });\r\n\r\n    if (this.data) {\r\n      this.group.addControl('foto', new FormControl());\r\n      this.photoToShow = this.data.foto || '';\r\n    } else {\r\n      this.group.addControl('foto', new FormControl(null, Validators.required));\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  save() {\r\n    const values = this.group.value;\r\n    const recordId = values.id;\r\n    delete values.id;\r\n\r\n    const fd = new FormData();\r\n    for (const key of Object.keys(values)) {\r\n      if (key === 'foto' && values[key]) {\r\n        fd.append(key, values[key]);\r\n      } else if (key !== 'foto') {\r\n        fd.append(key, values[key]);\r\n      }\r\n    }\r\n\r\n    this.reference.close({ id: recordId, data: fd });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".modal-medic {\r\n  width: 800px;\r\n}\r\n\r\n.modal-medic .mat-dialog-container {\r\n  padding: 0 !important;\r\n}\r\n\r\n.modal-medic .mat-dialog-content {\r\n  margin: 0;\r\n  padding: 24px;\r\n}\r\n",
                    "styleUrl": "./form-medic.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "reference",
                        "type": "MatDialogRef<FormMedicComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "reference",
                        "type": "MatDialogRef<FormMedicComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar fxLayout fxLayoutAlign=\"space-between center\">\r\n  <h3>{{ title }}</h3>\r\n  <button mat-icon-button mat-dialog-close>\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<form mat-dialog-content fxLayout=\"column\" [formGroup]=\"group\">\r\n  <div fxLayout fxLayoutGap=\"20px\">\r\n    <div fxLayout=\"column\" fxFlex=\"1 1 33%\">\r\n      <amb-photo\r\n        formControlName=\"foto\"\r\n        [photoByDefault]=\"photoToShow\"\r\n      ></amb-photo>\r\n    </div>\r\n    <div fxLayout=\"column\" fxFlex=\"1 1 33%\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Nombre</mat-label>\r\n        <input type=\"text\" formControlName=\"nombre\" matInput required />\r\n        <mat-error>El nombre es obligatorio</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Segundo nombre</mat-label>\r\n        <input type=\"text\" formControlName=\"segundo_nombre\" matInput required />\r\n        <mat-error>El segundo nombre es obligatorio</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Apellido</mat-label>\r\n        <input type=\"text\" formControlName=\"apellido\" matInput required />\r\n        <mat-error>El apellido es obligatorio</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n    <div fxLayout=\"column\" fxFlex=\"1 1 33%\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>CMP</mat-label>\r\n        <input type=\"text\" formControlName=\"cmp\" matInput required />\r\n        <mat-error>El CMP es obligatorio</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>DNI</mat-label>\r\n        <input type=\"text\" formControlName=\"dni\" matInput required />\r\n        <mat-error>El DNI es obligatorio</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Correo</mat-label>\r\n        <input type=\"text\" formControlName=\"correo\" matInput required />\r\n        <mat-error>El correo es obligatorio</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div fxLayout fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"button\"\r\n      [disabled]=\"group.invalid\"\r\n      (click)=\"save()\"\r\n    >\r\n      Save\r\n    </button>\r\n    <button mat-button mat-dialog-close type=\"button\">Cancel</button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "FormUserComponent",
            "id": "component-FormUserComponent-a56fc35bc677b68d992ca41b8bd71a38af1ef9faf14f3cb2961f49a5873066d62aae6d39c554c0dbb1968b603a0c03d9607a2ccfb8dc7bce8439a67c25353aab",
            "file": "projects/system/src/app/modules/user/interfaces/form-user/form-user.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-form-user",
            "styleUrls": [
                "./form-user.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./form-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "group",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<any[]>",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methodsClass": [
                {
                    "name": "loadForm",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadRoles",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { RoleApplication } from '../../../role/application/role.application';\r\n\r\ninterface IRole {\r\n  id: number;\r\n  rol: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'amb-form-user',\r\n  templateUrl: './form-user.component.html',\r\n  styleUrls: ['./form-user.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class FormUserComponent implements OnInit {\r\n  title: string;\r\n  group: FormGroup;\r\n  roles: Observable<any[]>;\r\n\r\n  constructor(\r\n    @Inject(MAT_DIALOG_DATA) private data: any,\r\n    private reference: MatDialogRef<FormUserComponent>,\r\n    private readonly roleApplication: RoleApplication\r\n  ) {\r\n    this.title = data ? 'EDIT' : 'NEW';\r\n    this.loadForm();\r\n    this.loadRoles();\r\n  }\r\n\r\n  loadForm() {\r\n    console.log(this.data);\r\n    this.group = new FormGroup({\r\n      id: new FormControl(this.data?.id),\r\n      nombre: new FormControl(this.data?.nombre, Validators.required),\r\n      correo: new FormControl(this.data?.correo, Validators.required),\r\n      roles: new FormControl(\r\n        this.data?.roles.map((role) => role.id),\r\n        Validators.required\r\n      ),\r\n    });\r\n\r\n    if (!this.data) {\r\n      this.group.addControl(\r\n        'password',\r\n        new FormControl('', Validators.required)\r\n      );\r\n    } else {\r\n      this.group.addControl('password', new FormControl(''));\r\n    }\r\n  }\r\n\r\n  loadRoles() {\r\n    this.roles = this.roleApplication.list();\r\n  }\r\n\r\n  save() {\r\n    const values = this.group.value;\r\n    const recordId = values.id;\r\n    delete values.id;\r\n\r\n    if (this.data && !values.password) {\r\n      delete values.password;\r\n    }\r\n\r\n    this.reference.close({ id: recordId, data: values });\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".modal-user {\r\n  width: 600px;\r\n}\r\n\r\n.modal-user [mat-dialog-content] {\r\n  padding: 24px;\r\n  margin: 0;\r\n}\r\n\r\n.modal-user mat-dialog-container {\r\n  padding: 0;\r\n}\r\n\r\n@media screen and (max-width: 500px) {\r\n  .modal-user {\r\n    width: 400px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./form-user.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "reference",
                        "type": "MatDialogRef<FormUserComponent>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "roleApplication",
                        "type": "RoleApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "data",
                        "type": "any",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "reference",
                        "type": "MatDialogRef<FormUserComponent>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "roleApplication",
                        "type": "RoleApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-toolbar fxLayout fxLayoutAlign=\"space-between center\">\r\n  <h3>{{ title }}</h3>\r\n  <button mat-icon-button mat-dialog-close>\r\n    <mat-icon>close</mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n\r\n<form mat-dialog-content fxLayout=\"column\" [formGroup]=\"group\">\r\n  <div fxLayout fxLayoutGap=\"20px\">\r\n    <div fxLayout=\"column\" fxFlex=\"1 1 50%\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Nombre</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"nombre\" required />\r\n        <mat-error>El nombre es obligatorio</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Correo</mat-label>\r\n        <input matInput type=\"text\" formControlName=\"correo\" required />\r\n        <mat-error>El correo es obligatorio</mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div fxLayout=\"column\" fxFlex=\"1 1 50%\">\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Contraseña</mat-label>\r\n        <input matInput type=\"password\" formControlName=\"password\" />\r\n        <mat-error>El password es obligatorio</mat-error>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\">\r\n        <mat-label>Roles</mat-label>\r\n        <mat-select formControlName=\"roles\" multiple>\r\n          <mat-option *ngFor=\"let role of roles | async\" [value]=\"role.id\">\r\n            {{ role.rol }}\r\n          </mat-option>\r\n        </mat-select>\r\n      </mat-form-field>\r\n    </div>\r\n  </div>\r\n  <div fxLayout fxLayoutAlign=\"end\" fxLayoutGap=\"20px\">\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      type=\"button\"\r\n      [disabled]=\"group.invalid\"\r\n      (click)=\"save()\"\r\n    >\r\n      Save\r\n    </button>\r\n    <button mat-button mat-dialog-close type=\"button\">Cancel</button>\r\n  </div>\r\n</form>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-535343c297a60102620c19ec7abc653f488f50646a78df65af3bbb893806732729dae74ef84d35e0ffd2392bebd6a286df41705c6c15a9b939ae70d14dbe08ef-1",
            "file": "projects/system/src/app/core/interfaces/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-header",
            "styleUrls": [
                "./header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "onToggleSidenav",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toggleSidenav",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\n\r\nimport { AuthApplication } from '../../../modules/auth/application/auth.application';\r\n\r\n@Component({\r\n  selector: 'amb-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  @Output() onToggleSidenav: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  constructor(private readonly authApplication: AuthApplication) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  toggleSidenav(): void {\r\n    this.onToggleSidenav.emit();\r\n  }\r\n\r\n  logout(): void {\r\n    this.authApplication.logout();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-toolbar {\r\n  background-color: white;\r\n  border-bottom: 2px solid #6b6b6b2b;\r\n  /*   display: flex;\r\n  justify-content: space-between; */\r\n}\r\n\r\n.profile {\r\n  height: 100%;\r\n}\r\n\r\n.profile img {\r\n  width: 100%;\r\n  max-width: 40px;\r\n  margin-right: 10px;\r\n}\r\n",
                    "styleUrl": "./header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authApplication",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "authApplication",
                        "type": "AuthApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<!-- fxLayout {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n} \r\n\r\nfxLayoutAlign {\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n} \r\n\r\nfxHide {\r\n    display: none;\r\n}\r\n\r\nfxShow {\r\n    display: block;\r\n}\r\n\r\ngreat than small = gt-sm\r\nless than medium = lt-md\r\ngreat than xsmall = gt-xs\r\n-->\r\n\r\n<!-- <mat-toolbar\r\n  fxLayout\r\n  fxLayout.lt-sm=\"column\"\r\n  fxLayoutAlign=\"space-between center\"\r\n  fxLayoutAlign.gt-xs=\"center center\"\r\n> -->\r\n<mat-toolbar fxLayout fxLayoutAlign=\"space-between center\">\r\n  <button mat-icon-button (click)=\"toggleSidenav()\">\r\n    <mat-icon fontIcon=\"menu\"></mat-icon>\r\n  </button>\r\n  <!--   <button mat-button class=\"profile\" fxHide.lt-md> -->\r\n  <button mat-button class=\"profile\" [matMenuTriggerFor]=\"menu\">\r\n    <img src=\"/assets/img/user.png\" />\r\n    <span>User Name</span>\r\n    <mat-icon fontIcon=\"expand_more\"></mat-icon>\r\n  </button>\r\n</mat-toolbar>\r\n<mat-menu #menu=\"matMenu\">\r\n  <button mat-menu-item>\r\n    <mat-icon>lock</mat-icon>\r\n    Bloquear sesión\r\n  </button>\r\n  <button mat-menu-item (click)=\"logout()\">\r\n    <mat-icon>logout</mat-icon>\r\n    Cerrar sesión\r\n  </button>\r\n</mat-menu>\r\n"
        },
        {
            "name": "ListDriverComponent",
            "id": "component-ListDriverComponent-5e4cb4e8a08a9be7fe821e47bf572408789e3fa7c92c145c02b76be566a6454d5481657a36502e8ffaec8be55746ef1c0b665f1b79cdeb3f46f74084973f2641",
            "file": "projects/system/src/app/modules/driver/interfaces/views/list-driver/list-driver.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-list-driver",
            "styleUrls": [
                "./list-driver.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./list-driver.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "exportOptions",
                    "defaultValue": "{\r\n    name: 'drivers',\r\n    filename: 'drivers',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ExportOptions",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "iconName",
                    "defaultValue": "'directions_bus'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "messages",
                    "defaultValue": "{\r\n    confirm: '¿Está seguro de eliminar?',\r\n    insert: 'Piloto insertado',\r\n    update: 'Piloto actualizado',\r\n    delete: 'Piloto eliminado',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Messages",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "metaData",
                    "defaultValue": "[\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "metaDataExport",
                    "defaultValue": "[\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "modal",
                    "defaultValue": "{\r\n    component: FormDriverComponent,\r\n    class: 'modal-driver',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Modal",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "title",
                    "defaultValue": "'Drivers'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "currentPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "dataSourceOriginal",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "pageSize",
                    "defaultValue": "environment.pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "totalRecords",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changePage",
                    "args": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "record",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "record",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "openForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "Entity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Entity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "showOptionsExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { LayoutService } from 'projects/system/src/app/config/services/layout.service';\r\nimport { BaseComponent, Messages } from 'projects/system/src/app/shared/classes/base-component';\r\nimport { MetaData } from 'projects/system/src/app/shared/interfaces/meta-data.interface';\r\nimport { ExportService } from 'projects/system/src/app/shared/service/export.service';\r\n\r\nimport { ExportOptions, Modal } from '../../../../../shared/classes/base-component';\r\nimport { UtilsService } from '../../../../../shared/service/utils.service';\r\nimport { DriverApplication } from '../../../application/driver.application';\r\nimport { Driver } from '../../../domain/driver';\r\nimport { DriverRepository } from '../../../domain/driver.repository';\r\nimport { FormDriverComponent } from '../form-driver/form-driver.component';\r\n\r\n@Component({\r\n  selector: 'amb-list-driver',\r\n  templateUrl: './list-driver.component.html',\r\n  styleUrls: ['./list-driver.component.css'],\r\n})\r\nexport class ListDriverComponent extends BaseComponent<\r\n  Driver,\r\n  DriverRepository\r\n> {\r\n  title = 'Drivers';\r\n  iconName = 'directions_bus';\r\n\r\n  metaData: MetaData[] = [\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n  ];\r\n\r\n  metaDataExport: MetaData[] = [\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n  ];\r\n\r\n  exportOptions: ExportOptions = {\r\n    name: 'drivers',\r\n    filename: 'drivers',\r\n  };\r\n\r\n  messages: Messages = {\r\n    confirm: '¿Está seguro de eliminar?',\r\n    insert: 'Piloto insertado',\r\n    update: 'Piloto actualizado',\r\n    delete: 'Piloto eliminado',\r\n  };\r\n\r\n  modal: Modal = {\r\n    component: FormDriverComponent,\r\n    class: 'modal-driver',\r\n  };\r\n\r\n  constructor(\r\n    protected override layoutService: LayoutService,\r\n    protected override exportService: ExportService,\r\n    protected override utilsService: UtilsService,\r\n    protected driverApplication: DriverApplication\r\n  ) {\r\n    super(layoutService, utilsService, exportService, driverApplication);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-driver.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "exportService",
                        "type": "ExportService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "driverApplication",
                        "type": "DriverApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 51,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "exportService",
                        "type": "ExportService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "driverApplication",
                        "type": "DriverApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseComponent",
            "templateData": "<amb-title title=\"{{ title }}\" [iconName]=\"iconName\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"openForm()\">\r\n    <mat-icon>add</mat-icon>\r\n    <span>ADD DRIVER</span>\r\n  </button>\r\n</amb-title>\r\n\r\n<amb-container>\r\n  <perfect-scrollbar class=\"heightMaxPerfectScrollBar\">\r\n    <amb-table [metaData]=\"metaData\" [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let row\" class=\"align-right\">\r\n          <button\r\n            mat-icon-button\r\n            color=\"primary\"\r\n            matTooltip=\"EDIT\"\r\n            (click)=\"openForm(row)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            color=\"accent\"\r\n            matTooltip=\"DELETE\"\r\n            (click)=\"delete(row.id)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n    </amb-table>\r\n  </perfect-scrollbar>\r\n  <div fxLayout fxLayoutAlign=\"space-between center\" class=\"footer\">\r\n    <button mat-icon-button color=\"warn\" (click)=\"showOptionsExport()\">\r\n      <mat-icon>download_for_offline</mat-icon>\r\n      Exportar data\r\n    </button>\r\n    <amb-paginator\r\n      [length]=\"totalRecords\"\r\n      [pageSize]=\"pageSize\"\r\n      [pageIndex]=\"0\"\r\n      (onChangePage)=\"changePage($event)\"\r\n    ></amb-paginator>\r\n  </div>\r\n</amb-container>\r\n"
        },
        {
            "name": "ListHistoryComponent",
            "id": "component-ListHistoryComponent-3c89c17e7af396f7ff91109662ca201ef620112fcc27a7b1d60ae7bcf89e240fc5b7d446f4d2ec39769412f84eb68c15548ff299f917acc96dcbd42640b3393c",
            "file": "projects/system/src/app/modules/history/interfaces/list-history/list-history.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-list-history",
            "styleUrls": [
                "./list-history.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./list-history.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "dataSourceOriginal",
                    "defaultValue": "[\r\n    { id: 1, name: 'test', age: 20 },\r\n    { id: 2, name: 'test2', age: 40 },\r\n    { id: 3, name: 'test', age: 20 },\r\n    { id: 4, name: 'test2', age: 40 },\r\n    { id: 5, name: 'test', age: 20 },\r\n    { id: 6, name: 'test2', age: 40 },\r\n    { id: 7, name: 'test', age: 20 },\r\n    { id: 8, name: 'test2', age: 40 },\r\n    { id: 9, name: 'test', age: 20 },\r\n    { id: 10, name: 'test2', age: 40 },\r\n    { id: 11, name: 'test', age: 20 },\r\n    { id: 12, name: 'test2', age: 40 },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "iconName",
                    "defaultValue": "'medical_information'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "metaData",
                    "defaultValue": "[\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'name', title: 'Nombre' },\r\n    { field: 'age', title: 'Edad' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "title",
                    "defaultValue": "'Histories'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport { LayoutService } from 'projects/system/src/app/config/services/layout.service';\r\nimport { MetaData } from 'projects/system/src/app/shared/interfaces/meta-data.interface';\r\n\r\n@Component({\r\n  selector: 'amb-list-history',\r\n  templateUrl: './list-history.component.html',\r\n  styleUrls: ['./list-history.component.css'],\r\n})\r\nexport class ListHistoryComponent implements OnInit {\r\n  title = 'Histories';\r\n  iconName = 'medical_information';\r\n\r\n  metaData: MetaData[] = [\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'name', title: 'Nombre' },\r\n    { field: 'age', title: 'Edad' },\r\n  ];\r\n  dataSourceOriginal = [\r\n    { id: 1, name: 'test', age: 20 },\r\n    { id: 2, name: 'test2', age: 40 },\r\n    { id: 3, name: 'test', age: 20 },\r\n    { id: 4, name: 'test2', age: 40 },\r\n    { id: 5, name: 'test', age: 20 },\r\n    { id: 6, name: 'test2', age: 40 },\r\n    { id: 7, name: 'test', age: 20 },\r\n    { id: 8, name: 'test2', age: 40 },\r\n    { id: 9, name: 'test', age: 20 },\r\n    { id: 10, name: 'test2', age: 40 },\r\n    { id: 11, name: 'test', age: 20 },\r\n    { id: 12, name: 'test2', age: 40 },\r\n  ];\r\n\r\n  dataSource = [];\r\n\r\n  constructor(private layoutService: LayoutService) {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-history.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 34,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        },
        {
            "name": "ListMedicComponent",
            "id": "component-ListMedicComponent-9c6b29f01b119b1b293ce123c5f97b6a0f3304578e16b84772b1caba0085578e74d88504bcc554f62334f4ca2b5ad4f10bfd323db7effaaf554e0ca1060c6409",
            "file": "projects/system/src/app/modules/medic/interfaces/views/list-medic/list-medic.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-list-medic",
            "styleUrls": [
                "./list-medic.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./list-medic.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "exportOptions",
                    "defaultValue": "{\r\n    name: 'medics',\r\n    filename: 'medics',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ExportOptions",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "iconName",
                    "defaultValue": "'directions_bus'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "messages",
                    "defaultValue": "{\r\n    confirm: '¿Está seguro de eliminar?',\r\n    insert: 'Médico insertado',\r\n    update: 'Médico actualizado',\r\n    delete: 'Médico eliminado',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Messages",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "metaData",
                    "defaultValue": "[\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n    { field: 'segundo_nombre', title: 'Segundo Nombre' },\r\n    { field: 'apellido', title: 'Apellido Paterno' },\r\n    { field: 'cmp', title: 'CMP' },\r\n    { field: 'correo', title: 'Correo' },\r\n    //{ field: 'dni', title: 'DNI' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "metaDataExport",
                    "defaultValue": "[\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n    { field: 'segundo_nombre', title: 'Segundo Nombre' },\r\n    { field: 'apellido', title: 'Apellido Paterno' },\r\n    { field: 'dni', title: 'DNI' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "modal",
                    "defaultValue": "{\r\n    component: FormMedicComponent,\r\n    class: 'modal-medic',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Modal",
                    "optional": false,
                    "description": "",
                    "line": 53,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "title",
                    "defaultValue": "'Medics'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "currentPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "dataSourceOriginal",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "pageSize",
                    "defaultValue": "environment.pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "totalRecords",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changePage",
                    "args": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "record",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "record",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "openForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "Entity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Entity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "showOptionsExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { LayoutService } from 'projects/system/src/app/config/services/layout.service';\r\nimport { BaseComponent, Messages } from 'projects/system/src/app/shared/classes/base-component';\r\nimport { MetaData } from 'projects/system/src/app/shared/interfaces/meta-data.interface';\r\nimport { ExportService } from 'projects/system/src/app/shared/service/export.service';\r\n\r\nimport { ExportOptions, Modal } from '../../../../../shared/classes/base-component';\r\nimport { UtilsService } from '../../../../../shared/service/utils.service';\r\nimport { MedicApplication } from '../../../application/medic.application';\r\nimport { Medic } from '../../../domain/medic';\r\nimport { MedicRepository } from '../../../domain/medic.repository';\r\nimport { FormMedicComponent } from '../form-medic/form-medic.component';\r\n\r\n@Component({\r\n  selector: 'amb-list-medic',\r\n  templateUrl: './list-medic.component.html',\r\n  styleUrls: ['./list-medic.component.css'],\r\n})\r\nexport class ListMedicComponent extends BaseComponent<Medic, MedicRepository> {\r\n  title = 'Medics';\r\n  iconName = 'directions_bus';\r\n\r\n  metaData: MetaData[] = [\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n    { field: 'segundo_nombre', title: 'Segundo Nombre' },\r\n    { field: 'apellido', title: 'Apellido Paterno' },\r\n    { field: 'cmp', title: 'CMP' },\r\n    { field: 'correo', title: 'Correo' },\r\n    //{ field: 'dni', title: 'DNI' },\r\n  ];\r\n\r\n  metaDataExport: MetaData[] = [\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n    { field: 'segundo_nombre', title: 'Segundo Nombre' },\r\n    { field: 'apellido', title: 'Apellido Paterno' },\r\n    { field: 'dni', title: 'DNI' },\r\n  ];\r\n\r\n  exportOptions: ExportOptions = {\r\n    name: 'medics',\r\n    filename: 'medics',\r\n  };\r\n\r\n  messages: Messages = {\r\n    confirm: '¿Está seguro de eliminar?',\r\n    insert: 'Médico insertado',\r\n    update: 'Médico actualizado',\r\n    delete: 'Médico eliminado',\r\n  };\r\n\r\n  modal: Modal = {\r\n    component: FormMedicComponent,\r\n    class: 'modal-medic',\r\n  };\r\n\r\n  constructor(\r\n    protected override layoutService: LayoutService,\r\n    protected override exportService: ExportService,\r\n    protected override utilsService: UtilsService,\r\n    protected medicApplication: MedicApplication\r\n  ) {\r\n    super(layoutService, utilsService, exportService, medicApplication);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-medic.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "exportService",
                        "type": "ExportService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "medicApplication",
                        "type": "MedicApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 56,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "exportService",
                        "type": "ExportService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "medicApplication",
                        "type": "MedicApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseComponent",
            "templateData": "<amb-title title=\"{{ title }}\" [iconName]=\"iconName\">\r\n  <button\r\n    mat-raised-button\r\n    color=\"primary\"\r\n    (click)=\"openForm()\"\r\n    *rolesAllowed=\"'MEDIC,ADMIN'\"\r\n  >\r\n    <mat-icon>add</mat-icon>\r\n    <span>ADD MEDIC</span>\r\n  </button>\r\n</amb-title>\r\n\r\n<amb-container>\r\n  <perfect-scrollbar class=\"heightMaxPerfectScrollBar\">\r\n    <amb-table [metaData]=\"metaData\" [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let row\" class=\"align-right\">\r\n          <button\r\n            mat-icon-button\r\n            color=\"primary\"\r\n            matTooltip=\"EDIT\"\r\n            (click)=\"openForm(row)\"\r\n            *rolesAllowed=\"'MEDIC,ADMIN'\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            color=\"accent\"\r\n            matTooltip=\"DELETE\"\r\n            (click)=\"delete(row.id, row.nombre + ' ' + row.apellido)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n    </amb-table>\r\n  </perfect-scrollbar>\r\n  <div fxLayout fxLayoutAlign=\"space-between center\" class=\"footer\">\r\n    <button mat-icon-button color=\"warn\" (click)=\"showOptionsExport()\">\r\n      <mat-icon>download_for_offline</mat-icon>\r\n      Exportar data\r\n    </button>\r\n    <amb-paginator\r\n      [length]=\"totalRecords\"\r\n      [pageSize]=\"pageSize\"\r\n      [pageIndex]=\"0\"\r\n      (onChangePage)=\"changePage($event)\"\r\n    ></amb-paginator>\r\n  </div>\r\n</amb-container>\r\n"
        },
        {
            "name": "ListUserComponent",
            "id": "component-ListUserComponent-d0b5e0b48e5c0ae1c773a5ebcd5c22a807dad100a08dedb78bf9739acd4ced915412971ac2f072dbad89478050133851c1ec908ce05953451156e418136310df",
            "file": "projects/system/src/app/modules/user/interfaces/list-user/list-user.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-list-user",
            "styleUrls": [
                "./list-user.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./list-user.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "exportOptions",
                    "defaultValue": "{\r\n    name: 'users',\r\n    filename: 'users',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ExportOptions",
                    "optional": false,
                    "description": "",
                    "line": 34,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "iconName",
                    "defaultValue": "'faces'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "messages",
                    "defaultValue": "{\r\n    confirm: '¿Está seguro de eliminar?',\r\n    insert: 'Usuario insertado',\r\n    update: 'Usuario actualizado',\r\n    delete: 'Usuario eliminado',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Messages",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "metaData",
                    "defaultValue": "[\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n    { field: 'correo', title: 'Correo' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "metaDataExport",
                    "defaultValue": "[\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n    { field: 'correo', title: 'Correo' },\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MetaData[]",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "modal",
                    "defaultValue": "{\r\n    component: FormUserComponent,\r\n    class: 'modal-user',\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Modal",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "title",
                    "defaultValue": "'Users'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "currentPage",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "dataSourceOriginal",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "pageSize",
                    "defaultValue": "environment.pageSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "totalRecords",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "methodsClass": [
                {
                    "name": "changePage",
                    "args": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "pageIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "delete",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "record",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "record",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "''",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "openForm",
                    "args": [
                        {
                            "name": "data",
                            "type": "Entity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "Entity",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "null",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ],
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                },
                {
                    "name": "showOptionsExport",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "inheritance": {
                        "file": "BaseComponent"
                    }
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { LayoutService } from 'projects/system/src/app/config/services/layout.service';\r\nimport { BaseComponent, ExportOptions, Messages, Modal } from 'projects/system/src/app/shared/classes/base-component';\r\nimport { MetaData } from 'projects/system/src/app/shared/interfaces/meta-data.interface';\r\nimport { ExportService } from 'projects/system/src/app/shared/service/export.service';\r\nimport { UtilsService } from 'projects/system/src/app/shared/service/utils.service';\r\n\r\nimport { UserApplication } from '../../application/user.application';\r\nimport { User } from '../../domain/user';\r\nimport { UserRepository } from '../../domain/user.repository';\r\nimport { FormUserComponent } from '../form-user/form-user.component';\r\n\r\n@Component({\r\n  selector: 'amb-list-user',\r\n  templateUrl: './list-user.component.html',\r\n  styleUrls: ['./list-user.component.css'],\r\n})\r\nexport class ListUserComponent extends BaseComponent<User, UserRepository> {\r\n  title = 'Users';\r\n  iconName = 'faces';\r\n\r\n  metaData: MetaData[] = [\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n    { field: 'correo', title: 'Correo' },\r\n  ];\r\n\r\n  metaDataExport: MetaData[] = [\r\n    { field: 'id', title: 'ID' },\r\n    { field: 'nombre', title: 'Nombre' },\r\n    { field: 'correo', title: 'Correo' },\r\n  ];\r\n\r\n  exportOptions: ExportOptions = {\r\n    name: 'users',\r\n    filename: 'users',\r\n  };\r\n\r\n  messages: Messages = {\r\n    confirm: '¿Está seguro de eliminar?',\r\n    insert: 'Usuario insertado',\r\n    update: 'Usuario actualizado',\r\n    delete: 'Usuario eliminado',\r\n  };\r\n\r\n  modal: Modal = {\r\n    component: FormUserComponent,\r\n    class: 'modal-user',\r\n  };\r\n\r\n  constructor(\r\n    protected override layoutService: LayoutService,\r\n    protected override exportService: ExportService,\r\n    protected override utilsService: UtilsService,\r\n    protected userApplication: UserApplication\r\n  ) {\r\n    super(layoutService, utilsService, exportService, userApplication);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./list-user.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "exportService",
                        "type": "ExportService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userApplication",
                        "type": "UserApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 49,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "exportService",
                        "type": "ExportService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "utilsService",
                        "type": "UtilsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userApplication",
                        "type": "UserApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": "BaseComponent",
            "templateData": "<amb-title title=\"{{ title }}\" [iconName]=\"iconName\">\r\n  <button mat-raised-button color=\"primary\" (click)=\"openForm()\">\r\n    <mat-icon>add</mat-icon>\r\n    <span>ADD DRIVER</span>\r\n  </button>\r\n</amb-title>\r\n\r\n<amb-container>\r\n  <perfect-scrollbar class=\"heightMaxPerfectScrollBar\">\r\n    <amb-table [metaData]=\"metaData\" [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"actions\">\r\n        <th mat-header-cell *matHeaderCellDef></th>\r\n        <td mat-cell *matCellDef=\"let row\" class=\"align-right\">\r\n          <button\r\n            mat-icon-button\r\n            color=\"primary\"\r\n            matTooltip=\"EDIT\"\r\n            (click)=\"openForm(row)\"\r\n          >\r\n            <mat-icon>edit</mat-icon>\r\n          </button>\r\n          <button\r\n            mat-icon-button\r\n            color=\"accent\"\r\n            matTooltip=\"DELETE\"\r\n            (click)=\"delete(row.id)\"\r\n          >\r\n            <mat-icon>delete</mat-icon>\r\n          </button>\r\n        </td>\r\n      </ng-container>\r\n    </amb-table>\r\n  </perfect-scrollbar>\r\n  <div fxLayout fxLayoutAlign=\"space-between center\" class=\"footer\">\r\n    <button mat-icon-button color=\"warn\" (click)=\"showOptionsExport()\">\r\n      <mat-icon>download_for_offline</mat-icon>\r\n      Exportar data\r\n    </button>\r\n    <amb-paginator\r\n      [length]=\"totalRecords\"\r\n      [pageSize]=\"pageSize\"\r\n      [pageIndex]=\"0\"\r\n      (onChangePage)=\"changePage($event)\"\r\n    ></amb-paginator>\r\n  </div>\r\n</amb-container>\r\n"
        },
        {
            "name": "LoaderComponent",
            "id": "component-LoaderComponent-bcb97739572fe11e90221ef61041e6f8f158516791d78c3f6f5e281ca535c17de8294a0dd9f12e947ab3c87dac69cfab49a57d3c442bea2e9d95d2b343201d97",
            "file": "projects/system/src/app/shared/components/loader/loader.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-loader",
            "styleUrls": [
                "./loader.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./loader.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amb-loader',\r\n  templateUrl: './loader.component.html',\r\n  styleUrls: ['./loader.component.css']\r\n})\r\nexport class LoaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 100000000;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.contenedor {\r\n  width: 100vw;\r\n  height: 100vh;\r\n  z-index: 100000000;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\nh2 {\r\n  color: white;\r\n}\r\n",
                    "styleUrl": "./loader.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"contenedor\" fxLayout fxLayoutAlign=\"center center\">\r\n  <div fxLayout=\"column\" fxLayoutGap=\"20px\" fxLayoutAlign=\"start center\">\r\n    <mat-spinner></mat-spinner>\r\n    <!--     <h2>Ejecutando...</h2> -->\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-ec1a12b128b1533e564dd2cac7529ff5f75ec397cd9de56a7e5968bf170d8b698f5277b718ca933b84f31c70112f9974274aeae65b63e5b60e986b56ae546255",
            "file": "projects/system/src/app/core/interfaces/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-login",
            "styleUrls": [
                "./login.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { LayoutService } from '../../../config/services/layout.service';\r\n\r\n@Component({\r\n  selector: 'amb-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css'],\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  constructor(private layoutService: LayoutService) {\r\n    this.layoutService.configuration = { header: false, menu: false };\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".container-app {\r\n  height: 100vh;\r\n  background-image: url(../../../../assets/img/background.png);\r\n}\r\n\r\n.titleApp h2 {\r\n  color: whitesmoke;\r\n  font-size: 35px;\r\n  line-height: 46px;\r\n  text-align: center;\r\n  font-weight: normal;\r\n}\r\n\r\n.login {\r\n  background-color: whitesmoke;\r\n}\r\n",
                    "styleUrl": "./login.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "layoutService",
                        "type": "LayoutService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"container-app\" fxLayout fxLayoutAlign=\"space-between\">\r\n  <div\r\n    class=\"titleApp\"\r\n    fxLayout\r\n    fxFlex=\"1 1 30%\"\r\n    fxLayoutAlign=\"center center\"\r\n    fxHide.lt-md\r\n  >\r\n    <h2>Sistema de Ambulancias</h2>\r\n  </div>\r\n\r\n  <div\r\n    class=\"login\"\r\n    fxLayout\r\n    fxFlex=\"1 1 30%\"\r\n    fxFlex.lt-md=\"1 1 100%\"\r\n    fxLayoutAlign=\"center center\"\r\n  >\r\n    <amb-form-login></amb-form-login>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "MenuComponent",
            "id": "component-MenuComponent-bfc52d1081001fcc76e9b8ee6f64f1b2ef505ae7670fffaffffc6c9282e552532f7de8cb11eb62affa8298bbdbaa40396f52753d8a5ee9a6f772e94bce804385",
            "file": "projects/system/src/app/core/interfaces/menu/menu.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-menu",
            "styleUrls": [
                "./menu.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./menu.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amb-menu',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css']\r\n})\r\nexport class MenuComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "mat-nav-list {\r\n  width: 85%;\r\n  margin: 0 auto;\r\n  overflow: hidden;\r\n}\r\n\r\nmat-list-item {\r\n  color: white;\r\n  border-radius: 8px;\r\n  margin-top: 10px !important;\r\n}\r\n\r\na,\r\na:link,\r\na:visited,\r\na:active {\r\n  color: rgba(255, 255, 255, 0.5) !important;\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n  display: block;\r\n  width: 100%;\r\n}\r\n\r\na:hover {\r\n  color: white !important;\r\n}\r\n\r\na span {\r\n  display: inline-block;\r\n  padding-left: 24px;\r\n}\r\n\r\n.activeLink {\r\n  background-color: rgba(255, 255, 255, 0.1);\r\n  color: white !important;\r\n}\r\n\r\n.activeLink a,\r\n.activeLink a:link,\r\n.activeLink a:visited,\r\n.activeLink a:active {\r\n  color: white !important;\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n  display: block;\r\n  width: 100%;\r\n}\r\n",
                    "styleUrl": "./menu.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-nav-list>\r\n  <mat-list-item class=\"menu\" routerLinkActive=\"activeLink\">\r\n    <a routerLink=\"/dashboard\">\r\n      <button mat-button>\r\n        <mat-icon>dashboard</mat-icon>\r\n        <span>Dashboard</span>\r\n      </button>\r\n    </a>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item\r\n    class=\"menu\"\r\n    routerLinkActive=\"activeLink\"\r\n    *rolesAllowed=\"'MEDIC,ADMIN'\"\r\n  >\r\n    <a routerLink=\"/medic\">\r\n      <button mat-button>\r\n        <mat-icon>personal_injury</mat-icon>\r\n        <span>Medics</span>\r\n      </button>\r\n    </a>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item class=\"menu\" routerLinkActive=\"activeLink\">\r\n    <a routerLink=\"/driver\">\r\n      <button mat-button>\r\n        <mat-icon>directions_bus</mat-icon>\r\n        <span>Drivers</span>\r\n      </button>\r\n    </a>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item class=\"menu\" routerLinkActive=\"activeLink\">\r\n    <a routerLink=\"/history\">\r\n      <button mat-button>\r\n        <mat-icon>medical_information</mat-icon>\r\n        <span>Histories</span>\r\n      </button>\r\n    </a>\r\n  </mat-list-item>\r\n\r\n  <mat-list-item class=\"menu\" routerLinkActive=\"activeLink\">\r\n    <a routerLink=\"/user\">\r\n      <button mat-button>\r\n        <mat-icon>face</mat-icon>\r\n        <span>Users</span>\r\n      </button>\r\n    </a>\r\n  </mat-list-item>\r\n</mat-nav-list>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "PaginatorComponent",
            "id": "component-PaginatorComponent-9e932880e832baeefe9c4b95bd41c090a9a0e809667f41edbdfdd4b536c116eeee9f5bf40ff3fa14d6a83bedf6d39132274f7981b5b60b346702acd8d5a7dd26",
            "file": "projects/system/src/app/shared/components/paginator/paginator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-paginator",
            "styleUrls": [
                "./paginator.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./paginator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "length",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "pageSize",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onChangePage",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter<number>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "pageEvent",
                    "args": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "PageEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { PageEvent } from '@angular/material/paginator';\r\n\r\n@Component({\r\n  selector: 'amb-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrls: ['./paginator.component.css'],\r\n})\r\nexport class PaginatorComponent implements OnInit {\r\n  @Input() length: number = 0;\r\n  @Input() pageSize: number = 0;\r\n  @Input() pageIndex: number = 0;\r\n  @Output() onChangePage: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  pageEvent(event: PageEvent) {\r\n    this.onChangePage.emit(event.pageIndex);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./paginator.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-paginator\r\n  [length]=\"length\"\r\n  [pageSize]=\"pageSize\"\r\n  [pageIndex]=\"pageIndex\"\r\n  showFirstLastButtons=\"true\"\r\n  (page)=\"pageEvent($event)\"\r\n></mat-paginator>\r\n"
        },
        {
            "name": "PhotoComponent",
            "id": "component-PhotoComponent-b2f7fa61ea2dc1d5c901182bb9c6564bbb9bd6104684fa3cb6f9ed8692f54666a3e5f3f96e5725f4df1a7a8fb3ffe9bff809c31c15a8a9ee465557908bb37476",
            "file": "projects/system/src/app/shared/components/photo/photo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => PhotoComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "amb-photo",
            "styleUrls": [
                "./photo.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./photo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "photoByDefault",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "file",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'file'"
                        }
                    ]
                },
                {
                    "name": "isUsingWebCam",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "onChange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "onTouched",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "photo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'photo'"
                        }
                    ]
                },
                {
                    "name": "statusHover",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "triggerSnapshot",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "File",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "changeOriginPhoto",
                    "args": [
                        {
                            "name": "event",
                            "type": "MatSlideToggleChange",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MatSlideToggleChange",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadImage",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "loadPhotoFromUrlOrDataUrl",
                    "args": [
                        {
                            "name": "urlOrPath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "urlOrPath",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onFileDropped",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onImageCapture",
                    "args": [
                        {
                            "name": "webcamImage",
                            "type": "WebcamImage",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 97,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "webcamImage",
                            "type": "WebcamImage",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectImage",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "takePhoto",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "triggerAsObservable",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 93,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ElementRef, forwardRef, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { WebcamImage } from 'ngx-webcam';\r\nimport { environment } from 'projects/system/src/environments/environment';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'amb-photo',\r\n  templateUrl: './photo.component.html',\r\n  styleUrls: ['./photo.component.css'],\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: forwardRef(() => PhotoComponent),\r\n      multi: true,\r\n    },\r\n  ],\r\n})\r\nexport class PhotoComponent implements OnInit {\r\n  @ViewChild('photo') photo: ElementRef;\r\n  @ViewChild('file') file: ElementRef;\r\n  @Input() photoByDefault: string = '';\r\n\r\n  isUsingWebCam = false;\r\n  statusHover = false;\r\n\r\n  triggerSnapshot = new Subject<void>();\r\n\r\n  value: File;\r\n\r\n  onChange: any;\r\n  onTouched: any;\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  writeValue(value: File): void {\r\n    if (value) {\r\n      this.value = value;\r\n    }\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  onFileDropped(file: File) {\r\n    console.log(file);\r\n    if (!file.type.startsWith('image/') || file.size > 5000000) {\r\n      return;\r\n    }\r\n\r\n    this.onTouched();\r\n    this.onChange(file);\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = (response: any) => {\r\n      const base64 = response.target.result;\r\n      this.loadPhotoFromUrlOrDataUrl(base64);\r\n    };\r\n\r\n    reader.readAsDataURL(file);\r\n  }\r\n\r\n  loadPhotoFromUrlOrDataUrl(urlOrPath: string) {\r\n    this.photo.nativeElement.style.backgroundImage = `url(${urlOrPath})`;\r\n  }\r\n\r\n  loadImage() {\r\n    this.file.nativeElement.click();\r\n    return false;\r\n  }\r\n\r\n  selectImage(event: any) {\r\n    const file: File = event.target.files[0];\r\n    this.onFileDropped(file);\r\n  }\r\n\r\n  changeOriginPhoto(event: MatSlideToggleChange) {\r\n    this.isUsingWebCam = !this.isUsingWebCam;\r\n  }\r\n\r\n  takePhoto() {\r\n    this.triggerSnapshot.next();\r\n  }\r\n\r\n  triggerAsObservable() {\r\n    return this.triggerSnapshot.asObservable();\r\n  }\r\n\r\n  onImageCapture(webcamImage: WebcamImage) {\r\n    fetch(webcamImage.imageAsDataUrl)\r\n      .then((response) => response.arrayBuffer())\r\n      .then((buffer) => new File([buffer], 'avatar', { type: 'image/jpeg' }))\r\n      .then((file) => {\r\n        this.onFileDropped(file);\r\n        this.isUsingWebCam = false;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.photoByDefault) {\r\n      const path = `${environment.apiPath}/photos/${this.photoByDefault}`;\r\n      this.loadPhotoFromUrlOrDataUrl(path);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".contenedor {\r\n  width: 100%;\r\n  height: 207px;\r\n  border: 1px solid #ccc;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position-x: center;\r\n  background-position-y: center;\r\n}\r\n\r\n.contenedor.hover {\r\n  border: 1px dashed red;\r\n}\r\n\r\ninput[type=\"file\"] {\r\n  display: none;\r\n}\r\n",
                    "styleUrl": "./photo.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 47
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div\r\n  class=\"contenedor\"\r\n  upload\r\n  [ngClass]=\"{ hover: statusHover }\"\r\n  (onHover)=\"statusHover = $event\"\r\n  (onFileDropped)=\"onFileDropped($event)\"\r\n  #photo\r\n  (click)=\"loadImage()\"\r\n  *ngIf=\"!isUsingWebCam\"\r\n></div>\r\n<webcam\r\n  [width]=\"231\"\r\n  [height]=\"207\"\r\n  mirrorImage=\"never\"\r\n  *ngIf=\"isUsingWebCam\"\r\n  [trigger]=\"triggerAsObservable()\"\r\n  (imageCapture)=\"onImageCapture($event)\"\r\n></webcam>\r\n<div>\r\n  <mat-slide-toggle\r\n    color=\"primary\"\r\n    (change)=\"changeOriginPhoto($event)\"\r\n    [checked]=\"isUsingWebCam\"\r\n  >\r\n    Usar Webcam</mat-slide-toggle\r\n  >\r\n  <button\r\n    *ngIf=\"isUsingWebCam\"\r\n    mat-icon-button\r\n    color=\"primary\"\r\n    type=\"button\"\r\n    (click)=\"takePhoto()\"\r\n  >\r\n    <mat-icon>add_a_photo</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<input type=\"file\" #file (change)=\"selectImage($event)\" />\r\n"
        },
        {
            "name": "SocketComponent",
            "id": "component-SocketComponent-5cea43ee5673ac2aecab76e9e0ab2f07453687d4edd6f7c80f7f2b963cb871fa36d5ab1560270273af0eb0e2874c3f2e887d83627a967ee72ac588de286540cd",
            "file": "projects/system/src/app/modules/dashboard/interfaces/socket/socket.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-socket",
            "styleUrls": [
                "./socket.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./socket.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "data",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Graph[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "doughnut",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "gradient",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "legend",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "legendPosition",
                    "defaultValue": "'right'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "legendTitle",
                    "defaultValue": "'Vaccums'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "view",
                    "defaultValue": "[500, 450]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[number, number]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\nimport { SocketApplication } from '../../application/socket.application';\r\nimport { Graph } from '../../domain/graph.interface';\r\n\r\n@Component({\r\n  selector: 'amb-socket',\r\n  templateUrl: './socket.component.html',\r\n  styleUrls: ['./socket.component.css'],\r\n})\r\nexport class SocketComponent implements OnInit {\r\n  view: [number, number] = [500, 450];\r\n  legend = true;\r\n  legendPosition = 'right';\r\n  legendTitle = 'Vaccums';\r\n  gradient = true;\r\n  doughnut = true;\r\n\r\n  data: Graph[] = [];\r\n\r\n  constructor(private readonly socket: SocketApplication) {}\r\n\r\n  ngOnInit(): void {\r\n    this.socket.listen('dataupdate').subscribe((data: Graph[]) => {\r\n      this.data = data;\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./socket.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "socket",
                        "type": "SocketApplication",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "socket",
                        "type": "SocketApplication",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<ngx-charts-pie-chart\r\n  [view]=\"view\"\r\n  [results]=\"data\"\r\n  [gradient]=\"gradient\"\r\n  [legend]=\"legend\"\r\n  [legendTitle]=\"legendTitle\"\r\n  [doughnut]=\"doughnut\"\r\n>\r\n</ngx-charts-pie-chart>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-4e07a8e6c3728d2ea6d6606eb8e740bdd98325c70b92c03207c8e165bab1e89e5b686960e3baaf86ecfed9ea6e5adf1fba68df9bb90be8374653844baf63ca97",
            "file": "projects/system/src/app/shared/components/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-table",
            "styleUrls": [
                "./table.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "dataSource",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "{}",
                    "decorators": []
                },
                {
                    "name": "metaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "MetaData[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "columnDefs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<MatColumnDef>",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "MatColumnDef, {descendants: true}"
                        }
                    ]
                },
                {
                    "name": "listFields",
                    "defaultValue": "['id', 'name']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "table",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatTable<any>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatTable, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "changes",
                            "type": "SimpleChanges",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "row",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChildren, Input, OnInit, QueryList, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { MatColumnDef, MatTable } from '@angular/material/table';\r\n\r\nimport { MetaData } from '../../interfaces/meta-data.interface';\r\n\r\n@Component({\r\n  selector: 'amb-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.css'],\r\n})\r\nexport class TableComponent implements OnInit {\r\n  @Input() metaData: MetaData[];\r\n  @Input() dataSource = [];\r\n\r\n  @ViewChild(MatTable, { static: true }) table: MatTable<any>;\r\n  @ContentChildren(MatColumnDef, { descendants: true })\r\n  columnDefs: QueryList<MatColumnDef>;\r\n\r\n  // document.querySelector('table')\r\n  // document.querySelectorAll('table')\r\n\r\n  listFields = ['id', 'name'];\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.listFields = this.metaData.map((item) => item.field);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {}\r\n\r\n  ngAfterViewInit(): void {}\r\n\r\n  ngAfterContentInit(): void {\r\n    if (!this.columnDefs) {\r\n      return;\r\n    }\r\n\r\n    this.columnDefs.forEach((columnDef) => {\r\n      this.listFields.push(columnDef.name);\r\n      this.table.addColumnDef(columnDef);\r\n    });\r\n  }\r\n\r\n  select(row: any): void {\r\n    console.log(row);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".hoverRow:hover {\r\n  background-color: #f1eeee;\r\n}\r\n",
                    "styleUrl": "./table.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 22
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div fxLayout=\"column\">\r\n  <table mat-table [dataSource]=\"dataSource\">\r\n    <ng-content></ng-content>\r\n    <ng-container [matColumnDef]=\"item.field\" *ngFor=\"let item of metaData\">\r\n      <th mat-header-cell *matHeaderCellDef>{{ item.title }}</th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        {{ row[item.field] }}\r\n      </td>\r\n    </ng-container>\r\n    <!-- \r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef>Nombre</th>\r\n      <td mat-cell *matCellDef=\"let row\">\r\n        {{ row.name }}\r\n      </td>\r\n    </ng-container> -->\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"listFields; sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: listFields\" class=\"hoverRow\" (click)=\"select(row)\"></tr>\r\n  </table>\r\n</div>\r\n"
        },
        {
            "name": "TitleComponent",
            "id": "component-TitleComponent-0ff0a9725901cc2b7392e97fa7a45f563fac8afa8b3ef07e7ddd7e2af833ead6a3977eb9699e7e8f77581a50292f765fefb52396c79f54e85cb4a1d3b990350d",
            "file": "projects/system/src/app/shared/components/title/title.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "amb-title",
            "styleUrls": [
                "./title.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./title.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'amb-title',\r\n  templateUrl: './title.component.html',\r\n  styleUrls: ['./title.component.css'],\r\n})\r\nexport class TitleComponent implements OnInit {\r\n  @Input() title: string;\r\n  @Input() iconName: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".toolbar {\r\n  background-color: white !important;\r\n  height: 80px;\r\n  border-bottom: 1px solid rgb(226, 232, 240);\r\n  padding: 0 16px;\r\n}\r\n\r\n.info h2 {\r\n  font-size: 24px;\r\n  color: rgb(30, 41, 49);\r\n  margin: 0 0 0 16px;\r\n  padding: 0;\r\n  font-weight: 600;\r\n  line-height: 80px;\r\n}\r\n\r\n.info mat-icon {\r\n  font-size: 40px;\r\n  width: 40px;\r\n  height: 40px;\r\n}\r\n",
                    "styleUrl": "./title.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"toolbar\" fxLayout fxLayoutAlign=\"space-between\">\r\n  <div class=\"info\" fxLayout fxLayoutAlign=\"start center\">\r\n    <mat-icon color=\"primary\">{{ iconName }}</mat-icon>\r\n    <h2>{{ title }}</h2>\r\n  </div>\r\n\r\n  <div fxLayout fxLayoutAlign=\"start center\" fxLayoutGap=\"20px\">\r\n    <ng-content></ng-content>\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-97bd661740ac96d38ce731ce69ea92facaaf521a1ad741b4133938e877c7934fc61aeb241db62b882a76fd6aba7f317d22de6a7d6b3833de3c74eeae294edf18",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatPaginatorIntl } from '@angular/material/paginator';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LAYOUT_CONSTANTS } from './config/constants/layout.constant';\r\nimport { LayoutModule } from './config/modules/layout.module';\r\nimport { CoreModule } from './core/core.module';\r\nimport { TokenInterceptor } from './core/interceptors/token.interceptor';\r\nimport { LoginComponent } from './core/interfaces/login/login.component';\r\nimport { AuthApplication } from './modules/auth/application/auth.application';\r\nimport { StorageApplication } from './modules/auth/application/storage.application';\r\nimport { AuthModule } from './modules/auth/auth.module';\r\nimport { AuthInfrastructure } from './modules/auth/infrastructure/auth.infrastructure';\r\nimport { StorageInfrastructure } from './modules/auth/infrastructure/storage.infrastructure';\r\nimport { InvoiceApplication } from './modules/billing/application/invoice.application';\r\nimport { InvoiceInfrastructure } from './modules/billing/infrastructure/invoice.infrastructure';\r\nimport { CovidApplication } from './modules/dashboard/application/covid.application';\r\nimport { SocketApplication } from './modules/dashboard/application/socket.application';\r\nimport { CovidInfrastructure } from './modules/dashboard/infrastructure/covid.infrastructure';\r\nimport { SocketInfrastructure } from './modules/dashboard/infrastructure/socket.infrastructure';\r\nimport { DriverApplication } from './modules/driver/application/driver.application';\r\nimport { DriverInfrastructure } from './modules/driver/infrastructure/driver.infrastructure';\r\nimport { MedicApplication } from './modules/medic/application/medic.application';\r\nimport { MedicInfrastructure } from './modules/medic/infrastructure/medic.infrastructure';\r\nimport { RoleApplication } from './modules/role/application/role.application';\r\nimport { RoleInfrastructure } from './modules/role/infrastructure/role.infrastructure';\r\nimport { UserApplication } from './modules/user/application/user.application';\r\nimport { UserInfrastructure } from './modules/user/infrastructure/user.infrastructure';\r\nimport { Paginator } from './shared/classes/paginator';\r\nimport { AuthenticationGuard } from './shared/guards/authentication.guard';\r\nimport { SharedModule } from './shared/shared.module';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  {\r\n    path: 'driver',\r\n    loadChildren: () =>\r\n      \"import('./modules/driver/driver.module').then((m) => m.DriverModule)\",\r\n    canLoad: [AuthenticationGuard],\r\n  },\r\n  {\r\n    path: 'medic',\r\n    loadChildren: () =>\r\n      \"import('./modules/medic/medic.module').then((m) => m.MedicModule)\",\r\n    canLoad: [AuthenticationGuard],\r\n  },\r\n  {\r\n    path: 'history',\r\n    loadChildren: () =>\r\n      \"import('./modules/history/history.module').then((m) => m.HistoryModule)\",\r\n    canLoad: [AuthenticationGuard],\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    loadChildren: () =>\r\n      \"import('./modules/dashboard/dashboard.module').then(\\\n        (m) => m.DashboardModule\\\n      )\",\r\n    canLoad: [AuthenticationGuard],\r\n  },\r\n  {\r\n    path: 'user',\r\n    loadChildren: () =>\r\n      \"import('./modules/user/user.module').then((m) => m.UserModule)\",\r\n    canLoad: [AuthenticationGuard],\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: '/',\r\n  },\r\n];\r\n\r\nconst application = [\r\n  AuthApplication,\r\n  StorageApplication,\r\n  DriverApplication,\r\n  MedicApplication,\r\n  UserApplication,\r\n  RoleApplication,\r\n  InvoiceApplication,\r\n  CovidApplication,\r\n  SocketApplication,\r\n];\r\nconst infrastructure = [\r\n  AuthInfrastructure,\r\n  StorageInfrastructure,\r\n  DriverInfrastructure,\r\n  MedicInfrastructure,\r\n  UserInfrastructure,\r\n  RoleInfrastructure,\r\n  InvoiceInfrastructure,\r\n  CovidInfrastructure,\r\n  SocketInfrastructure,\r\n];\r\nconst interceptors = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    SharedModule,\r\n    CoreModule,\r\n    RouterModule.forRoot(routes),\r\n    LayoutModule.forRoot(LAYOUT_CONSTANTS),\r\n    AuthModule,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  providers: [\r\n    { provide: MatPaginatorIntl, useClass: Paginator },\r\n    ...infrastructure,\r\n    ...application,\r\n    ...interceptors,\r\n  ],\r\n})\r\nexport class AppModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "AuthApplication"
                        },
                        {
                            "name": "AuthInfrastructure"
                        },
                        {
                            "name": "CovidApplication"
                        },
                        {
                            "name": "CovidInfrastructure"
                        },
                        {
                            "name": "DriverApplication"
                        },
                        {
                            "name": "DriverInfrastructure"
                        },
                        {
                            "name": "InvoiceApplication"
                        },
                        {
                            "name": "InvoiceInfrastructure"
                        },
                        {
                            "name": "MedicApplication"
                        },
                        {
                            "name": "MedicInfrastructure"
                        },
                        {
                            "name": "RoleApplication"
                        },
                        {
                            "name": "RoleInfrastructure"
                        },
                        {
                            "name": "SocketApplication"
                        },
                        {
                            "name": "SocketInfrastructure"
                        },
                        {
                            "name": "StorageApplication"
                        },
                        {
                            "name": "StorageInfrastructure"
                        },
                        {
                            "name": "UserApplication"
                        },
                        {
                            "name": "UserInfrastructure"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AuthModule"
                        },
                        {
                            "name": "CoreModule"
                        },
                        {
                            "name": "LayoutModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AuthModule",
            "id": "module-AuthModule-7cd677be9579b4d26ffa0de76927fbe308fe0d8a429515b211d0810d634d5b6e7d7c9bca5b74a74a7262224faf3a313c0c972ecc6283bdefee331b548efa7ed0",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/auth/auth.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "CoreModule",
            "id": "module-CoreModule-e3bfc4b43aaa623aa10000107cb7d37dc12dedc35a90de700779cc0142cbda03789e6f7807ba74c52ba2c06c1e765eaf9e8afb2b88b65bd9032402256943bf56",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/core/core.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { FormLoginComponent } from './interfaces/components/form-login/form-login.component';\r\nimport { HeaderComponent } from './interfaces/header/header.component';\r\nimport { LoginComponent } from './interfaces/login/login.component';\r\nimport { MenuComponent } from './interfaces/menu/menu.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    FormLoginComponent,\r\n    MenuComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    FlexLayoutModule,\r\n    MatMenuModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatListModule,\r\n    RouterModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [HeaderComponent, MenuComponent],\r\n})\r\nexport class CoreModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormLoginComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "MenuComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MenuComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardModule",
            "id": "module-DashboardModule-1a8ad1d45f0a2691ed268ef3e2e9571295119916867d8e44e929ce2080856e66c19315cc3a3c7e7b9fc3f18ca84bd1038d089f25769914ea7787c60042bce0d1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/dashboard/dashboard.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { DashboardRoutingModule } from './dashboard-routing.module';\r\nimport { DashboardComponent } from './interfaces/dashboard/dashboard.component';\r\nimport { CovidComponent } from './interfaces/covid/covid.component';\r\nimport { SocketComponent } from './interfaces/socket/socket.component';\r\n\r\n@NgModule({\r\n  declarations: [DashboardComponent, CovidComponent, SocketComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DashboardRoutingModule,\r\n    SharedModule,\r\n    NgxChartsModule,\r\n  ],\r\n})\r\nexport class DashboardModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CovidComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "SocketComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DashboardRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DashboardRoutingModule",
            "id": "module-DashboardRoutingModule-0e4ad648a3fb57e93a66a3b0ca19b6288564a65ab3ef2872ac225cda0b476ea72a8930048645790998e40ac40246826ae46b2612af2167542f5a83667173dbf8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/dashboard/dashboard-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthenticationGuard } from '../../shared/guards/authentication.guard';\r\nimport { DashboardComponent } from './interfaces/dashboard/dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n    canActivate: [AuthenticationGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DashboardRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DriverModule",
            "id": "module-DriverModule-035bb98cce9a91b30d31bd84104f94a262544ff1661704ba4c0d973859479a00ff13b74b4362539901e25aa136b2b800f8b6eb0041e71a139facb4a20300160b",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/driver/driver.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { DriverRoutingModule } from './driver-routing.module';\r\nimport { FormDriverComponent } from './interfaces/views/form-driver/form-driver.component';\r\nimport { ListDriverComponent } from './interfaces/views/list-driver/list-driver.component';\r\n\r\n@NgModule({\r\n  declarations: [ListDriverComponent, FormDriverComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DriverRoutingModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n})\r\nexport class DriverModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormDriverComponent"
                        },
                        {
                            "name": "ListDriverComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "DriverRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "DriverRoutingModule",
            "id": "module-DriverRoutingModule-22759c4cc5d72e21c2370690d300bfd1fd2415a3e10c696e3e342d519a1324ccd2fef9c27e5bade28cad1c902e21c429726203842c37bd4953a42b369b498186",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/driver/driver-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthenticationGuard } from '../../shared/guards/authentication.guard';\r\nimport { ListDriverComponent } from './interfaces/views/list-driver/list-driver.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListDriverComponent,\r\n    canActivate: [AuthenticationGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class DriverRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HistoryModule",
            "id": "module-HistoryModule-cf7ca6f029ab89c7cc7eb6217b2b28937c315ae059df0e4ecfb685afc26851a70b6f1f582eb95e0a01a6010beccea36619a891cdee4e15613352f37c4a37a4c4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/history/history.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { HistoryRoutingModule } from './history-routing.module';\r\nimport { ListHistoryComponent } from './interfaces/list-history/list-history.component';\r\n\r\n@NgModule({\r\n  declarations: [ListHistoryComponent],\r\n  imports: [CommonModule, HistoryRoutingModule, SharedModule],\r\n})\r\nexport class HistoryModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ListHistoryComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "HistoryRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HistoryRoutingModule",
            "id": "module-HistoryRoutingModule-85fe2a992072b34f8363d58f04652aa98e751760da8b6b8bbeb94228279e17ff8abe4a56cdc16a01f949a3204498ea1f9d4cb215c1f9105fbfd75b34910ff0c7",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/history/history-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthenticationGuard } from '../../shared/guards/authentication.guard';\r\nimport { ListHistoryComponent } from './interfaces/list-history/list-history.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListHistoryComponent,\r\n    canActivate: [AuthenticationGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class HistoryRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LayoutModule",
            "id": "module-LayoutModule-7b62824076da68108a464e4932b4fc54ecbcb3227c831df1e538a24c92b49e3a4e9e0ad13363138a8b17f5fcb3268ea213e3835361f6753414fdb5a54ad36730",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/config/modules/layout.module.ts",
            "methods": [
                {
                    "name": "forRoot",
                    "args": [
                        {
                            "name": "config",
                            "type": "ILayout",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ModuleWithProviders<LayoutModule>",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "config",
                            "type": "ILayout",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "sourceCode": "import { ModuleWithProviders, NgModule } from '@angular/core';\r\n\r\nimport { ILayout } from '../interfaces/layout.interface';\r\nimport { LAYOUT_TOKEN } from '../tokens/layout.token';\r\n\r\n@NgModule()\r\nexport class LayoutModule {\r\n  static forRoot(config: ILayout): ModuleWithProviders<LayoutModule> {\r\n    return {\r\n      ngModule: LayoutModule,\r\n      providers: [\r\n        { provide: LAYOUT_TOKEN, useValue: config },\r\n        /* { provide: 'LAYOUT_CONFIG', useValue: config } */\r\n      ],\r\n    };\r\n  }\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MedicModule",
            "id": "module-MedicModule-2d1ac0599262b063f97da4293c1abb14e2334830ab3a0f9d0f82cb4a41b653fe21d7aa0a74210c2d310bbfb4d1c225874e0e483bc716668bba134ba57a052fa1",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/medic/medic.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { FormMedicComponent } from './interfaces/views/form-medic/form-medic.component';\r\nimport { ListMedicComponent } from './interfaces/views/list-medic/list-medic.component';\r\nimport { MedicRoutingModule } from './medic-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [FormMedicComponent, ListMedicComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MedicRoutingModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [],\r\n})\r\nexport class MedicModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormMedicComponent"
                        },
                        {
                            "name": "ListMedicComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "MedicRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "MedicRoutingModule",
            "id": "module-MedicRoutingModule-3da1f82fa873d59654eb5f1622aa1726ad120b0cc3289dc0e77d2fc027cd60945cd034caca77718ef2650f0434da2723da703ad61f6deff1d45376bafea54c73",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/medic/medic-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthenticationGuard } from '../../shared/guards/authentication.guard';\r\nimport { AuthorizationGuard } from '../../shared/guards/authorization.guard';\r\nimport { ListMedicComponent } from './interfaces/views/list-medic/list-medic.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListMedicComponent,\r\n    canActivate: [AuthenticationGuard, AuthorizationGuard],\r\n    data: { rolesAllowed: 'MEDIC,ADMIN' },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class MedicRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-fb0dffb50d397a5d35149d5a77de41a9aa8e59007a3a62926f0bdcd37206049c5cee092926e0f6d1b1b8362b75715365ce4d2ef4fe62471049864d29465885d9",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface, PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\r\nimport { WebcamModule } from 'ngx-webcam';\r\n\r\nimport { ConfirmComponent } from './components/confirm/confirm.component';\r\nimport { ContainerComponent } from './components/container/container.component';\r\nimport { ExportComponent } from './components/export/export.component';\r\nimport { LoaderComponent } from './components/loader/loader.component';\r\nimport { PaginatorComponent } from './components/paginator/paginator.component';\r\nimport { PhotoComponent } from './components/photo/photo.component';\r\nimport { TableComponent } from './components/table/table.component';\r\nimport { TitleComponent } from './components/title/title.component';\r\nimport { UploadDirective } from './directives/upload.directive';\r\nimport { RolesAllowedDirective } from './directives/roles-allowed.directive';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {\r\n  suppressScrollX: true,\r\n};\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TitleComponent,\r\n    ContainerComponent,\r\n    TableComponent,\r\n    PaginatorComponent,\r\n    ExportComponent,\r\n    ConfirmComponent,\r\n    LoaderComponent,\r\n    PhotoComponent,\r\n    UploadDirective,\r\n    RolesAllowedDirective,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatIconModule,\r\n    FlexLayoutModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    MatDialogModule,\r\n    MatProgressSpinnerModule,\r\n    WebcamModule,\r\n    MatSlideToggleModule,\r\n  ],\r\n  exports: [\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    TitleComponent,\r\n    ContainerComponent,\r\n    TableComponent,\r\n    PerfectScrollbarModule,\r\n    MatIconModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    PaginatorComponent,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatBottomSheetModule,\r\n    FlexLayoutModule,\r\n    ExportComponent,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    LoaderComponent,\r\n    PhotoComponent,\r\n    MatSelectModule,\r\n    RolesAllowedDirective,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: PERFECT_SCROLLBAR_CONFIG,\r\n      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG,\r\n    },\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ConfirmComponent"
                        },
                        {
                            "name": "ContainerComponent"
                        },
                        {
                            "name": "ExportComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "PaginatorComponent"
                        },
                        {
                            "name": "PhotoComponent"
                        },
                        {
                            "name": "RolesAllowedDirective"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TitleComponent"
                        },
                        {
                            "name": "UploadDirective"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ContainerComponent"
                        },
                        {
                            "name": "ExportComponent"
                        },
                        {
                            "name": "LoaderComponent"
                        },
                        {
                            "name": "PaginatorComponent"
                        },
                        {
                            "name": "PhotoComponent"
                        },
                        {
                            "name": "RolesAllowedDirective"
                        },
                        {
                            "name": "TableComponent"
                        },
                        {
                            "name": "TitleComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserModule",
            "id": "module-UserModule-6d09e905c1aeb2a803e67cce46625f3ce3eeaf2b16f2cfa4fa5f71c34fa8e73aea34484814e73763bdfc5b915019056c15b03deed8373ffaaaad04b02287e23e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/user/user.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { FormUserComponent } from './interfaces/form-user/form-user.component';\r\nimport { ListUserComponent } from './interfaces/list-user/list-user.component';\r\nimport { UserRoutingModule } from './user-routing.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ListUserComponent,\r\n    FormUserComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UserRoutingModule,\r\n    SharedModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class UserModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FormUserComponent"
                        },
                        {
                            "name": "ListUserComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "UserRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "UserRoutingModule",
            "id": "module-UserRoutingModule-629a15cfe0b718cb2bace579a25e696ae65d62e653d9415a7a248a873d0958ef25a4fde05781171b8c3403085fa479c5a3d41ee2dc578e3c02fa31a266e19e7c",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/system/src/app/modules/user/user-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AuthenticationGuard } from '../../shared/guards/authentication.guard';\r\nimport { ListUserComponent } from './interfaces/list-user/list-user.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListUserComponent,\r\n    canActivate: [AuthenticationGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class UserRoutingModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "application",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  AuthApplication,\r\n  StorageApplication,\r\n  DriverApplication,\r\n  MedicApplication,\r\n  UserApplication,\r\n  RoleApplication,\r\n  InvoiceApplication,\r\n  CovidApplication,\r\n  SocketApplication,\r\n]"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "DEFAULT_PERFECT_SCROLLBAR_CONFIG",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/shared/shared.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PerfectScrollbarConfigInterface",
                "defaultValue": "{\r\n  suppressScrollX: true,\r\n}"
            },
            {
                "name": "detail",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/modules/billing/domain/invoice.factory.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "InvoiceDetail[]",
                "defaultValue": "[\r\n  {\r\n    productId: 1,\r\n    cantidad: 1,\r\n    descripcion: 'Producto 1',\r\n    precio: 100,\r\n    total: 100,\r\n  },\r\n]"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/environments/environment.qa.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  pageSize: 20,\r\n  apiPath: 'https://api-cursoangular.cursos-dev.com',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  pageSize: 10,\r\n  apiPath: 'https://api-cursoangular.cursos-dev.com',\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  pageSize: 20,\r\n  apiPath: 'https://api-cursoangular.cursos-dev.com',\r\n}"
            },
            {
                "name": "infrastructure",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  AuthInfrastructure,\r\n  StorageInfrastructure,\r\n  DriverInfrastructure,\r\n  MedicInfrastructure,\r\n  UserInfrastructure,\r\n  RoleInfrastructure,\r\n  InvoiceInfrastructure,\r\n  CovidInfrastructure,\r\n  SocketInfrastructure,\r\n]"
            },
            {
                "name": "interceptors",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/app.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n]"
            },
            {
                "name": "invoice",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/modules/billing/domain/invoice.factory.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "InvoiceFactory.create(\r\n  'Juan Perez',\r\n  '12345678',\r\n  'Av. Siempre Viva 123',\r\n  '123456789',\r\n  'F001-0001',\r\n  '2020-01-23T14:37:00.000Z',\r\n  detail\r\n)"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LAYOUT_CONSTANTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/config/constants/layout.constant.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ILayout",
                "defaultValue": "{\r\n  header: true,\r\n  menu: true,\r\n  footer: true,\r\n}"
            },
            {
                "name": "LAYOUT_TOKEN",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/config/tokens/layout.token.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new InjectionToken('LAYOUT_CONFIG')"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "pdfFonts",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/shared/service/utils.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('pdfmake/build/vfs_fonts.js')"
            },
            {
                "name": "pdfMake",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/shared/service/utils.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('pdfmake/build/pdfmake.js')"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/system/src/app/shared/service/utils.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ACTION_PDF",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"view\" | \"download\" | \"print\"",
                "file": "projects/system/src/app/shared/components/export/export.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "AuthProperties",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/system/src/app/modules/auth/domain/auth.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "DriverProperties",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/system/src/app/modules/driver/domain/driver.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "DriverUpdate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/system/src/app/modules/driver/domain/driver.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "ExportOptions",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/system/src/app/shared/classes/base-component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "HistoryProperties",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/system/src/app/modules/history/domain/history.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "HistoryUpdate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/system/src/app/modules/history/domain/history.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "InvoiceProperties",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/system/src/app/modules/billing/domain/invoice.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "InvoiceUpdate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/system/src/app/modules/billing/domain/invoice.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "MedicProperties",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/system/src/app/modules/medic/domain/medic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "MedicUpdate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Partial<literal type>",
                "file": "projects/system/src/app/modules/medic/domain/medic.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Messages",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/system/src/app/shared/classes/base-component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Modal",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/system/src/app/shared/classes/base-component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "RoleProperties",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/system/src/app/modules/role/domain/role.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "RoleUpdate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/system/src/app/modules/role/domain/role.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "UserProperties",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/system/src/app/modules/user/domain/user.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "UserUpdate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/system/src/app/modules/user/domain/user.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "VisibleInputPassword",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"password\" | \"text\"",
                "file": "projects/system/src/app/core/interfaces/components/form-login/form-login.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/system/src/app/app.module.ts": [
                {
                    "name": "application",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  AuthApplication,\r\n  StorageApplication,\r\n  DriverApplication,\r\n  MedicApplication,\r\n  UserApplication,\r\n  RoleApplication,\r\n  InvoiceApplication,\r\n  CovidApplication,\r\n  SocketApplication,\r\n]"
                },
                {
                    "name": "infrastructure",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  AuthInfrastructure,\r\n  StorageInfrastructure,\r\n  DriverInfrastructure,\r\n  MedicInfrastructure,\r\n  UserInfrastructure,\r\n  RoleInfrastructure,\r\n  InvoiceInfrastructure,\r\n  CovidInfrastructure,\r\n  SocketInfrastructure,\r\n]"
                },
                {
                    "name": "interceptors",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/app.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  { provide: HTTP_INTERCEPTORS, useClass: TokenInterceptor, multi: true },\r\n]"
                }
            ],
            "projects/system/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/system/src/app/shared/shared.module.ts": [
                {
                    "name": "DEFAULT_PERFECT_SCROLLBAR_CONFIG",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/shared/shared.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PerfectScrollbarConfigInterface",
                    "defaultValue": "{\r\n  suppressScrollX: true,\r\n}"
                }
            ],
            "projects/system/src/app/modules/billing/domain/invoice.factory.ts": [
                {
                    "name": "detail",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/modules/billing/domain/invoice.factory.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InvoiceDetail[]",
                    "defaultValue": "[\r\n  {\r\n    productId: 1,\r\n    cantidad: 1,\r\n    descripcion: 'Producto 1',\r\n    precio: 100,\r\n    total: 100,\r\n  },\r\n]"
                },
                {
                    "name": "invoice",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/modules/billing/domain/invoice.factory.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "InvoiceFactory.create(\r\n  'Juan Perez',\r\n  '12345678',\r\n  'Av. Siempre Viva 123',\r\n  '123456789',\r\n  'F001-0001',\r\n  '2020-01-23T14:37:00.000Z',\r\n  detail\r\n)"
                }
            ],
            "projects/system/src/environments/environment.qa.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/environments/environment.qa.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  pageSize: 20,\r\n  apiPath: 'https://api-cursoangular.cursos-dev.com',\r\n}"
                }
            ],
            "projects/system/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  pageSize: 10,\r\n  apiPath: 'https://api-cursoangular.cursos-dev.com',\r\n}"
                }
            ],
            "projects/system/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  pageSize: 20,\r\n  apiPath: 'https://api-cursoangular.cursos-dev.com',\r\n}"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "projects/system/src/app/config/constants/layout.constant.ts": [
                {
                    "name": "LAYOUT_CONSTANTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/config/constants/layout.constant.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ILayout",
                    "defaultValue": "{\r\n  header: true,\r\n  menu: true,\r\n  footer: true,\r\n}"
                }
            ],
            "projects/system/src/app/config/tokens/layout.token.ts": [
                {
                    "name": "LAYOUT_TOKEN",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/config/tokens/layout.token.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new InjectionToken('LAYOUT_CONFIG')"
                }
            ],
            "stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ],
            "projects/system/src/app/shared/service/utils.service.ts": [
                {
                    "name": "pdfFonts",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/shared/service/utils.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('pdfmake/build/vfs_fonts.js')"
                },
                {
                    "name": "pdfMake",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/shared/service/utils.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('pdfmake/build/pdfmake.js')"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/system/src/app/shared/service/utils.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/system/src/app/shared/components/export/export.component.ts": [
                {
                    "name": "ACTION_PDF",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"view\" | \"download\" | \"print\"",
                    "file": "projects/system/src/app/shared/components/export/export.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/system/src/app/modules/auth/domain/auth.ts": [
                {
                    "name": "AuthProperties",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/system/src/app/modules/auth/domain/auth.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "projects/system/src/app/modules/driver/domain/driver.ts": [
                {
                    "name": "DriverProperties",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/system/src/app/modules/driver/domain/driver.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "DriverUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/system/src/app/modules/driver/domain/driver.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "projects/system/src/app/shared/classes/base-component.ts": [
                {
                    "name": "ExportOptions",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/system/src/app/shared/classes/base-component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Messages",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/system/src/app/shared/classes/base-component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Modal",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/system/src/app/shared/classes/base-component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "projects/system/src/app/modules/history/domain/history.ts": [
                {
                    "name": "HistoryProperties",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/system/src/app/modules/history/domain/history.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "HistoryUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/system/src/app/modules/history/domain/history.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "projects/system/src/app/modules/billing/domain/invoice.ts": [
                {
                    "name": "InvoiceProperties",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/system/src/app/modules/billing/domain/invoice.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "InvoiceUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/system/src/app/modules/billing/domain/invoice.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "projects/system/src/app/modules/medic/domain/medic.ts": [
                {
                    "name": "MedicProperties",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/system/src/app/modules/medic/domain/medic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "MedicUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Partial<literal type>",
                    "file": "projects/system/src/app/modules/medic/domain/medic.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "projects/system/src/app/modules/role/domain/role.ts": [
                {
                    "name": "RoleProperties",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/system/src/app/modules/role/domain/role.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "RoleUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/system/src/app/modules/role/domain/role.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "projects/system/src/app/modules/user/domain/user.ts": [
                {
                    "name": "UserProperties",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/system/src/app/modules/user/domain/user.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "UserUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/system/src/app/modules/user/domain/user.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "projects/system/src/app/core/interfaces/components/form-login/form-login.component.ts": [
                {
                    "name": "VisibleInputPassword",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"password\" | \"text\"",
                    "file": "projects/system/src/app/core/interfaces/components/form-login/form-login.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/system/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "application",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "infrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/app.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "interceptors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/config/constants/layout.constant.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LAYOUT_CONSTANTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/config/interfaces/layout.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ILayout",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/config/services/layout.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LayoutService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/config/tokens/layout.token.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LAYOUT_TOKEN",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/application/base-application.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BaseApplication",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/domain/base.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Base",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/domain/base.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResultPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/infrastructure/base-infrastructure.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BaseInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/interceptors/token.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "TokenInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/interfaces/components/form-login/form-login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormLoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/interfaces/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/interfaces/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/core/interfaces/menu/menu.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MenuComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/application/auth.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthApplication",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/application/storage.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StorageApplication",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/domain/auth.factory.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AuthFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/domain/auth.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthRepository",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/domain/auth.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Auth",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/domain/auth.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthOptional",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/domain/auth.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AuthRequired",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/domain/storage.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StorageRepository",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/domain/tokens.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ITokens",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/infrastructure/auth.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/auth/infrastructure/storage.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "StorageInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/application/invoice.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InvoiceApplication",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/domain/detail.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InvoiceDetail",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/domain/invoice.factory.ts",
                "type": "class",
                "linktype": "classe",
                "name": "InvoiceFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/domain/invoice.factory.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "detail",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/domain/invoice.factory.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "invoice",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/domain/invoice.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InvoiceRepository",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/domain/invoice.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Invoice",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/domain/invoice.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InvoiceOptional",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/domain/invoice.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "InvoiceRequired",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/billing/infrastructure/invoice.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "InvoiceInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/application/covid.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CovidApplication",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/application/socket.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SocketApplication",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/domain/covid.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CovidRepository",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/domain/external.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "External",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/domain/graph.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Graph",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/domain/socket.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SocketRepository",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/infrastructure/covid.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CovidInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/infrastructure/socket.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SocketInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/interfaces/covid/covid.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CovidComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/interfaces/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/dashboard/interfaces/socket/socket.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SocketComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/application/driver.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DriverApplication",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/domain/driver.factory.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DriverFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/domain/driver.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DriverRepository",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/domain/driver.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Driver",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/domain/driver.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DriverOptional",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/domain/driver.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DriverRequired",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/infrastructure/driver.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DriverInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/interfaces/views/form-driver/form-driver.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormDriverComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/driver/interfaces/views/list-driver/list-driver.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListDriverComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/history/application/history.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HistoryApplication",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/history/domain/history.factory.ts",
                "type": "class",
                "linktype": "classe",
                "name": "HistoryFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/history/domain/history.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HistoryRepository",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/history/domain/history.ts",
                "type": "class",
                "linktype": "classe",
                "name": "History",
                "coveragePercent": 0,
                "coverageCount": "0/20",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/history/domain/history.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HistoryOptional",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/history/domain/history.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HistoryRequired",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/history/infrastructure/history.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "HistoryInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/history/interfaces/list-history/list-history.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListHistoryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/application/medic.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MedicApplication",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/domain/medic.factory.ts",
                "type": "class",
                "linktype": "classe",
                "name": "MedicFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/domain/medic.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MedicRepository",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/domain/medic.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Medic",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/domain/medic.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MedicOptional",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/domain/medic.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MedicRequired",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/infrastructure/medic.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MedicInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/interfaces/views/form-medic/form-medic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormMedicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/medic/interfaces/views/list-medic/list-medic.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListMedicComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/role/application/role.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RoleApplication",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/role/domain/role.factory.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RoleFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/role/domain/role.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoleRepository",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/role/domain/role.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Role",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/role/domain/role.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoleOptional",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/role/domain/role.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RoleRequired",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/role/infrastructure/role.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RoleInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/application/user.application.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserApplication",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/domain/user.factory.ts",
                "type": "class",
                "linktype": "classe",
                "name": "UserFactory",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/domain/user.repository.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserRepository",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/domain/user.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/domain/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserOptional",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/domain/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserRequired",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/infrastructure/user.infrastructure.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserInfrastructure",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/interfaces/form-user/form-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/interfaces/form-user/form-user.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IRole",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/modules/user/interfaces/list-user/list-user.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ListUserComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/classes/base-component.ts",
                "type": "class",
                "linktype": "classe",
                "name": "BaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/classes/paginator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Paginator",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/components/confirm/confirm.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/components/container/container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/components/export/export.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ExportComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/components/loader/loader.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/components/paginator/paginator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaginatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/components/photo/photo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhotoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/24",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/components/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/components/title/title.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TitleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/directives/roles-allowed.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "RolesAllowedDirective",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/directives/upload.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UploadDirective",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/guards/authentication.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthenticationGuard",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/guards/authorization.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthorizationGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/interfaces/meta-data.interface.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "MetaData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/service/export.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ExportService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/service/utils.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UtilsService",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/service/utils.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pdfFonts",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/service/utils.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pdfMake",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/service/utils.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/app/shared/shared.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DEFAULT_PERFECT_SCROLLBAR_CONFIG",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/environments/environment.qa.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/system/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}